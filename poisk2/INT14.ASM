;-----INT 14-------------------------------------------------------------
; RS232_IO
;       ЭТА ПРОГРАММА ОБСЛУЖИВАЕТ RS232
;
;   00H инициализировать коммуникационный порт
;     Вход: DX = номер порта (0-1)
;           AL = битовые флаги параметра инициализации:
;           ┌─7─┬─6─┬─5─┬─4─┬─3──┬─2──┬─1─┬─0─┐
;           │ -- бод -- │четность│стоп│длина  │
;           └───┴───┴───┴───┴────┴─╥──┴───┴───┘
;            ╚════╦════╝  ╚═╦═╝    ║   ╚═══╩══ длина слова
;                 ║         ║      ║           10=7 бит; 11=8 бит
;                 ║         ║      ╚═════════ стоп-бит: 0=1; 1=2;
;                 ║         ╚════════════════ код четности
;                 ║                            x0=нет; 01=нечет; 11=чет
;                 ╚══════════════════════════ бод:       000=110; 100=1200
;                                                         001=150; 101=2400
;                                                         010=300; 110=4800
;                                                         011=600; 111=9600
;    Выход: AH = статус коммуникаций (см. ниже)
;
;▀▀▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;   01H послать символ через выбранный порт RS-232
;     Вход: DX = номер порта (0-1)
;           AL = посылаемый символ
;    Выход: AL сохранен.
;           Если установлен бит 7 в AH, то произошла ошибка, и
;              AH (биты 6-0) = статус линии связи (см. AH ниже)
;▀▀▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;    02H получить символ через выбранный порт RS-232
;     Вход: DX = номер порта (0-1)
;    Выход: AL = полученный символ
;           AH ненулевой, если произошла ошибка
;▀▀▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;    03H дать статус порта связи
;     Вход: DX = номер порта (0-1)
;    Выход: AX = статус порта связи
;           AH = статус линии
;           ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;           bit 7: TIME OUT Этот бит используется, если символ не был отправлен
;			    или принят в заданное время. В этом случае все ос-
;			    тальные биты состояния линии и модема не имеют зна-
;			    чения.
;           bit 6: Передатчик пуст (все символы переданы).
;           bit 5: Передающий буфер пуст.
;           bit 4: Обнаружена последовательность BREAK.
;           bit 3: Типовая ошибка, например неправильный бит останова.
;           bit 2: Ошибка в четности.
;           bit 1: Переполнение приемника.
;           bit 0: Данные приема присутствуют.
;────────────────────────────────────────────────────────────────────────────────
;
;           AL = статус модема
;	    ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;   	    bit 7: приемная линия получила сигнал.
;   	    bit 6: кольцевой индикатор.
;   	    bit 5: набор данных обнаружен.
;   	    bit 4: очистка пересылки.
;   	    bit 3: прием данных.
;   	    bit 2: конец данных выделен.
;   	    bit 1: набор данны прочитан.
;   	    bit 0: очистка отправлена.
;
;-----------------------------------------------------------------------------
;
;	COM1 и COM2 инициализирует BIOS.
;       при инициализации заполняются следующие ячейки
;
;     0:400  RS232_BASE[0]  DW  3F8H - адрес регистра данных передатчика COM1.
;     0:402  RS232_BASE[2]  DW  2F8H - адрес регистра данных передатчика COM2.
;
;     0:47C  RS232_TIM_OUT[0]  DB  01 - Время ожидания прихода символа для COM1.
;			               При необходимости можно поставить другое.
;     0:47D  RS232_TIM_OUT[1]  DB  01
;     0:47E  RS232_TIM_OUT[2]  DB  01
;     0:47F  RS232_TIM_OUT[3]  DB  01
;
;     Для инициализации COM3 и COM4 необходимо записать адрес в
;
;     0:404  RS232_BASE[4]  DW  ?
;     0:406  RS232_BASE[6]  DW  ?
;
;     и использовать функцию  AH = 0
;-----------------------------------------------------------------------------

        ASSUME  CS:CODE,DS:DATA
        ORG     0E729H
A1      LABEL   WORD            ; ТАБЛИЦА ЗНАЧЕНИЙ ДЛЯ ИНИЦИАЛИЗАЦИИ
        DW      1047            ; 110 БОД
        DW      768             ; 150
        DW      384             ; 300
        DW      192             ; 600
        DW      96              ; 1200
        DW      48              ; 2400
        DW      24              ; 4800
        DW      12              ; 9600

RS232_IO        PROC    FAR

;-----  ВХОД В ПРЕРЫВАНИЕ

        STI
        PUSH    DS
        PUSH    DX
        PUSH    SI
        PUSH    DI
        PUSH    CX
        PUSH    BX
        MOV     SI,DX                   ; В SI НОМЕР COM ПОРТА ИСПОЛЬЗУЕТСЯ
					; ДЛЯ АДРЕСАЦИИ К ЯЧЕЙКАМ RS232_BASE
        MOV     DI,DX                   ; DI ИСПОЛЬЗУЕТСЯ ДЛЯ АДРЕСАЦИИ К
					; RS232_TIM_OUT
        SHL     SI,1
        CALL    DDS
        MOV     DX,RS232_BASE[SI]       ; ПОЛУЧЕНИЕ БАЗОВОГО АДРЕСА
        OR      DX,DX                   ; ТЕСТ НЕ ИНИЦИАЛИЗИРОВАННОГО ПОРТА
        JZ      A3                      ; ВОЗВРАТ
        OR      AH,AH                   ; ТЕСТ ДЛЯ (AH)=0
        JZ      A4                      ; ИНИЦИАЛИЗАЦИЯ
        DEC     AH                      ; ТЕСТ ДЛЯ (AH)=1
        JZ      A5                      ; ПЕРЕСЫЛКА AL
        DEC     AH                      ; ТЕСТ ДЛЯ (AH)=2
        JZ      A12                     ; ЧТЕНИЕ В AL
A2:
        DEC     AH                      ; ТЕСТ ДЛЯ (AH)=3
        JNZ     A3
        JMP     A18                     ; ПОЛУЧЕНИЕ СТАТУСА
A3:                                     ; ВЫХОД
        POP     BX
        POP     CX
        POP     DI
        POP     SI
        POP     DX
        POP     DS
        IRET

;-----  ИНИЙИАЛИЗАЦИЯ

A4:
        MOV     AH,AL                   ; ПАРАМЕТРЫ ИНИЦИАЛИЗАЦИИ В AH
        ADD     DX,3                    ; В DX - 3FBH (2FBH) АДРЕС РЕГИСТРА
					; УПРАВЛЕНИЯ ЛИНИЕЙ LCR
        MOV     AL,80H
        OUT     DX,AL                   ; УСТАНОВКА DLAB=1 ДЛЯ ПОЛУЧЕНИЯ ДОС-
					; ТУПА К ФИКСАТОРАМ ДЕЛИТЕЛЯ

;-----  ОПРЕДЕЛЕНИЕ СКОРОСТИ ПЕРЕДАЧИ

        MOV     DL,AH                   ; ВЫДЕЛЕНИЕ ИЗ БАЙТА ИНИЦИАЛИЗАЦИИ
        MOV     CL,4                    ; СКОРОСТИ ПЕРЕДАЧИ.
        ROL     DL,CL                   ;
        AND     DX,0EH                  ;
        MOV     DI,OFFSET A1            ;  ПОЛУЧЕНИЕ СМЕЩЕНИЯ ТАБЛИЦЫ ДЕЛИТЕЛЯ.
        ADD     DI,DX                   ;
        MOV     DX,RS232_BASE[SI]       ;  ПОЛУЧЕНИЕ БАЗОВОГО АДРЕСА
        INC     DX                      ;  АДРЕС СТАРШЕГО БАЙТА РЕГИСТРА ДЕЛИТ.
        MOV     AL,CS:[DI]+1            ;  ПОЛУЧЕНИЕ ВЕЛИЧИНЫ ДЕЛИТЕЛЯ
        OUT     DX,AL                   ;  ЗАПИСЬ СТАРШЕГО БАЙТА
        DEC     DX
        MOV     AL,CS:[DI]              ;
        OUT     DX,AL                   ;  ЗАПИСЬ МЛАДШЕГО БАЙТА
        ADD     DX,3                    ;  РЕГИСТР УПРАВЛЕНИЯ МОДЕМОМ
        MOV     AL,AH                   ;  ПАРАМЕТРЫ
        AND     AL,01FH                 ;  ОБНУЛЕНИЕ 7,6 И 5 БИТ
        OUT     DX,AL                   ;  ЗАПИСЬ ПАРАМЕТРОВ
        DEC     DX
        DEC     DX                      ; РЕГИСТР ИДЕНТИФИКАЦИИ ПРЕРЫВАНИЙ
        MOV     AL,0
        OUT     DX,AL                   ; ВСЕ ПРЕРЫВАНИЯ ВЫКЛЮЧЕНЫ
        JMP     SHORT A18               ; COM_STATUS

;-----  ПЕРЕСЫЛКА СИМВОЛА AH = 1

A5:
        PUSH    AX
        ADD     DX,4                    ; РЕГИСТР УПРАВЛЕНИЯ МОДЕМОМ
        MOV     AL,3                    ; ВЫХОД DTR И RTC В АКТИВНОМ СОСТОЯНИИ
        OUT     DX,AL
        INC     DX                      ; РЕГИСТР СОСТОЯНИЯ МОДЕМА
        INC     DX
        MOV     BH,30H                  ; ОЧИСТКА ДЛЯ ПЕРЕДАЧИ И ГОТОВНОСТЬ
					; ПЕРЕДАЧИ
        CALL    WAIT_FOR_STATUS         ; ОЖИДАНИЕ
        JE      A9                      ; ДА, ПЕРЕДАЧА СИМВОЛА
A7:
        POP     CX
        MOV     AL,CL                   ; ПЕРЕЗАГРУЗКА БАЙТА ДАННЫХ
A8:
        OR      AH,80H                  ; ИНДИКАЦИЯ TIME OUT
        JMP     A3                      ; ВЫХОД
A9:                                     ; CLEAR_TO_SEND
        DEC     DX                      ; РЕГИСТР СОСТОЯНИЯ ЛИНИИ
A10:                                    ; WAIT_SEND
        MOV     BH,20H                  ; РЕГИСТР ДАННЫХ ПЕРЕДАТЧИКА ПУСТ
        CALL    WAIT_FOR_STATUS                                          
        JNZ     A7                      ; ВОЗВРАТ С УСТАНОВЛЕННЫМ TIME OUT 
A11:                                    ; OUT_CHAR
        SUB     DX,5                    ; ПОРТ ДАННЫХ
        POP     CX                      ; ВОЗВРАЩЕНИЕ ДАННЫХ
        MOV     AL,CL                   ; 
        OUT     DX,AL                   ; ВЫВОД СИМВОЛА
        JMP     A3                      ; ВЫХОД

;-----  ЧТЕНИЕ AH = 2

A12:
        ADD     DX,4                    ; РЕГИСТР УПРАВЛЕНИЯ МОДЕМОМ
        MOV     AL,1                    ; ПЕРЕВОД DTR В АКТИВНОЕ СОСТОЯНИЕ
        OUT     DX,AL
        INC     DX                      ; РЕГИСТР СОСТОЯНИЯ МОДЕМА        
        INC     DX
A13:                                    ; WAIT_DSR
        MOV     BH,20H                  ; ГОТОВНОСТЬ К ПЕРЕДАЧИ ДАННЫХ
        CALL    WAIT_FOR_STATUS         ;                             
        JNZ     A8                      ; ВОЗВРАТ С ОШИБКОЙ
A15:                                    ; WAIT_DSR_END
        DEC     DX                      ; РЕГИСТР СОСТОЯНИЯ ЛИНИИ
A16:                                    ; WAIT_RECV
        MOV     BH,1                    ; ИНДИКАТОР ГОТОВНОСТИ ДАННЫХ В ПРИЕМНИКЕ
        CALL    WAIT_FOR_STATUS         ;                         
        JNZ     A8                      ; TIME OUT ОШИБКА   
A17:                                    ; GET_CHAR
        AND     AL,00011110B            ; ТЕСТ ОШИБОЧНОГО СОСТОЯНИЯ               
        MOV     DX,RS232_BASE[SI]       ; ПОРТ ДАННЫХ
        IN      AL,DX                   ; ЧТЕНИЕ СИМВОЛА         
        JMP     A3                      ; ВЫХОД      

;-----  СТАТУС AH = 3            

A18:
        MOV     DX,RS232_BASE[SI]
        ADD     DX,5                    ; РЕГИСТР СОСТОЯНИЯ ЛИНИИ
        IN      AL,DX                   ;                        
        MOV     AH,AL                   ; ПЕРЕВОД В AH ДЛЯ ВОЗВРАТА
        INC     DX                      ; РЕГИСТР СОСТОЯНИЯ МОДЕМА      
        IN      AL,DX                   ; 
        JMP     A3                      ; ВОЗВРАТ
;----------------------------------------
; ОЖИДАНИЕ ДЛЯ ПОЛУЧЕНИЯ СОСТОЯНИЯ      :
;                                       :
; ВХОД :                                :
;       BH=МАСКА                        :
;       DX=АДРЕС РЕГИСТРА СТАТУСА       :
; ВЫХОД:                                 :
;       ZF УСТАНОВЛЕН = ВРЕМЯ ВЫШЛО     :
;       AH=СТАТУС                       :
;----------------------------------------
WAIT_FOR_STATUS PROC    NEAR
        MOV     BL,RS232_TIM_OUT[DI]    ; ЧТЕНИЕ СЧЕТЧИКА
WFS0:
        SUB     CX,CX
WFS1:
        IN      AL,DX                   ; ПОЛУЧЕНИЕ СТАУСА
        MOV     AH,AL                   ; СОХРАНЕНИЕ В AH
        AND     AL,BH                   ; ВЫДИЛЕНИЕ БИТОВ ДЛЯ ТЕСТА
        CMP     AL,BH                   ; СРАВНЕНИЕ С МАСКОЙ
        JE      WFS_END                 ; ВЫХОД С СБРОШЕННЫМ ZF
        LOOP    WFS1                    ; ПОВТОРИТЬ СНОВА
        DEC     BL
        JNZ     WFS0

        OR      BH,BH                   ; УСТАНОВИТЬ ZF
WFS_END:
        RET
WAIT_FOR_STATUS ENDP
RS232_IO        ENDP

;F3D     DB      'ERROR. (RESUME = F1 KEY)',13,10        ; ERROR PROMPT

