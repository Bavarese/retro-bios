seg000:0000 ; +---------------------------------------------------------------------------------+
seg000:0000 ; | Disassembly of LANG.ROM of DEC Rainbow-100 B (8086 part; Z80 see separate file) |
seg000:0000 ; |    (23-020e5-00.bin) - German, French, English                                  |     
seg000:0000 ; |    CRC(8638712f) SHA1(8269b0d95dc6efbe67d500dac3999df4838625d8))                |       
seg000:0000 ; +---------------------------------------------------------------------------------+
seg000:0000 ; ¦    This file is generated by The Interactive Disassembler (IDA)                 ¦
seg000:0000 ; ¦     Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>                   ¦
seg000:0000 ; ¦                      Licensed to: Freeware version                              ¦
seg000:0000 ; +---------------------------------------------------------------------------------+
seg000:0000 ; | LAST MODIFIED: July 17th 2014                                                   |
seg000:0000 ; +---------------------------------------------------------------------------------+
seg000:0000 ;
seg000:0000 ; Input MD5   : 7998DEADD1CDC041EB5B3A0DB55DEB54
seg000:0000
seg000:0000 ; ---------------------------------------------------------------------------
seg000:0000 ; File Name   : 23-020e5-00.bin
seg000:0000 ; Format      : Binary file
seg000:0000 ; Base Address: 0000h Range: 0000h - 4000h Loaded length: 4000h
seg000:0000
seg000:0000                 .8086
seg000:0000                 .model flat
seg000:0000
seg000:0000 ; ---------------------------------------------------------------------------
seg000:0000
seg000:0000 ; Segment type: Regular
seg000:0000 seg000          segment byte public ''
seg000:0000                 assume cs:seg000
seg000:0000                 assume es:nothing, ss:nothing, ds:nothing
seg000:0000
seg000:0000 loc_0:                                  ; DATA XREF: seg000:SETUP_VIDEO_HARDWARE__loc_3024w
seg000:0000                 jmp     ROM_ConsoleOut__loc_1A4B
seg000:0003 ; ---------------------------------------------------------------------------
seg000:0003
seg000:0003 loc_3:                                  ; DATA XREF: SET_UP_PREPARE__sub_2C40+Fw
seg000:0003                                         ; SET_UP_PREPARE__sub_2C40+24w ...
seg000:0003                 jmp     ESCAPE_in_AL__loc_1A29 ; USED BY LOW ROM >=5 times:
seg000:0003                                         ; ===> Emit SINGLE ESCAPE CODE in AL <===
seg000:0003                                         ;
seg000:0006 ; ---------------------------------------------------------------------------
seg000:0006                 jmp     ROM_ConsoleOut__loc_1A4B ; USED BY LOW ROM (2DCD, 3841, 388C):
seg000:0006                                         ;          ===> ROM_ConsoleOut     /* AL<-ASCII char <==
seg000:0009 ; ---------------------------------------------------------------------------
seg000:0009                 jmp     locret_1D31     ; retn
seg000:000C ; ---------------------------------------------------------------------------
seg000:000C                 jmp     loc_1B9D        ; PARAMETER: AL-Register
seg000:000C                                         ; - USED BY LOW ROM / see F400:39DE
seg000:000F ; ---------------------------------------------------------------------------
seg000:000F                 jmp     WAIT_FOR_EFEF5_1E__loc_1C17 ; Only waits for a certain event (efef5 = 1e)
seg000:0012
seg000:0012 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:0012
seg000:0012 ; Attributes: thunk
seg000:0012
seg000:0012 j_ConsoleLev1In__sub_1F6F proc near     ; CODE XREF: GET_KEY__sub_2CCF:WAIT_FOR_KEY__loc_2CD0p
seg000:0012                                         ; ConsoleLev2Stat__sub_36E3+66p
seg000:0012                 jmp     ConsoleLev1In__sub_1F6F ; ==> ROM_ConsoleLev1In    0x06
seg000:0012 j_ConsoleLev1In__sub_1F6F endp          ;   code -> AX (16 BIT !);
seg000:0012                                         ;   status->CL
seg000:0012                                         ;
seg000:0012                                         ; - USED BY LOW ROM (offset 1E34)
seg000:0012                                         ; - CALLS  RAW_KBD_DATA__sub_275B  (and processes data)
seg000:0012                                         ; - CALLED BY ConsoleLev2Stat__sub_36E3
seg000:0015 ; ---------------------------------------------------------------------------
seg000:0015                 jmp     RING_BELL_etc__loc_27D3 ; Rings keyboard - bell (but does more)...
seg000:0015                                         ;
seg000:0015                                         ; - used once when keyboard is powered up
seg000:0015                                         ; - CALLED BY BOOT ROM (IRQ routine @ offset 366e)
seg000:0018 ; ---------------------------------------------------------------------------
seg000:0018                 jmp     loc_27A0        ; ? calls sub_36DC in BOOT ROM...
seg000:001B
seg000:001B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:001B
seg000:001B ; Attributes: thunk
seg000:001B
seg000:001B j_INIT_VARS__sub_27FF proc near         ; CODE XREF: KBD_ISR__sub_2930+5Cp
seg000:001B                 jmp     CON_INIT_VARS__sub_27FF ; INITIALIZE VARIABLES (for terminal emulation?)
seg000:001B j_INIT_VARS__sub_27FF endp
seg000:001B
seg000:001E ; ---------------------------------------------------------------------------
seg000:001E                 jmp     KBD_SEND_PORT11_LOW_LEVEL__loc_27B3 ;
seg000:001E                                         ;              USED BY LOW ROM (offset 3640) VERY EARLY.
seg000:001E                                         ;              (right before $fd = JUMP TO POWER UP / KEYBOARD)
seg000:0021
seg000:0021 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:0021
seg000:0021 ; Attributes: thunk
seg000:0021
seg000:0021 j_KBD_CMD_AL__sub_2846 proc near        ; CODE XREF: seg000:1D28p
seg000:0021                                         ; KBD_CHK_MORE__sub_299F:HOLD_SCREEN_ON__loc_29F9p ...
seg000:0021                 jmp     KBD_CMD_AL__sub_2846 ; USED BY LOW ROM :
seg000:0021 j_KBD_CMD_AL__sub_2846 endp             ; ==> SEND KEYBOARD_COMMAND_AL  /* AL <- KBD_COMMAND ($a7 is BELL for example)  -  AH <- ?? <==
seg000:0021                                         ; SEE TABLE 8-4 "Peripheral Commands in Hexadecimal" of Technical Manual (8-25)
seg000:0024 ; ---------------------------------------------------------------------------
seg000:0024                 jmp     RAW_KBD_DATA__sub_275B ; RAW KEYBOARD DATA - evaluates keyboard buffer beginning @ 0f71
seg000:0024                                         ; - SEE LOW ROM offset 1F0E
seg000:0024                                         ; : (94) code->AL;
seg000:0024                                         ;   (95) flags->AH;
seg000:0024                                         ;   (96) status->CL
seg000:0027 ; ---------------------------------------------------------------------------
seg000:0027                 jmp     ALL_KEYS_UP__0F90_b6__loc_29B1 ; USED BY LOW ROM @ offset 36FC (and this ROM @ 2915)  KEYBOARD!
seg000:002A ; ---------------------------------------------------------------------------
seg000:002A                 jmp     KBD_ISR_8251__loc_2880 ;  Keyboard (8251A) Interrupt - VECTOR ADDRESS $98
seg000:002D ; ---------------------------------------------------------------------------
seg000:002D                 jmp     AL_to_KBD_BUFF_0F71_ff__sub_2AC7 ;
seg000:002D                                         ; MOVE value from AL (and AH = value from EEF8F)
seg000:002D                                         ;  TO (2-BYTE) KEYBOARD BUFFER
seg000:002D                                         ;  ranging from 0f71 - 0f8d.
seg000:002D                                         ;
seg000:002D                                         ; Rings BELL and lights WAIT LED (if buffer full).
seg000:002D                                         ;
seg000:002D                                         ; - used by LOW ROM (offset 35CF)
seg000:0030 ; ---------------------------------------------------------------------------
seg000:0030                 jmp     KBD_DIAG_n_ERROR13__sub_2B06 ; Keyboard diagnostics (may give ERROR 13 if certain cond. are met)
seg000:0030                                         ; - USED ONCE when keyboard is powered up
seg000:0030                                         ; - CALLED BY BOOT ROM (IRQ routine @ offset 3678)
seg000:0033 ; ---------------------------------------------------------------------------
seg000:0033                 jmp     CHECK_NVM__loc_318D ; USED BY LOW ROM @ offset 289f.
seg000:0033                                         ; Make NVM readable & reset to defaults if necessary.
seg000:0033                                         ;
seg000:0033                                         ; Calls FROM_NVM_CHAR_SCREEN_BELL_etc__loc_3198
seg000:0036 ; ---------------------------------------------------------------------------
seg000:0036                 jmp     INIT_KBD_VARS_loc_3797 ;
seg000:0036                                         ;    ==> INITIALIZE keyboard related variables <==
seg000:0036                                         ;
seg000:0036                                         ; DS:0FB7
seg000:0036                                         ; DS:0FCD
seg000:0036                                         ; DS:0FCF
seg000:0036                                         ;
seg000:0036                                         ; - USED BY LOW ROM (offsets 1DAE, 3817) -
seg000:0039 ; ---------------------------------------------------------------------------
seg000:0039                 jmp     ConsoleLev2Stat__sub_36E3 ; status->CL  ?
seg000:0039                                         ; - USED BY BOOT ROM - offset 1E01
seg000:0039                                         ; - CALLED BY KBD_LOOP__loc_36B0 * below *
seg000:0039                                         ; - CALLS j_ConsoleLev1In__sub_1F6F  !
seg000:003C ; ---------------------------------------------------------------------------
seg000:003C                 jmp     KBD_LOOP__loc_36B0 ; ==> KEYBOARD INPUT.
seg000:003C                                         ;  ROM_ConsoleLev2In    0x02
seg000:003C                                         ;      (keycode) => AL;  status->CL (?) <==
seg000:003C                                         ; - USED BY LOW ROM (SETUP @ 03ec) + 1E0A + 1e15
seg000:003C                                         ; - CALLS ConsoleLev2Stat__sub_36E3 * above *
seg000:003F ; ---------------------------------------------------------------------------
seg000:003F                 jmp     VIDEO_to_PRN1__loc_37A3 ; Hardcopy or line-by-line output from video to printer?
seg000:003F                                         ; USED BY LOW ROM @ offsets $25A3 + $38d9
seg000:003F                                         ;
seg000:003F                                         ; Similar to  VIDEO_to_PRN2__loc_37ED , except there is more processing here.
seg000:0042 ; ---------------------------------------------------------------------------
seg000:0042                 jmp     VIDEO_to_PRN2__loc_37ED ; Hardcopy or line-by-line output from video to printer?
seg000:0042                                         ; PARAMETER: DH ?  RESULT: AL ?
seg000:0042                                         ; - USED BY LOW ROM @ offsets $3A14, 25B5 ...
seg000:0045 ; ---------------------------------------------------------------------------
seg000:0045                 jmp     SEND_TO_PRN2__sub_38E9 ;  * SEND BYTE TO PRINTER PORT *  ( PARAMETER: AL )
seg000:0045                                         ; - USED BY LOW ROM:
seg000:0045                                         ;   Called multiple times (>= 5) / 25BE  + 2DEC + 2E39 + 2E42 + 3A21
seg000:0048 ; ---------------------------------------------------------------------------
seg000:0048                 jmp     FROM_NVM_CHAR_SCREEN_BELL_etc__loc_3198 ;
seg000:0048                                         ; FROM NVM:
seg000:0048                                         ; - keyclick (settings / and or volume)
seg000:0048                                         ; - bell (settings / and or volume)
seg000:0048                                         ; + more
seg000:0048                                         ;
seg000:0048                                         ; CALLED ONCE BY BOOT ROM offset $0439
seg000:0048                                         ; Also called here by CHECK_NVM__loc_318D
seg000:0048                                         ; GENERATES ERROR 14 IF NVM IS INCORRECT
seg000:004B ; ---------------------------------------------------------------------------
seg000:004B                 jmp     CHARSET__NVM_8F__sub_2FDC
seg000:004B ; ---------------------------------------------------------------------------
seg000:004E                 db  15h                 ; 8615 : 00
seg000:004F                 db  86h ; å
seg000:0050                 db    0
seg000:0051                 db  16h                 ; 8616 : "Press SELECT to choose keyboard..." (English) / magic value
seg000:0052                 db  86h ; å
seg000:0053                 db    0
seg000:0054 TXT_GRAFIX_8054 db 0Dh,12h,12h,12h,0Ch,0Dh,12h,12h,12h,0Ch,0Dh,12h,12h,12h,0Ch,0
seg000:0064 TXT_GRAFIX_8064 db 19h,'   ',19h,19h,'   ',19h,19h,'   ',19h,0
seg000:0074 TXT_GRAFIX_8074 db 0Eh,12h,12h,12h,0Bh,0Eh,12h,12h,12h,0Bh,0Eh,12h,12h,12h,0Bh,0
seg000:0084 TXT_GRAFIX_8084 db '     ',0Dh,12h,12h,12h,0Ch,'     ',0
seg000:0084                                         ; DATA XREF: CON__sub_1DC1+6r
seg000:0084                                         ; ConsoleLev1In__sub_1F6F+67r ...
seg000:0094 TXT_GRAFIX_8094 db '     ',19h,' ^ ',19h,'     ',0
seg000:0094                                         ; DATA XREF: ConsoleLev1In__sub_1F6F:loc_2015r
seg000:0094                                         ; ConsoleLev1In__sub_1F6F:loc_2026r ...
seg000:00A4 TXT_GRAFIX_80a4 db '     ',0Eh,12h,12h,12h,0Bh,'     ',0
seg000:00A4                                         ; DATA XREF: ENABLE_BELL_ES_A8__sub_2835+2r
seg000:00A4                                         ; ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A+Ar ...
seg000:00B4 TXT_GRAFIX_80b4 db 19h,'   ',19h,19h,' v ',19h,19h,'   ',19h,0
seg000:00C4                 db    1                 ;
seg000:00C4                                         ; --------------------------------------------
seg000:00C5                 db    2
seg000:00C6                 db  48h ; H             ; 0x8348 ; "25 - "
seg000:00C7                 db  83h ; â
seg000:00C8                 db  86h ; å             ; $8a86 : "Set-Up Defaults Stored"
seg000:00C9                 db  8Ah ; è             ;
seg000:00C9                                         ; --------------------------------------------
seg000:00CA                 db    3                 ; 3 : three 2-byte offsets following:
seg000:00CB                 db  65h ; e             ; 0x8265 : ESC[1;5;7m
seg000:00CC                 db  82h ; é
seg000:00CD                 db  96h ; û             ; 0x8696 : 'TESTING...',0
seg000:00CE                 db  86h ; å
seg000:00CF                 db  6Eh ; n             ; 0x826e ; ESC[0m + 0Ah + 0Dh
seg000:00D0                 db  82h ; é             ;
seg000:00D0                                         ; --------------------------------------------
seg000:00D1                 db    2
seg000:00D2                 db 0AEh ; «             ; $83ae : ESC[0;15H
seg000:00D3                 db  83h ; â
seg000:00D4                 db 0C0h ; +             ; $83c0 : ESC#3 "digital Rainbow 100" (until $8410)
seg000:00D5                 db  83h ; â             ;
seg000:00D5                                         ; --------------------------------------------
seg000:00D6                 db    2
seg000:00D7                 db 0B7h ; À             ; $83b7 : ESC[0;28H
seg000:00D8                 db  83h ; â
seg000:00D9                 db 0C0h ; +             ; $83c0 : ESC#3 "digital Rainbow 100" (until $8410)
seg000:00DA                 db  83h ; â             ;
seg000:00DA                                         ; --------------------------------------------
seg000:00DB unk_DB          db    2                 ; DATA XREF: seg000:356Er
seg000:00DC                 db  12h                 ; $8412 : 0a 0a ESC [8C
seg000:00DD                 db  84h ; ä
seg000:00DE                 db 0C0h ; +             ; $86c0 : Version
seg000:00DF                 db  86h ; å             ;
seg000:00DF                                         ; --------------------------------------------
seg000:00E0                 db    2
seg000:00E1                 db  19h                 ; $8419 : 0a 0a ESC[21C
seg000:00E2                 db  84h ; ä
seg000:00E3                 db 0C0h ; +             ; $86c0 : Version
seg000:00E4                 db  86h ; å             ;
seg000:00E4                                         ; --------------------------------------------
seg000:00E5                 db  2Fh ; /             ; 80e5 : 2f strings (not all given here):
seg000:00E6                 db  21h ; !
seg000:00E7                 db  84h ; ä             ; 8421 : DIGITAL EQUIPMENT CORPORATION 1983
seg000:00E8                 db 0DBh ; ¦
seg000:00E9                 db  86h ; å             ; 86db : ESC [33D
seg000:00EA                 db 0EDh ; Ý
seg000:00EB                 db  86h ; å             ; 86ed : "All Rights Reserved ESC[23D Press"
seg000:00EC                 db  58h ; X
seg000:00ED                 db  84h ; ä             ; 8458 : "A, B, C, D, W, S"
seg000:00EE                 db  61h ; a
seg000:00EF                 db  87h ; ç             ; $8761 : "or T"
seg000:00F0                 db  6Ah ; j
seg000:00F1                 db  84h ; ä             ; $846a : 0a 0a ESC [
seg000:00F2                 db 76h,87h              ;
seg000:00F2                 db 6Fh,84h              ;
seg000:00F2                 db 71h,84h              ;
seg000:00F2                 db 82h,87h              ; $8782 : "start from Drive"
seg000:00F2                 db 6Fh,84h              ; $846F : "A"
seg000:00F2                 db 75h,84h
seg000:00F2                 db 0B1h,87h
seg000:00F2                 db 79h,84h
seg000:00F2                 db 71h,84h
seg000:00F2                 db 82h,87h
seg000:00F2                 db 79h,84h
seg000:00F2                 db 75h,84h
seg000:00F2                 db 0B1h,87h
seg000:00F2                 db 7Bh,84h
seg000:00F2                 db 71h,84h
seg000:00F2                 db 82h,87h
seg000:00F2                 db 7Bh,84h
seg000:00F2                 db 75h,84h
seg000:00F2                 db 0B1h,87h
seg000:00F2                 db 7Dh,84h
seg000:00F2                 db 71h,84h
seg000:00F2                 db 82h,87h
seg000:00F2                 db 7Dh,84h
seg000:00F2                 db 75h,84h
seg000:00F2                 db 0B1h,87h
seg000:00F2                 db 7Fh,84h
seg000:00F2                 db 71h,84h
seg000:00F2                 db 82h,87h
seg000:00F2                 db 7Fh,84h
seg000:00F2                 db 75h,84h
seg000:00F2                 db 0B1h,87h
seg000:00F2                 db 81h,84h
seg000:00F2                 db 71h,84h
seg000:00F2                 db 0BDh,87h
seg000:00F2                 db 75h,84h
seg000:00F2                 db 1Dh,88h
seg000:00F2                 db 83h,84h
seg000:00F2                 db 71h,84h
seg000:00F2                 db 0EDh,87h
seg000:00F2                 db 85h,84h
seg000:00F2                 db 29h,88h
seg000:0144                 db    1
seg000:0145                 db  88h ; ê             ; *** OFFSETS FOR TEXT STRINGS:
seg000:0146                 db  84h ; ä             ; $8488 : "[CR][LF]..United States/Canada ...
seg000:0146                                         ; ( language / region selection displayed during initial setup )
seg000:0147                 db    2
seg000:0148                 db 0C7h ; Ã             ; $82c7 : "1 - "
seg000:0149                 db  82h ; é
seg000:014A                 db  42h ; B             ; 8a42 : "Main Board"
seg000:014B                 db  8Ah ; è             ;
seg000:014B                                         ;
seg000:014C                 db    2
seg000:014D                 db 0CCh ; ¦             ; $82cc : "2 - "
seg000:014E                 db  82h ; é
seg000:014F                 db  42h ; B             ; 8a42 : "Main Board"
seg000:0150                 db  8Ah ; è             ;
seg000:0150                                         ;
seg000:0151                 db    2
seg000:0152                 db  0Ch                 ; 830c : "14 - "
seg000:0153                 db  83h ; â
seg000:0154                 db  42h ; B             ; 8a42 : "Main Board"
seg000:0155                 db  8Ah ; è             ;
seg000:0155                                         ;
seg000:0156                 db    2
seg000:0157                 db 0FAh ; ·             ; $82fa : "11 - "
seg000:0158                 db  82h ; é
seg000:0159                 db  7Bh ; {             ; $887b : "System Load Incomplete"
seg000:015A                 db  88h ; ê             ;
seg000:015A                                         ;
seg000:015B                 db    2
seg000:015C                 db  3Ch ; <             ; $833c : "23 - "
seg000:015D                 db  83h ; â
seg000:015E                 db  38h ; 8             ; $8838 : "Non-System Diskette"
seg000:015F                 db  88h ; ê             ;
seg000:015F                                         ;
seg000:0160                 db    2
seg000:0161                 db 0EFh ; ´             ; $82ef : "9 - "
seg000:0162                 db  82h ; é
seg000:0163                 db  7Bh ; {             ; $887b : "System Load Incomplete"
seg000:0164                 db  88h ; ê             ;
seg000:0164                                         ;
seg000:0165                 db    2
seg000:0166                 db  30h ; 0             ; $8330 : "21 - "
seg000:0167                 db  83h ; â
seg000:0168                 db 0B1h ; ¦             ; $89b1 : "Drive Not Ready"
seg000:0169                 db  89h ; ë             ;
seg000:0169                                         ;
seg000:016A                 db    2
seg000:016B                 db  36h ; 6             ; $8336 : "22 - "
seg000:016C                 db  83h ; â
seg000:016D                 db 0D3h ; Ë             ; $88d3 : "Remove Card or Diskette"
seg000:016E                 db  88h ; ê             ;
seg000:016E                                         ;
seg000:016F                 db    2
seg000:0170                 db  12h                 ; $8312 : "16 - "
seg000:0171                 db  83h ; â
seg000:0172                 db  1Fh                 ; $891f : "Interrupts Off"
seg000:0173                 db  89h ; ë             ;
seg000:0173                                         ;
seg000:0174                 db    2
seg000:0175                 db  18h                 ; $8318 : "17 - "
seg000:0176                 db  83h ; â
seg000:0177                 db  42h ; B             ; $8a42 : "Main Board"
seg000:0178                 db  8Ah ; è             ;
seg000:0178                                         ;
seg000:0179                 db    2
seg000:017A                 db  1Eh                 ; $831e : "18 - "
seg000:017B                 db  83h ; â
seg000:017C                 db  42h ; B             ; $8a42 : "Main Board"
seg000:017D                 db  8Ah ; è             ;
seg000:017D                                         ;
seg000:017E                 db    2
seg000:017F                 db  4Eh ; N             ; $834e : "26 - "
seg000:0180                 db  83h ; â
seg000:0181                 db  42h ; B             ; $8a42 : "Main Board"
seg000:0182                 db  8Ah ; è             ;
seg000:0182                                         ;
seg000:0183                 db    2
seg000:0184                 db  54h ; T             ; $8354 : "27 - "
seg000:0185                 db  83h ; â
seg000:0186                 db  50h ; P             ; $8950 : "Memory Board"
seg000:0187                 db  89h ; ë             ;
seg000:0187                                         ;
seg000:0188                 db    2
seg000:0189                 db  24h ; $             ; $8324 : "19 - "
seg000:018A                 db  83h ; â
seg000:018B                 db  42h ; B             ; $8a42 : "Main Board"
seg000:018C                 db  8Ah ; è             ;
seg000:018C                                         ;
seg000:018D                 db    2
seg000:018E                 db 0F4h ; ¶             ; $82f4 : "10 - "
seg000:018F                 db  82h ; é
seg000:0190                 db  42h ; B             ; $8a42 : "Main Board"
seg000:0191                 db  8Ah ; è             ;
seg000:0191                                         ;
seg000:0192                 db    2
seg000:0193                 db  5Ah ; Z             ; $835a : "28 - "
seg000:0194                 db  83h ; â
seg000:0195                 db 0D6h ; Í             ; $8ad6 : "RX50 Controller Board"
seg000:0196                 db  8Ah ; è             ;
seg000:0196                                         ;
seg000:0197                 db    2
seg000:0198                 db  2Ah ; *             ; $832a : "20 - "
seg000:0199                 db  83h ; â
seg000:019A                 db  42h ; B             ; $8a42 : "Main Board"
seg000:019B                 db  8Ah ; è             ;
seg000:019B                                         ;
seg000:019C                 db    2
seg000:019D                 db  60h ; `             ; $8360 : "29 - "
seg000:019E                 db  83h ; â
seg000:019F                 db  42h ; B             ; $8a42 : "Main Board"
seg000:01A0                 db  8Ah ; è             ;
seg000:01A0                                         ;
seg000:01A1                 db    2
seg000:01A2                 db 0E5h ; Õ             ; $82e5 : "7 - "
seg000:01A3                 db  82h ; é
seg000:01A4                 db  7Bh ; {             ; $897b : "Drive A"
seg000:01A5                 db  89h ; ë             ;
seg000:01A5                                         ;
seg000:01A6                 db    2
seg000:01A7                 db 0E5h ; Õ             ; $82e5 : "7 - "
seg000:01A8                 db  82h ; é
seg000:01A9                 db  96h ; û             ; $8996 : "Drive B"
seg000:01AA                 db  89h ; ë             ;
seg000:01AA                                         ;
seg000:01AB                 db    2
seg000:01AC                 db 0EAh ; Û             ; $82ea : "8 - "
seg000:01AD                 db  82h ; é
seg000:01AE                 db  7Bh ; {             ; $897b : "Drive A"
seg000:01AF                 db  89h ; ë             ;
seg000:01AF                                         ;
seg000:01B0                 db    2
seg000:01B1                 db 0EAh ; Û             ; $82ea : "8 - "
seg000:01B2                 db  82h ; é
seg000:01B3                 db  96h ; û             ; $8996 : "Drive B"
seg000:01B4                 db  89h ; ë             ;
seg000:01B4                                         ;
seg000:01B5                 db    2
seg000:01B6                 db 0D1h ; Ð             ; $82d1 : "3 - "
seg000:01B7                 db  82h ; é
seg000:01B8                 db  7Bh ; {             ; $897b : "Drive A"
seg000:01B9                 db  89h ; ë             ;
seg000:01B9                                         ;
seg000:01BA                 db    2
seg000:01BB                 db 0D1h ; Ð             ; $82d1 : "3 - "
seg000:01BC                 db  82h ; é
seg000:01BD                 db  96h ; û             ; $8996 : "Drive B"
seg000:01BE                 db  89h ; ë             ;
seg000:01BE                                         ;
seg000:01BF                 db    2
seg000:01C0                 db 0D6h ; Í             ; $82d6 : "4 - "
seg000:01C1                 db  82h ; é
seg000:01C2                 db  7Bh ; {             ; $897b : "Drive A"
seg000:01C3                 db  89h ; ë             ;
seg000:01C3                                         ;
seg000:01C4                 db    2
seg000:01C5                 db 0D6h ; Í             ; $82d6 : "4 - "
seg000:01C6                 db  82h ; é
seg000:01C7                 db  96h ; û             ; $8996 : "Drive B"
seg000:01C8                 db  89h ; ë             ;
seg000:01C8                                         ;
seg000:01C9                 db    2
seg000:01CA                 db 0DBh ; ¦             ; $82db : "5 - "
seg000:01CB                 db  82h ; é
seg000:01CC                 db  7Bh ; {             ; $897b : "Drive A"
seg000:01CD                 db  89h ; ë             ;
seg000:01CD                                         ;
seg000:01CE                 db    2
seg000:01CF                 db 0DBh ; ¦             ; $82db : "5 - "
seg000:01D0                 db  82h ; é
seg000:01D1                 db  96h ; û             ; $8996 : "Drive B"
seg000:01D2                 db  89h ; ë             ;
seg000:01D2                                         ;
seg000:01D3                 db    2
seg000:01D4                 db 0E0h ; Ó             ; $82e0 : "6 - "
seg000:01D5                 db  82h ; é
seg000:01D6                 db  7Bh ; {             ; $897b : "Drive A"
seg000:01D7                 db  89h ; ë             ;
seg000:01D7                                         ;
seg000:01D8                 db    2
seg000:01D9                 db 0E0h ; Ó             ; $82e0 : "6 - "
seg000:01DA                 db  82h ; é
seg000:01DB                 db  96h ; û             ; $8996 : "Drive B"
seg000:01DC                 db  89h ; ë             ;
seg000:01DC                                         ;
seg000:01DD                 db    2
seg000:01DE                 db    0
seg000:01DF                 db  83h ; â             ; $8300 - "12 - "
seg000:01E0                 db  7Bh ; {
seg000:01E1                 db  89h ; ë             ; $897b : "Drive A"
seg000:01E1                                         ;
seg000:01E2                 db    2
seg000:01E3                 db    0
seg000:01E4                 db  83h ; â             ; $8300 - "12 - "
seg000:01E5                 db  96h ; û
seg000:01E6                 db  89h ; ë             ; $8996 : "Drive B"
seg000:01E6                                         ;
seg000:01E7                 db    2
seg000:01E8                 db  72h ; r             ; $8372 : "33 - "
seg000:01E9                 db  83h ; â
seg000:01EA                 db  1Ch                 ; $8b1c : "Contention"
seg000:01EB                 db  8Bh ; ï             ;
seg000:01EB                                         ;
seg000:01EC                 db    1
seg000:01ED                 db 0E7h ; þ             ; $89e7 : "See Owner's Manual - MESSAGE "
seg000:01EE                 db  89h ; ë             ;
seg000:01EE                                         ;
seg000:01EF                 db    1
seg000:01F0                 db  34h ; 4             ; $8234 : ESC[1;5;7m
seg000:01F1                 db  82h ; é             ;
seg000:01F1                                         ;
seg000:01F2                 db    1
seg000:01F3                 db  75h ; u             ; $8275 : ESC[0m
seg000:01F4                 db  82h ; é             ;
seg000:01F4                                         ;
seg000:01F5                 db    2
seg000:01F6                 db  66h ; f             ; $8366 : "30 - "
seg000:01F7                 db  83h ; â
seg000:01F8                 db  42h ; B             ; $8a42 : "Main Board"
seg000:01F9                 db  8Ah ; è             ;
seg000:01F9                                         ;
seg000:01FA                 db    2
seg000:01FB                 db  6Ch ; l             ; $836c : "31 - "
seg000:01FC                 db  83h ; â
seg000:01FD                 db  42h ; B             ; $8a42 : "Main Board"
seg000:01FE                 db  8Ah ; è             ;
seg000:01FE                                         ;
seg000:01FF                 db    2
seg000:0200                 db  84h ; ä             ; $8384 : "60 - "
seg000:0201                 db  83h ; â
seg000:0202                 db  42h ; B             ; $8a42 : "Main Board"
seg000:0203                 db  8Ah ; è             ;
seg000:0203                                         ;
seg000:0204                 db    2
seg000:0205                 db  78h ; x             ; $8378 : "40 - "
seg000:0206                 db  83h ; â
seg000:0207                 db  42h ; B             ; $8a42 : "Main Board"
seg000:0208                 db  8Ah ; è             ;
seg000:0208                                         ;
seg000:0209                 db    2
seg000:020A                 db  7Eh ; ~             ; $837e : "50 - "
seg000:020B                 db  83h ; â
seg000:020C                 db  42h ; B             ; $8a42 : "Main Board"
seg000:020D                 db  8Ah ; è             ;
seg000:020D                                         ;
seg000:020E                 db    2
seg000:020F                 db    6                 ; 8306 : "13 - "
seg000:0210                 db  83h ; â
seg000:0211                 db  6Ch ; l             ; 8a6c : "Keyboard"
seg000:0212                 db  8Ah ; è             ;
seg000:0212                                         ;
seg000:0213                 db    2
seg000:0214                 db  42h ; B             ; $8342 : "24 - "
seg000:0215                 db  83h ; â
seg000:0216                 db  38h ; 8             ; $8b38 : "New Memory Size = "
seg000:0217                 db  8Bh ; ï             ;
seg000:0217                                         ;
seg000:0218                 db    1
seg000:0219                 db  40h ; @             ; $8240 : ESC< (Enter ANSI mode)
seg000:021A                 db  82h ; é             ;
seg000:021A                                         ;
seg000:021B                 db    1
seg000:021C                 db  43h ; C             ; $8243 : ESC[?3l  (80 column)
seg000:021D                 db  82h ; é             ;
seg000:021D                                         ;
seg000:021E                 db    1
seg000:021F                 db  49h ; I             ; $8249 : ESC[?3h  (132 column)
seg000:0220                 db  82h ; é             ;
seg000:0220                                         ;
seg000:0221                 db    1
seg000:0222                 db  4Fh ; O             ; $824f : ESC[?5l : selects normal screen, a black screen background with white
seg000:0222                                         ; characters
seg000:0223                 db  82h ; é             ;
seg000:0223                                         ;
seg000:0224                 db    1
seg000:0225                 db  55h ; U             ; $8255 : ESC[2B
seg000:0226                 db  82h ; é             ;
seg000:0226                                         ;
seg000:0227                 db    1
seg000:0228                 db  5Ah ; Z             ; $825a : ESC#8 (screen alignment display / fill screen with "Es")
seg000:0229                 db  82h ; é             ;
seg000:0229                                         ;
seg000:022A ESCx3x1Hxx      db 1Bh,'[3;1H',1Bh,'[J',0 ; ; ******* START OF ZERO TERMINATED STRINGS (with escape codes)
seg000:0234 ESCx1x5x7m      db 1Bh,'[1;5;7m',0
seg000:023D ESC_M           db 1Bh,'M',0            ; ESC M = REVERSE INDEX: moves cursor up one line in same column. If cursor is at top margin,
seg000:023D                                         ; screen performs a scroll-down.
seg000:0240 ESC_LESS        db 1Bh,'<',0
seg000:0243 ESCxx3l         db 1Bh,'[?3l',0         ; [?3l sets the Rainbow to 80 column mode.
seg000:0249 ESCxx3h         db 1Bh,'[?3h',0         ; [?3h sets the Rainbow to 132 column mode.
seg000:024F ESCxx5l         db 1Bh,'[?5l',0         ; ESC[?5l : selects normal screen, a black screen background with white
seg000:024F                                         ; characters
seg000:0255 ESCxx2B         db 1Bh,'[2B',0
seg000:025A a8              db 1Bh,'#8',0           ; ESC#8 (screen alignment display / fill screen with "Es")
seg000:025E a16a            db 1Bh,'[16A',0Dh,0
seg000:0265 a157m           db 1Bh,'[1;5;7m',0
seg000:026E a0m_2           db 1Bh,'[0m',0Ah        ; "ESC [ 0 m"  - turn off all character attributes.
seg000:026E                 db 0Dh,0
seg000:0275 a0m_0           db 1Bh,'[0m',0Ah        ; "ESC [ 0 m"  - turn off all character attributes.
seg000:0275                 db 0Dh,0
seg000:027C a0k             db '  0K',0             ; RAM SIZES
seg000:0281 a64k            db ' 64K',0
seg000:0286 a128k           db '128K',0
seg000:028B a192k           db '192K',0
seg000:0290 a256k           db '256K',0
seg000:0295 a320k           db '320K',0
seg000:029A a384k           db '384K',0
seg000:029F a448k           db '448K',0
seg000:02A4 a512k           db '512K',0
seg000:02A9 a576k           db '576K',0
seg000:02AE a640k           db '640K',0
seg000:02B3 a704k           db '704K',0
seg000:02B8 a768k           db '768K',0
seg000:02BD a832k           db '832K',0
seg000:02C2 a896k           db '896K',0             ;
seg000:02C2                                         ;
seg000:02C7 a1_1            db '1 - ',0             ; SYSTEM ERROR NUMBERS (1 - 60)
seg000:02CC a2_0            db '2 - ',0
seg000:02D1 a3              db '3 - ',0
seg000:02D6 a4              db '4 - ',0
seg000:02DB a5              db '5 - ',0
seg000:02E0 a6              db '6 - ',0
seg000:02E5 a7              db '7 - ',0
seg000:02EA a8_0            db '8 - ',0
seg000:02EF a9              db '9 - ',0
seg000:02F4 a10             db '10 - ',0
seg000:02FA a11             db '11 - ',0
seg000:0300 a12             db '12 - ',0
seg000:0306 a13             db '13 - ',0
seg000:030C a14             db '14 - ',0
seg000:0312 a16             db '16 - ',0
seg000:0318 a17             db '17 - ',0
seg000:031E a18             db '18 - ',0
seg000:0324 a19             db '19 - ',0
seg000:032A a20             db '20 - ',0
seg000:0330 a21             db '21 - ',0
seg000:0336 a22             db '22 - ',0
seg000:033C a23             db '23 - ',0
seg000:0342 a24             db '24 - ',0
seg000:0348 a25             db '25 - ',0
seg000:034E a26             db '26 - ',0
seg000:0354 a27             db '27 - ',0
seg000:035A a28             db '28 - ',0
seg000:0360 a29             db '29 - ',0
seg000:0366 a30             db '30 - ',0
seg000:036C a31             db '31 - ',0
seg000:0372 a33             db '33 - ',0
seg000:0378 a40             db '40 - ',0
seg000:037E a50             db '50 - ',0
seg000:0384 a60             db '60 - ',0            ;
seg000:0384                                         ;
seg000:038A ESCx0m_0a_0d    db 1Bh,'[0m',0Ah        ; **** LOGOS AND INITIAL SETUP
seg000:038A                 db 0Dh,0
seg000:0391                 db '²',17h,8,0
seg000:0395                 db 1,8,0Dh,0Ah,9
seg000:039A                 db 2,0Ch,6,3,0Bh,0Eh,5,7,4,0
seg000:03A4                 db    0
seg000:03A5 a015h           db 2,' ',1,9,0Dh,' ',8,0Ah
seg000:03A5                 db ' ',1Bh,'[0;15H',0Ah,0
seg000:03B7 a028h           db 1Bh,'[0;28H',0Ah,0
seg000:03C0 a3dIGITAL13d4dI db 0Ah
seg000:03C0                 db 1Bh,'#3d i g i t a l',1Bh,'[13D',0Ah
seg000:03C0                 db 1Bh,'#4d i g i t a l',1Bh,'[12D',0Ah
seg000:03C0                 db 0Ah
seg000:03C0                 db 0Ah
seg000:03C0                 db 1Bh,'#3Rainbow 100',1Bh,'[11D',0Ah
seg000:03C0                 db 1Bh,'#4Rainbow 100',0
seg000:0412 a8c21c          db 0Ah
seg000:0412                 db 0Ah
seg000:0412                 db 1Bh,'[8C',0,0Ah
seg000:0412                 db 0Ah
seg000:0412                 db 1Bh,'[21C',0
seg000:0421 a31dCopyrightCD db 1Bh,'[31D',0Ah
seg000:0421                 db 'Copyright (c) Digital Equipment Corporation 1983',0
seg000:0458 TXT_ABCDWS      db ' A, B, C, D, W, S',0
seg000:046A TXT_ESC_unknown db 0Ah
seg000:046A                 db 0Ah
seg000:046A                 db 1Bh,'[',0,'A',0
seg000:0471                 db ' = ',0
seg000:0475                 db 0Ah
seg000:0475                 db 1Bh,'[',0
seg000:0479 TXT_KEY_B       db 'B',0
seg000:047B TXT_KEY_C       db 'C',0
seg000:047D TXT_KEY_D       db 'D',0
seg000:047F TXT_KEY_W       db 'W',0
seg000:0481 TXT_KEY_S       db 'S',0
seg000:0483 TXT_KEY_T       db 'T',0
seg000:0485 TXT_ESC_unknown_2 db 1Bh,'[',0
seg000:0488 aUnitedStatesCa db 0Dh,0Ah
seg000:0488                 db '  United States/Canada',0Dh,0Ah
seg000:0488                 db '  Canada (Franþais)',0Dh,0Ah
seg000:0488                 db '  Deutschland/Ísterreich',0Dh,0Ah
seg000:0488                 db '  France/Belgique',0Dh,0Ah
seg000:0488                 db '  Schweiz',0Dh,0Ah
seg000:0488                 db '  Suisse',0Dh,0Ah
seg000:0488                 db '  United Kingdom ',0Dh,0Ah
seg000:0488                 db 1Bh,'[29CUse up/down arrows to move cursor',0Dh,0Ah
seg000:0488                 db '  Belgium (Flemish)',0Ah
seg000:0488                 db 0Dh,'  Denmark',1Bh,'[20CUtilisez les touches flÚchÚes ',0Dh,0Ah
seg000:0488                 db '  Finland',1Bh,'[20Cpour dÚplacer le curseur',0Dh,0Ah
seg000:0488                 db '  Holland',0Dh,0Ah
seg000:0488                 db '  Italy',1Bh,'[22CBewegen Sie die Schreibmarke',0Dh,0Ah
seg000:0488                 db '  Norway',1Bh,'[21Cmit den Pfeiltasten ^ und v',0Dh,0Ah
seg000:0488                 db '  Spain',0Dh,0Ah
seg000:0488                 db '  Sweden',0Dh,1Bh,'[8A',0
seg000:0615                 db    0                 ;
seg000:0615                                         ;
seg000:0616 aPressSelectToC db 2,'³',5,'Press SELECT to',3,'choose keyboard',0 ; **** STRINGS IN 3 LANGUAGES: (1) ENGLISH (2) FRENCH (3) GERMAN
seg000:0639 aAppuyezSurSsle db 2,'³',5,'Appuyez sur <SÚlect>',3,'pour choisir le clavier',0
seg000:0669 aWfhlenSieDieTa db 2,'³',5,'Wõhlen Sie die Tastatur',3,'mit <SELEKTIEREN>',0 ;
seg000:0669                                         ;
seg000:0696 aTesting___     db 'TESTING...',0
seg000:06A1 aTestEnCours___ db 'Test en cours...',0
seg000:06B2 aTestLfuft___   db 'Test lõuft...',0    ;
seg000:06B2                                         ;
seg000:06C0 aVersion        db 'Version ',0
seg000:06C9 aVersion_0      db 'Version ',0
seg000:06D2 aVersion_1      db 'Version ',0         ;
seg000:06D2                                         ;
seg000:06DB a33d            db 1Bh,'[33D',0
seg000:06E1 a34d            db 1Bh,'[34D',0
seg000:06E7 a36d            db 1Bh,'[36D',0         ;
seg000:06E7                                         ;
seg000:06ED aAllRightsReserved23dPress db 0Ah
seg000:06ED                 db 'All Rights Reserved',1Bh,'[23D',0Ah
seg000:06ED                 db 0Ah
seg000:06ED                 db 'Press',0,0Ah
seg000:070F aTousDroitsRsservss26d db 'Tous droits rÚservÚs',1Bh,'[26D',0Ah
seg000:0729 aAppuyezSur     db 0Ah
seg000:0729                 db 'Appuyez sur',0
seg000:0736 aAlleRechteVorb db 0Ah
seg000:0736                 db 'Alle Rechte vorbehalten',1Bh,'[29D',0Ah
seg000:0736                 db 0Ah
seg000:0736                 db 'Dr³cken Sie',0
seg000:0761 aOrT            db ' or T ',0
seg000:0768 aOuT            db ' ou T',0
seg000:076E aOderT          db ' oder T',0          ;
seg000:076E                                         ;
seg000:0776 a26d            db '26D',0
seg000:077A a25d            db '25D',0
seg000:077E a28d            db '28D',0              ;
seg000:077E                                         ;
seg000:0782 aStartFromDrive db 'start from Drive ',0
seg000:0794 aDsmarrezDe     db 'DÚmarrez de ',0
seg000:07A1 aStartLaufwerk  db 'Start Laufwerk ',0  ;
seg000:07A1                                         ;
seg000:07B1 a22d            db '22D',0
seg000:07B5 a17d_1          db '17D',0
seg000:07B9 a20d            db '20D',0              ;
seg000:07B9                                         ;
seg000:07BD aExecuteSelfTes db 'execute Self Test',0
seg000:07CF aAutodiagnostic db 'Autodiagnostic',0
seg000:07DE aSelbstdiagnose db 'Selbstdiagnose',0   ;
seg000:07DE                                         ;
seg000:07ED aEnterTerminalM db 'enter Terminal Mode',0
seg000:0801 aModeTerminal   db 'Mode Terminal',0
seg000:080F aTerminalmodus  db 'Terminalmodus',0    ;
seg000:080F                                         ;
seg000:081D a21d            db '21D',0
seg000:0821 a18d_0          db '18D',0
seg000:0825 a18d            db '18D',0              ;
seg000:0825                                         ;
seg000:0829 a23d            db '23D',0Ah,0
seg000:082E a17d_0          db '17D',0Ah,0
seg000:0833 a17d            db '17D',0Ah,0          ;
seg000:0833                                         ;
seg000:0838 aNonSystemDiske db 'Non-System Diskette',0
seg000:084C aPasUneDisquett db 'pas une disquette-systÞme',0
seg000:0866 aKeineSystemdis db 'keine Systemdiskette',0 ;
seg000:0866                                         ;
seg000:087B aSystemLoadInco db 'System Load Incomplete',0
seg000:0892 aChargementDuSy db 'chargement du systÞme incomplet',0
seg000:08B2 aSystemNichtVol db 'System nicht vollstõndig geladen',0 ;
seg000:08B2                                         ;
seg000:08D3 aRemoveCardOrDi db 'Remove Card or Diskette',0
seg000:08EB aEnlevezCarteOu db 'enlevez carte ou disquette',0
seg000:0906 aKarteDisketteE db 'Karte/Diskette entfernen',0 ;
seg000:0906                                         ;
seg000:091F aInterruptsOff  db 'Interrupts Off',0
seg000:092E aInterruptionsH db 'interruptions hors',0
seg000:0941 aInterruptsAus  db 'Interrupts aus',0   ;
seg000:0941                                         ;
seg000:0950 aMemoryBoard    db 'Memory Board',0
seg000:095D aCarteMsmoire   db 'carte-mÚmoire',0
seg000:096B aSpeicherplatin db 'Speicherplatine',0  ;
seg000:096B                                         ;
seg000:097B aDriveA         db 'Drive A',0
seg000:0983 aUnitsA         db 'unitÚ A',0
seg000:098B aLaufwerkA      db 'Laufwerk A',0       ;
seg000:098B                                         ;
seg000:0996 aDriveB         db 'Drive B',0
seg000:099E aUnitsB         db 'unitÚ B',0
seg000:09A6 aLaufwerkB      db 'Laufwerk B',0       ;
seg000:09A6                                         ;
seg000:09B1 aDriveNotReady  db 'Drive Not Ready',0
seg000:09C1 aUnitsPasPrTe   db 'unitÚ pas prÛte',0
seg000:09D1 aLaufwerkNichtB db 'Laufwerk nicht bereit',0 ;
seg000:09D1                                         ;
seg000:09E7 aSeeOwnerSManua db 'See Owner',27h,'s Manual - MESSAGE ',0
seg000:0A05 aVoirIntroducti db 'Voir Introduction - message ',0
seg000:0A22 aSieheSystemhan db 'Siehe Systemhandbuch - Meldung ',0 ;
seg000:0A22                                         ;
seg000:0A42 aMainBoard      db 'Main Board',0
seg000:0A4D aCartePrincipal db 'carte principale',0
seg000:0A5E aSystemplatine  db 'Systemplatine',0    ;
seg000:0A5E                                         ;
seg000:0A6C aKeyboard       db 'Keyboard',0
seg000:0A75 aClavier        db 'clavier',0
seg000:0A7D aTastatur       db 'Tastatur',0         ;
seg000:0A7D                                         ;
seg000:0A86 aSetUpDefaultsS db 'Set-Up Defaults Stored',0
seg000:0A9D aParamDsfautSto db 'param/dÚfaut stockÚs',0
seg000:0AB2 aBetriebsmodusS db 'Betriebsmodus-Standards gespeichert',0 ;
seg000:0AB2                                         ;
seg000:0AD6 aRx50Controller db 'RX50 Controller Board',0
seg000:0AEC aCarteDuContrLl db 'carte du contr¶lleur de RX50',0
seg000:0B09 aRx50Steuerplat db 'RX50-Steuerplatine',0 ;
seg000:0B09                                         ;
seg000:0B1C aContention     db 'Contention',0
seg000:0B27 aConflit        db 'conflit',0
seg000:0B2F aKonflikt       db 'Konflikt',0         ;
seg000:0B2F                                         ;
seg000:0B38 aNewMemorySize  db 'New Memory Size = ',0
seg000:0B4B aTailleDeLaNouv db 'taille de la nouvelle mÚmoire = ',0
seg000:0B6C aNeueSpeichergr db 'neue Speichergr÷sse = ',0 ;
seg000:0B6C                                         ;
seg000:0B83                 db 0FFh
seg000:0B84                 db 0FFh
seg000:0B85                 db 0FFh
seg000:0B86                 db 0FFh
seg000:0B87                 db 0FFh
seg000:0B88                 db 0FFh
seg000:0B89                 db 0FFh
seg000:0B8A                 db 0FFh
seg000:0B8B                 db 0FFh
seg000:0B8C                 db 0FFh
seg000:0B8D                 db 0FFh
seg000:0B8E                 db 0FFh
seg000:0B8F                 db 0FFh                 ;
seg000:0B8F                                         ; PARAMETERS AVAILABLE WITHIN SETUP:
seg000:0B8F                                         ;
seg000:0B90 aT              db 1,1,' T',0FFh
seg000:0B95 a01             db 1,1,'01',0FFh
seg000:0B9A a5075110134_515020 db 0Fh,5,'  50   75  110 134.5 150  200  300  600 1200 1800 2000 2400 360' ; available baud rates
seg000:0B9A                 db '0 4800 9600 19200',0FFh
seg000:0BED a75150300600120024 db 7,5,'  75  150  300  600 1200 2400 4800 9600 ',0FFh
seg000:0C18 a7o7e7n7m7s8o8e8n db 7,2,'7O7E7N7M7S8O8E8N',0FFh ; 7/8 bits | odd / even / no parity | stop bits.
seg000:0C2B aFdxafdxbfdxc   db 2,4,'FDXAFDXBFDXC',0FFh
seg000:0C3A a12_0           db 1,1,'12',0FFh
seg000:0C3F a87654321       db 7,1,'87654321',0FFh
seg000:0C4A a123            db 2,1,'123',0FFh
seg000:0C50 a?abcdw         db 5,1,'?ABCDW',0FFh    ; BOOT DRIVE (W = Winchester)
seg000:0C50                                         ;
seg000:0C59                 db 0EDh ; Ý
seg000:0C5A                 db 0ECh ; ý
seg000:0C5B                 db 0EBh ; Ù
seg000:0C5C                 db 0F4h ; ¶
seg000:0C5D                 db 0DAh ; +
seg000:0C5E                 db    0
seg000:0C5F                 db 0EFh ; ´
seg000:0C60                 db 0D9h ; +
seg000:0C61                 db 0FEh ; ¦
seg000:0C62                 db    0
seg000:0C63                 db    0
seg000:0C64                 db 0FFh
seg000:0C65                 db 0E1h ; ß
seg000:0C66                 db    0
seg000:0C67                 db 0FBh ; ¹
seg000:0C68                 db 0FCh ; ³
seg000:0C69                 db 0FFh
seg000:0C6A                 db 0E5h ; Õ
seg000:0C6B                 db    0
seg000:0C6C                 db 0E2h ; Ô
seg000:0C6D                 db 0F9h ; ¨
seg000:0C6E                 db 0FFh
seg000:0C6F                 db 0FDh ; ²
seg000:0C70                 db 0FFh
seg000:0C71                 db 0E3h ; Ò
seg000:0C72                 db    0
seg000:0C73                 db 0FAh ; ·
seg000:0C74                 db 0F7h ; ¸
seg000:0C75                 db 0F8h ; °
seg000:0C76                 db 0F6h ; ÷
seg000:0C77                 db 0FFh
seg000:0C78                 db 0E4h ; õ
seg000:0C79                 db    0
seg000:0C7A                 db 0DCh ; _
seg000:0C7B                 db    0
seg000:0C7C                 db 0F3h ; ¾
seg000:0C7D                 db 0F2h ; =
seg000:0C7E                 db 0F1h ; ±
seg000:0C7F                 db 0FFh
seg000:0C80                 db 0DFh ; ¯
seg000:0C81                 db    0
seg000:0C82                 db  58h ; X
seg000:0C83                 db  59h ; Y
seg000:0C84                 db  5Ah ; Z
seg000:0C85                 db  5Bh ; [
seg000:0C86                 db  26h ; &
seg000:0C87                 db  27h ; '
seg000:0C88                 db  4Ch ; L
seg000:0C89                 db  4Dh ; M
seg000:0C8A                 db  4Fh ; O
seg000:0C8B                 db  54h ; T
seg000:0C8C                 db  55h ; U
seg000:0C8D                 db 0FFh
seg000:0C8E                 db 0DEh ; Ì
seg000:0C8F                 db    0
seg000:0C90                 db 0DBh ; ¦
seg000:0C91                 db 0FFh
seg000:0C92                 db 0F0h ; ­
seg000:0C93                 db    0
seg000:0C94                 db 0EEh ; ¯
seg000:0C95                 db 0FFh
seg000:0C96                 db 0EAh ; Û
seg000:0C97                 db    0
seg000:0C98                 db 0E8h ; Þ
seg000:0C99                 db 0E9h ; Ú
seg000:0C9A                 db 0E0h ; Ó
seg000:0C9B                 db 0FFh
seg000:0C9C                 db 0DDh ; ¦
seg000:0C9D                 db 0FFh
seg000:0C9E                 db 0F3h ; ¾
seg000:0C9F                 db 0F2h ; =
seg000:0CA0                 db 0F1h ; ±
seg000:0CA1                 db 0FFh
seg000:0CA2                 db  59h ; Y
seg000:0CA3                 db  8Ch ; î
seg000:0CA4                 db  65h ; e
seg000:0CA5                 db  8Ch ; î
seg000:0CA6                 db  6Ah ; j
seg000:0CA7                 db  8Ch ; î
seg000:0CA8                 db  6Fh ; o
seg000:0CA9                 db  8Ch ; î
seg000:0CAA                 db  71h ; q
seg000:0CAB                 db  8Ch ; î
seg000:0CAC                 db  78h ; x
seg000:0CAD                 db  8Ch ; î
seg000:0CAE                 db  80h ; Ç
seg000:0CAF                 db  8Ch ; î
seg000:0CB0                 db  8Eh ; Ä
seg000:0CB1                 db  8Ch ; î
seg000:0CB2                 db  92h ; Æ
seg000:0CB3                 db  8Ch ; î
seg000:0CB4                 db  96h ; û
seg000:0CB5                 db  8Ch ; î
seg000:0CB6                 db  9Ch ; £
seg000:0CB7                 db  8Ch ; î
seg000:0CB8                 db  9Eh ; ×
seg000:0CB9                 db  8Ch ; î             ;
seg000:0CB9                                         ;
seg000:0CBA aSetUp          db 'SET-UP',0
seg000:0CC1 aModeDeFonct    db 'MODE DE FONCT',0
seg000:0CCF aBetriebsmodus  db 'BETRIEBSMODUS',0    ;
seg000:0CCF                                         ;
seg000:0CDD aPressHelp      db 'PRESS "HELP"',0
seg000:0CEA aAppuyezSurAide db 'Appuyez sur <AIDE>',0
seg000:0CFD aDrCkenSieHilfe db 'DR_CKEN SIE <HILFE>',0 ;
seg000:0CFD                                         ;
seg000:0D11 aToExitPressSetUp db 'TO EXIT PRESS "SET-UP"',0
seg000:0D28 aSortieModeDeFonct db 'Sortie: <MODE DE FONCT>',0
seg000:0D40 aBeendenMitBetrieb db 'BEENDEN MIT <BETRIEBSMODUS>',0 ;
seg000:0D40                                         ;
seg000:0D5C aNvmErrNowSettingT db 'NVM ERR/NOW SETTING TO DEFAULT',0
seg000:0D7B aErreurNvmParamDsf db 'Erreur NVM/Param/DÚfaut',0
seg000:0D93 aNfsFehlerGrundein db 'NFS-Fehler/Grundeinstellung',0 ;
seg000:0D93                                         ;
seg000:0DAF aHelp           db 'HELP',0
seg000:0DB4 aAide           db 'AIDE',0
seg000:0DB9 aHilfe          db 'HILFE',0            ;
seg000:0DB9                                         ;
seg000:0DBF aTabs           db 'TABS',0
seg000:0DC4 aTabs_0         db 'TABS',0
seg000:0DC9 aTabs_1         db 'TABS',0             ;
seg000:0DC9                                         ;
seg000:0DCE aLine           db 'LINE ',0
seg000:0DD4 aEnLigne        db 'En ligne',0
seg000:0DDD aOnline         db 'Online',0           ;
seg000:0DDD                                         ;
seg000:0DE4 aLocal          db 'LOCAL',0
seg000:0DEA aLocal_0        db ' Local  ',0
seg000:0DF3 aLokal          db 'Lokal ',0           ;
seg000:0DF3                                         ;
seg000:0DFA aPrinter        db 'PRINTER',0
seg000:0E02 aImprimante     db 'IMPRIMANTE',0
seg000:0E0D aDrucker        db 'DRUCKER',0          ;
seg000:0E0D                                         ;
seg000:0E15 aDataBP         db '=DATA B/P',0
seg000:0E1F aDonnsesParits  db '=DonnÚes/paritÚ',0
seg000:0E2F aDatenb_Par_    db '=Datenb./Par.',0    ;
seg000:0E2F                                         ;
seg000:0E3D aXmitRcvBaud    db '=XMIT/RCV BAUD',0
seg000:0E4C aVSmissRscep    db '=V Úmiss/rÚcep',0
seg000:0E5B aBaudEmpf_Send_ db '=Baud empf./send.',0 ;
seg000:0E5B                                         ;
seg000:0E6D aParamSet       db 'PARAM SET',0
seg000:0E77 aParam          db 'PARAM',0
seg000:0E7D aParamNeu       db 'PARAM NEU',0        ;
seg000:0E7D                                         ;
seg000:0E87 aModem          db 'MODEM',0
seg000:0E8D aModem_0        db 'MODEM',0
seg000:0E93 aModem_1        db 'MODEM',0            ;
seg000:0E93                                         ;
seg000:0E99 aAutoAnsbk      db 'AUTO ANSBK',0
seg000:0EA4 aRsponseAuto    db 'RÚponse auto',0
seg000:0EB1 aAutoAntwort    db 'AUTO-ANTWORT',0     ;
seg000:0EB1                                         ;
seg000:0EBE aAutoBoot       db 'AUTO-BOOT',0        ; DATA XREF: SET_UP_PREPARE__sub_2C40+Cw
seg000:0EBE                                         ; SET_UP_PREPARE__sub_2C40+18r ...
seg000:0EC8 aLancementAutomati db 'LANCEMENT AUTOMATIQUE A PARTIR DE',0
seg000:0EC8                                         ; DATA XREF: seg000:CON_WAIT__loc_1D1Fr
seg000:0EC8                                         ; seg000:1D2Bw ...
seg000:0EEA aAutoStartVon   db 'AUTO-START VON',0   ; DATA XREF: SET_UP_PREPARE__sub_2C40+1Er
seg000:0EEA                                         ;
seg000:0EEA                                         ;
seg000:0EF9 aXmtBaud        db '=XMT BAUD',0
seg000:0F03 aVSmiss         db '=V Úmiss',0         ; DATA XREF: seg000:343Fr
seg000:0F0C aBaudSend_      db '=Baud send.',0      ;
seg000:0F0C                                         ;
seg000:0F18 aRcvBaud        db '=RCV BAUD',0
seg000:0F22 aVRscep         db '=V rÚcep',0         ; DATA XREF: seg000:3321r
seg000:0F22                                         ; SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+1Er ...
seg000:0F2B aBaudEmpf_      db '=Baud empf.',0      ; DATA XREF: CON__sub_1DB9-2BDw
seg000:0F2B                                         ; CON__sub_1DB9-2B4r ...
seg000:0F2B                                         ;
seg000:0F2B                                         ;
seg000:0F37 aProtocol       db '=PROTOCOL',0        ; DATA XREF: CON__sub_1D6B+5r
seg000:0F37                                         ; CHARSET__NVM_8F__sub_2FDC:loc_2FE8w ...
seg000:0F41 aProtocole      db '=Protocole',0       ; DATA XREF: CON__sub_1DB9-28Br
seg000:0F41                                         ; CON__sub_1DB9-254r ...
seg000:0F4C aProtokoll      db '=Protokoll',0       ;
seg000:0F4C                                         ;
seg000:0F57 aCharUse        db '=CHAR USE',0        ; DATA XREF: CON__sub_1DB9-298r
seg000:0F57                                         ; CON__sub_1DB9-258r ...
seg000:0F61 aCarDeDsconnx   db '=Car de dÚconnx',0  ; DATA XREF: KBD_CHK_MORE__sub_299F+25w
seg000:0F61                                         ; KBD_CHK_MORE__sub_299F+D9r ...
seg000:0F71 aTrennzeich_    db '=Trennzeich.',0     ;
seg000:0F71                                         ;
seg000:0F7E aClickVol       db '=CLICK VOL',0
seg000:0F89 aVolBip         db '=Vol bip',0         ; DATA XREF: KBD_CHK_MORE__sub_299F+20w
seg000:0F89                                         ; KBD_CHK_MORE__sub_299F+9Fr ...
seg000:0F92 aLautstTast_klick db '=Lautst Tast.klick',0
seg000:0F92                                         ; DATA XREF: KBD_CHK_MORE__sub_299F:NO_STUCK_KEY__loc_2A14r
seg000:0F92                                         ; KBD_CHK_MORE__sub_299F:loc_2A25w ...
seg000:0F92                                         ;
seg000:0F92                                         ;
seg000:0FA5 aBellVol        db '=BELL VOL',0
seg000:0FAF aVolAlarme      db '=Vol alarme',0      ; DATA XREF: seg000:27E1w
seg000:0FAF                                         ; CON_INIT_VARS__sub_27FF+13w ...
seg000:0FBB aLautstSignal   db '=Lautst Signal',0   ;
seg000:0FBB                                         ;
seg000:0FCA aScrollRate     db '=SCROLL RATE',0     ; DATA XREF: seg000:36BBw
seg000:0FCA                                         ; seg000:36BFr ...
seg000:0FD7 aDsfilement     db '=DÚfilement',0
seg000:0FE3 aBildlaufRate   db '=Bildlauf-Rate',0   ; DATA XREF: seg000:31D9w
seg000:0FE3                                         ; seg000:loc_2DD9w ...
seg000:0FE3                                         ;
seg000:0FE3                                         ;
seg000:0FF2 aScroll         db 'SCROLL',0
seg000:0FF9 aDsfilement_0   db 'DÚfilement',0
seg000:1004 aBildlauf       db 'Bildlauf',0         ; DATA XREF: SET_UP_PREPARE__sub_2C40+9r
seg000:1004                                         ; SET_UP_PREPARE__sub_2C40+1Bw ...
seg000:1004                                         ;
seg000:1004                                         ;
seg000:100D aSmooth         db 'SMOOTH',0           ; DATA XREF: seg000:31BAw
seg000:1014 aContinu        db 'Continu',0
seg000:101C aWeich          db 'weich',0            ;
seg000:101C                                         ;
seg000:1022 aJump           db 'JUMP',0
seg000:1027 aParSaut        db 'Par saut',0         ;
seg000:1027                                         ;
seg000:1030 aSchnell        db 'schnell',0          ;
seg000:1030                                         ;
seg000:1038 aAutoRpt        db 'AUTO RPT',0
seg000:1041 aRspstAuto      db 'RÚpÚt auto',0
seg000:104C aAutoWied_      db 'Auto-Wied.',0       ;
seg000:104C                                         ;
seg000:1057 aOff            db 'OFF',0
seg000:105B aNon            db 'Non',0
seg000:105F aAus            db 'Aus',0              ;
seg000:105F                                         ;
seg000:1063 aOn             db 'ON',0
seg000:1066 aOui            db 'Oui',0
seg000:106A aEin            db 'Ein',0              ;
seg000:106A                                         ;
seg000:106E aScreen         db 'SCREEN',0
seg000:1075 aEcran          db 'Ecran',0
seg000:107B aBildschirm     db 'Bildschirm',0       ;
seg000:107B                                         ;
seg000:1086 aDark           db 'DARK',0
seg000:108B aFoncs          db 'FoncÚ',0
seg000:1091 aDunkel         db 'dunkel',0           ;
seg000:1091                                         ;
seg000:1098 aLight          db 'LIGHT',0
seg000:109E aClair          db 'Clair',0
seg000:10A4 aHell           db 'hell',0             ;
seg000:10A4                                         ;
seg000:10A9 aCursor         db 'CURSOR',0
seg000:10B0 aCurseur        db 'Curseur',0
seg000:10B8 aSchreibm_      db 'Schreibm.',0        ;
seg000:10B8                                         ;
seg000:10C2 aUnderline      db 'UNDERLINE',0
seg000:10CC aSouligns       db 'SoulignÚ',0
seg000:10D5 aStrich         db 'Strich',0           ;
seg000:10D5                                         ;
seg000:10DC aBlock          db 'BLOCK',0
seg000:10E2 aBloc           db 'Bloc',0
seg000:10E7 aBlock_0        db 'Block',0            ;
seg000:10E7                                         ;
seg000:10ED aMarginBell     db 'MARGIN BELL',0
seg000:10F9 aAlarmeDeMarge  db 'Alarme de marge',0
seg000:1109 aRandsignal     db 'Randsignal',0       ;
seg000:1109                                         ;
seg000:1114 aKeyclick       db 'KEYCLICK',0
seg000:111D aBipDeTouche    db 'Bip de touche',0
seg000:112B aTast_klick     db 'Tast.klick',0       ;
seg000:112B                                         ;
seg000:1136 aEmulation      db 'EMULATION',0
seg000:1140 aEmulation_0    db 'Emulation',0
seg000:114A aEmulation_1    db 'Emulation',0        ;
seg000:114A                                         ;
seg000:1154 aLeftRightNewParam db ' LEFT,RIGHT=NEW PARAM,TAB',0
seg000:116E aGaucheDroiteNouvP db ' GAUCHE,DROITE=Nouv param,Tab',0
seg000:118C aParamNeuTabs   db ' < , > =PARAM NEU,TABS',0 ;
seg000:118C                                         ;
seg000:11A3 aUpDownNewVal   db ' UP  ,DOWN =NEW VAL',0
seg000:11B7 aHautBasNelleVal db ' HAUT  ,BAS   =Nelle val',0
seg000:11D0 aVNeuerWert     db ' ^ , v =neuer Wert',0 ;
seg000:11D0                                         ;
seg000:11E3 aAutoXonXoff    db 'AUTO XON/XOFF',0
seg000:11F1 aTransmAuto     db 'Transm auto',0
seg000:11FD aAutoXonXoff_0  db 'Auto XON/XOFF',0    ;
seg000:11FD                                         ;
seg000:120B aDefaultCharSet db 'DEFAULT CHAR SET',0
seg000:121C aJeuDeCarDsfaut db 'Jeu de car/dÚfaut',0
seg000:122E aStand_Zeichens_ db 'Stand.-Zeichens.',0 ;
seg000:122E                                         ;
seg000:123F aUsascii        db 'USASCII',0
seg000:1247 aUsascii_0      db 'USASCII',0
seg000:124F aUsascii_1      db 'USASCII',0          ;
seg000:124F                                         ;
seg000:1257 aUk             db 'UK',0
seg000:125A aUk_0           db 'UK',0
seg000:125D aUk_1           db 'UK',0               ;
seg000:125D                                         ;
seg000:1260 aAutoWrap       db 'AUTO WRAP',0
seg000:126A aRetourAuto     db 'Retour auto',0
seg000:1276 aAutoUmbruch    db 'Auto-Umbruch',0     ;
seg000:1276                                         ;
seg000:1283 aNewLineMode    db 'NEW LINE MODE',0
seg000:1291 aModeNelleLigne db 'Mode Nelle Ligne',0
seg000:12A2 aNeueZeile      db 'Neue Zeile',0       ;
seg000:12A2                                         ;
seg000:12AD aLf             db 'LF',0
seg000:12B0 aAl             db 'AL',0
seg000:12B3 aZv             db 'ZV',0               ;
seg000:12B3                                         ;
seg000:12B6 aNl             db 'NL',0
seg000:12B9 aNl_0           db 'NL',0
seg000:12BC aNz             db 'NZ',0               ;
seg000:12BC                                         ;
seg000:12BF aLocalEcho      db 'LOCAL ECHO',0
seg000:12CA aEchoLocal      db 'Echo local',0
seg000:12D5 aLokalecho      db 'Lokalecho',0        ;
seg000:12D5                                         ;
seg000:12DF aRcvCharParity  db 'RCV CHAR PARITY',0
seg000:12EF aErreurParitsRscsp db 'Erreur paritÚ rÚcÚp',0
seg000:1303 aParEmpfangszeich_ db 'Par Empfangszeich.',0 ;
seg000:1303                                         ;
seg000:1316 aIgnore         db 'IGNORE',0
seg000:131D aNon_0          db 'Non',0
seg000:1321 aIgnor          db 'ignor',0            ;
seg000:1321                                         ;
seg000:1327 aCheck          db 'CHECK',0
seg000:132D aOui_0          db 'Oui',0
seg000:1331 aPrF            db 'pr³f',0             ;
seg000:1331                                         ;
seg000:1336 aModemStopBits  db 'MODEM STOP BITS',0
seg000:1346 aBitsDArrTModem db 'Bits d',27h,'arrÛt modem',0
seg000:1359 aStopbitsModem  db 'Stopbits Modem',0   ;
seg000:1359                                         ;
seg000:1368 aDrive          db '=DRIVE',0
seg000:136F aUnits          db '=UnitÚ',0
seg000:1376 aLaufwerkt      db '=Laufwerk',0,'T'    ;
seg000:1376                                         ;
seg000:1381 aOResetTypeCtrlSet db 'O RESET TYPE <CTRL/SET-UP>',0
seg000:139C aRemRLStatInitCtrl db 'Rem Ó l',27h,'Útat init <CTRL/MODE DE FONCT>',0
seg000:13C3 aSystemNeuLadenCtr db 'SYSTEM NEU LADEN: <CTRL/BETRIEBSMODUS>',0 ;
seg000:13C3                                         ;
seg000:13EA aPrintExtent    db 'PRINT EXTENT',0
seg000:13F7 aExtDImpression db 'Ext d',27h,'impression',0
seg000:1408 aDruckfenst_    db 'Druckfenst.',0      ;
seg000:1408                                         ;
seg000:1414 aScrollRegion   db 'SCROLL REGION',0
seg000:1422 aZoneDeDsfil    db 'Zone de dÚfil',0
seg000:1430 aBildlaufFenst_ db 'Bildlauf-Fenst.',0  ;
seg000:1430                                         ;
seg000:1440 aFullScreen     db 'FULL SCREEN',0
seg000:144C aPleinScran     db 'Plein Úcran',0
seg000:1458 aBildschirm_0   db 'Bildschirm',0       ;
seg000:1458                                         ;
seg000:1463 aPrintTermChar  db 'PRINT TERM CHAR',0
seg000:1473 aAvanceAutoD1Page db 'Avance auto d',27h,'1 page',0
seg000:1488 aDruckendezeich_ db 'Druckendezeich.',0 ;
seg000:1488                                         ;
seg000:1498 aNone           db 'NONE',0
seg000:149D aNon_1          db 'Non',0
seg000:14A1 aNein           db 'Nein',0             ;
seg000:14A1                                         ;
seg000:14A6 aFf             db 'FF',0
seg000:14A9 aOui_1          db 'Oui',0
seg000:14AD aFf_0           db 'FF',0               ;
seg000:14AD                                         ;
seg000:14B0 aAutoAnsbk_0    db 'AUTO ANSBK',0
seg000:14BB aRsponseAuto_0  db 'RÚponse auto',0
seg000:14C8 aAutoAntwort_0  db 'Auto-Antwort',0     ;
seg000:14C8                                         ;
seg000:14D5 aDisable        db 'DISABLE',0
seg000:14DD aNon_2          db 'Non',0
seg000:14E1 aAus_0          db 'Aus',0              ;
seg000:14E1                                         ;
seg000:14E5 aEnable         db 'ENABLE',0
seg000:14EC aOui_2          db 'Oui',0
seg000:14F0 aEin_0          db 'Ein',0              ;
seg000:14F0                                         ;
seg000:14F4 aDisconDelay    db 'DISCON DELAY',0
seg000:1501 aDslaiDsconnx   db 'DÚlai dÚconnx',0
seg000:150F aAbfallZeit     db 'Abfall-Zeit',0      ;
seg000:150F                                         ;
seg000:151B a60Ms           db '60 MS',0
seg000:1521 a60Ms_0         db '60 ms',0
seg000:1527 a60Ms_1         db '60 ms',0            ;
seg000:1527                                         ;
seg000:152D a2Sec           db '2 SEC',0
seg000:1533 a2S             db '2 s',0
seg000:1537 a2S_0           db '2 s',0              ;
seg000:1537                                         ;
seg000:153B aDisconCharUse  db 'DISCON CHAR USE',0
seg000:154B aDsconnxAuto    db 'DÚconnx auto',0
seg000:1558 aUnterbrech_Zeich_ db 'Unterbrech.-Zeich.',0 ;
seg000:1558                                         ;
seg000:156B aXmtBreak       db 'XMT BREAK',0
seg000:1575 aInterruption   db 'Interruption',0
seg000:1582 aSendeBreak     db 'Sende "BREAK"',0    ;
seg000:1582                                         ;
seg000:1590 aLockMode       db 'LOCK MODE',0
seg000:159A aBlocage        db 'Blocage',0
seg000:15A2 aFeststelltaste db 'Feststelltaste',0   ;
seg000:15A2                                         ;
seg000:15B1 aCaps           db 'CAPS',0
seg000:15B6 aMajBlocage     db 'MAJ/Blocage',0
seg000:15C2 aGrossbuchstaben db 'Grossbuchstaben',0 ;
seg000:15C2                                         ;
seg000:15D2 aShift          db 'SHIFT',0
seg000:15D8 aMajMinBlocage  db 'MAJ/min/Blocage',0
seg000:15E8 aUmschaltfunktion db 'Umschaltfunktion',0 ;
seg000:15E8                                         ;
seg000:15F9 aKeyboard_0     db 'KEYBOARD',0
seg000:1602 aClavier_0      db 'Clavier',0
seg000:160A aTastatur_0     db 'Tastatur',0         ;
seg000:160A                                         ;
seg000:1613 aNotSelected    db 'NOT SELECTED',0
seg000:1620 aPasSslectionns db 'Pas sÚlectionnÚ',0
seg000:1630 aNichtEingestellt db 'nicht eingestellt',0 ;
seg000:1630                                         ;
seg000:1642 aSelected       db 'SELECTED',0
seg000:164B aSslectionns    db 'SÚlectionnÚ',0
seg000:1657 aEingestellt    db 'eingestellt',0      ;
seg000:1657                                         ;
seg000:1663 aPower          db 'POWER',0
seg000:1669 aFrsquence      db 'FrÚquence',0
seg000:1673 aNetz           db 'Netz',0             ;
seg000:1673                                         ;
seg000:1678 aShift_0        db 'SHIFT',0
seg000:167E aMajMin         db 'MAJ/min',0
seg000:1686 aUmschalttaste  db 'Umschalttaste',0    ;
seg000:1686                                         ;
seg000:1694 aAAnsbk         db ' A=ANSBK',0
seg000:169D aARsponseAuto   db ' A=RÚponse auto',0
seg000:16AD aAAntwort       db ' A=Antwort',0       ;
seg000:16AD                                         ;
seg000:16B8 aAutoScreenBlank db 'AUTO SCREEN BLANK',0
seg000:16CA aEffacAutoScran db 'Effac auto Úcran',0
seg000:16DB aBildschirmLeer db 'Bildschirm leer',0  ;
seg000:16DB                                         ;
seg000:16EB aDDeflt         db ' D=DEFLT',0
seg000:16F4 aDDsfaut        db ' D=DÚfaut',0
seg000:16FE aDStand_        db ' D=Stand.',0        ;
seg000:16FE                                         ;
seg000:1708 aCorrespondenceDat db 'CORRESPONDENCE/DATA PROC',0
seg000:1721 aCorrespondanceTd db 'Correspondance/TD',0
seg000:1733 aTextDvTastatur db 'Text/DV-Tastatur',0 ;
seg000:1733                                         ;
seg000:1744 aDp             db 'DP',0
seg000:1747 aTd             db 'TD',0
seg000:174A aDv             db 'DV',0               ;
seg000:174A                                         ;
seg000:174D aCorr           db 'CORR',0
seg000:1752 aCorr_0         db 'Corr',0
seg000:1757 aText           db 'Text',0             ;
seg000:1757                                         ;
seg000:175C aScreenWidth    db 'SCREEN WIDTH',0
seg000:1769 aLargeurScran   db 'Largeur Úcran',0
seg000:1777 aBildschirmbreite db 'Bildschirmbreite',0 ;
seg000:1777                                         ;
seg000:1788 aRRecall        db ' R=RECALL',0
seg000:1792 aRRappel        db ' R=Rappel',0
seg000:179C aRRCksetz_      db ' R=R³cksetz.',0     ;
seg000:179C                                         ;
seg000:17A9 aSSave          db ' S=SAVE',0
seg000:17B1 aSSauvegarde    db ' S=Sauvegarde',0
seg000:17BF aSSich_         db ' S=Sich.',0         ;
seg000:17BF                                         ;
seg000:17C8 aMisc           db 'MISC',0
seg000:17CD aDivers         db 'DIVERS',0
seg000:17D4 aSonst          db 'SONST',0            ;
seg000:17D4                                         ;
seg000:17DA aCharCodes      db 'CHAR CODES',0
seg000:17E5 aCodeDeCar_     db 'Code de car.',0
seg000:17F2 aZeichencodes   db 'Zeichencodes',0     ;
seg000:17F2                                         ;
seg000:17FF aToExitPressHelp db 'TO EXIT PRESS "HELP"',0
seg000:1814 aSortieAide     db 'Sortie: <AIDE>',0
seg000:1823 aBeendenMitHilfe db 'BEENDEN MIT <HILFE>',0 ;
seg000:1823                                         ;
seg000:1837 aLLocalOnLine   db 'L=LOCAL/ON-LINE',0
seg000:1847 aLLocalEnLigne  db 'L=Local/En ligne',0
seg000:1858 aLLokalOnline   db 'L=Lokal/Online',0   ;
seg000:1858                                         ;
seg000:1867 aNextScreenNewDisp db 'NEXT SCREEN=NEW DISPLAY',0
seg000:187F aPageSuivNelleZone db '<PAGE SUIV>=Nelle zone',0
seg000:1896 aBildvvvNeueAnzeig db '<BILDvvv>=neue Anzeige',0 ;
seg000:1896                                         ;
seg000:18AD aArrowKeys      db 'ARROW KEYS',0
seg000:18B8 aFlsche         db 'FlÞche',0
seg000:18BF aPfeiltast_     db 'Pfeiltast.',0       ;
seg000:18BF                                         ;
seg000:18BF                                         ;
seg000:18CA a0              db '0=',0               ; **** PARTIAL STRINGS - USED BY SETUP: 60/50 Hz.  VT52/ANSI  etc.
seg000:18CD a1_0            db '1=',0               ;
seg000:18CD                                         ;
seg000:18D0 aDec8           db 'DEC-8',0
seg000:18D6 a7Bit           db '7-BIT',0            ;
seg000:18D6                                         ;
seg000:18DC a1234567890     db '1234567890',0       ;
seg000:18DC                                         ;
seg000:18E7 a80             db '80',0
seg000:18EA a132            db '132',0              ;
seg000:18EA                                         ;
seg000:18EE aA              db 'A=                      ',0 ;
seg000:18EE                                         ;
seg000:1907 a60Hz           db '60 Hz',0
seg000:190D a50Hz           db '50 Hz',0            ;
seg000:190D                                         ;
seg000:1913 a1              db '1',0
seg000:1915 a2              db '2',0                ;
seg000:1915                                         ;
seg000:1917 aVt52           db 'VT52',0
seg000:191C aAnsi           db 'ANSI',0             ;
seg000:191C                                         ;
seg000:191C                                         ;
seg000:1921                 db 0FBh dup(0FFh)       ; 251 x 0xFF
seg000:1921                                         ;
seg000:1A1C                 db 0E9h ; Ú             ; NO CODE.
seg000:1A1D                 db 0A8h ; ¿
seg000:1A1E                 db 0EAh ; Û
seg000:1A1F                 db 0A8h ; ¿
seg000:1A20                 db  30h ; 0
seg000:1A21                 db 0A9h ; ®
seg000:1A22 ; ---------------------------------------------------------------------------
seg000:1A22
seg000:1A22 LOOP__loc_1A22:                         ; CODE XREF: seg000:1A27j
seg000:1A22                                         ; seg000:1A50j
seg000:1A22                 test    byte ptr ds:aBaudEmpf_+4, 8 ; DS:0F2F
seg000:1A27                 jnz     short LOOP__loc_1A22
seg000:1A29
seg000:1A29 ESCAPE_in_AL__loc_1A29:                 ; CODE XREF: seg000:loc_3j
seg000:1A29                 test    byte ptr ds:aBaudEmpf_+4, 2 ; DS:0F2F
seg000:1A2E                 jz      short loc_1A33
seg000:1A30                 call    near ptr 804Bh  ; F404B
seg000:1A30                                         ; VIDEO: unknown subroutine.
seg000:1A33
seg000:1A33 loc_1A33:                               ; CODE XREF: seg000:1A2Ej
seg000:1A33                 test    byte ptr ds:aBaudEmpf_+4, 80h ; DS:0F2F
seg000:1A38                 jz      short loc_1A52
seg000:1A3A                 cmp     al, 20h ; ' '
seg000:1A3C                 jb      short loc_1A52
seg000:1A3E                 cmp     al, 7Eh ; '~'
seg000:1A40                 ja      short loc_1A45
seg000:1A42
seg000:1A42 loc_1A42:                               ; CODE XREF: seg000:1A47j
seg000:1A42                 jmp     near ptr 8054h  ; F4054
seg000:1A42                                         ; GETS DATA from  ds:0EDCh
seg000:1A45 ; ---------------------------------------------------------------------------
seg000:1A45
seg000:1A45 loc_1A45:                               ; CODE XREF: seg000:1A40j
seg000:1A45                 cmp     al, 9Fh ; 'ƒ'
seg000:1A47                 ja      short loc_1A42
seg000:1A49                 jmp     short loc_1A52
seg000:1A4B ; ---------------------------------------------------------------------------
seg000:1A4B
seg000:1A4B ROM_ConsoleOut__loc_1A4B:               ; CODE XREF: seg000:loc_0j
seg000:1A4B                                         ; seg000:0006j
seg000:1A4B                 test    byte ptr ds:aBaudEmpf_+4, 8Ah ; DS:0F2F
seg000:1A50                 jnz     short LOOP__loc_1A22
seg000:1A52
seg000:1A52 loc_1A52:                               ; CODE XREF: seg000:1A38j
seg000:1A52                                         ; seg000:1A3Cj ...
seg000:1A52                 mov     byte ptr ds:aLancementAutomati+0Dh, 0Bh ; DS:0ED5
seg000:1A57                 mov     bl, al
seg000:1A59                 sub     bh, bh
seg000:1A5B                 mov     bl, cs:[bx-63E1h]
seg000:1A60                 jmp     word ptr cs:[bx-659Bh]
seg000:1A60 ; ---------------------------------------------------------------------------
seg000:1A65                 db 0A7h ; º             ; (words) : JUMP TABLE FOR ROUTINE ABOVE.
seg000:1A66                 db  9Ah ; Ü             ; $9aa7
seg000:1A66                                         ;
seg000:1A67                 db 0F6h ; ÷             ; $9af6
seg000:1A68                 db  9Ah ; Ü
seg000:1A69                 db  8Fh ; Å             ; $9a8f = retn
seg000:1A6A                 db  9Ah ; Ü
seg000:1A6B                 db  8Fh ; Å             ; $9d8f
seg000:1A6C                 db  9Dh ; Ø
seg000:1A6D                 db  1Fh                 ; $9d1f
seg000:1A6E                 db  9Dh ; Ø
seg000:1A6F                 db  18h                 ; $0018
seg000:1A70                 db    0
seg000:1A71                 db  32h ; 2             ; $9d32
seg000:1A72                 db  9Dh ; Ø
seg000:1A73                 db  27h ; '             ; $0027
seg000:1A74                 db    0
seg000:1A75                 db  1Bh                 ; $001b
seg000:1A76                 db    0
seg000:1A77                 db  75h ; u             ; $9d75
seg000:1A78                 db  9Dh ; Ø
seg000:1A79                 db  6Bh ; k             ; $9d6b
seg000:1A7A                 db  9Dh ; Ø
seg000:1A7B                 db 0B9h ; ¦             ; $9db9
seg000:1A7C                 db  9Dh ; Ø
seg000:1A7D                 db  90h ; É             ; $9a90
seg000:1A7E                 db  9Ah ; Ü
seg000:1A7F                 db  24h ; $             ; $0024
seg000:1A80                 db    0
seg000:1A81                 db  2Ah ; *             ; $002a
seg000:1A82                 db    0
seg000:1A83                 db  2Dh ; -             ; $002d
seg000:1A84                 db    0
seg000:1A85                 db  9Dh ; Ø             ; $9a9d
seg000:1A86                 db  9Ah ; Ü
seg000:1A87                 db  69h ; i             ; $0069
seg000:1A88                 db    0
seg000:1A89                 db  60h ; `             ; $0060
seg000:1A8A                 db    0
seg000:1A8B                 db  63h ; c             ; $0063
seg000:1A8C                 db    0
seg000:1A8D                 db 0C1h ; -             ; $9dc1
seg000:1A8E                 db  9Dh ; Ø
seg000:1A8F ; ---------------------------------------------------------------------------
seg000:1A8F                 retn                    ; CALLED BY JUMP TABLE / ROUTINE ABOVE.
seg000:1A90
seg000:1A90 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1A90
seg000:1A90
seg000:1A90 CON__sub_1A90   proc near
seg000:1A90                 test    byte ptr ds:aBaudEmpf_+4, 80h ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut_
seg000:1A95                 jnz     short loc_1A9A
seg000:1A97                 jmp     near ptr 8051h  ; F4051
seg000:1A97                                         ; SETS  ds:0EDCh
seg000:1A9A ; ---------------------------------------------------------------------------
seg000:1A9A
seg000:1A9A loc_1A9A:                               ; CODE XREF: CON__sub_1A90+5j
seg000:1A9A                 jmp     near ptr 8054h  ; F4054
seg000:1A9A CON__sub_1A90   endp                    ; GETS DATA from  ds:0EDCh
seg000:1A9A
seg000:1A9D
seg000:1A9D ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1A9D
seg000:1A9D
seg000:1A9D CON__sub_1A9D   proc near
seg000:1A9D                 cmp     word ptr ds:aProtocol+7, 0 ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut_
seg000:1AA2                 jnz     short CON__loc_1AA7 ;
seg000:1AA2                                         ;
seg000:1AA4                 call    CON__sub_1E4D
seg000:1AA7
seg000:1AA7 CON__loc_1AA7:                          ; CODE XREF: CON__sub_1A9D+5j
seg000:1AA7                 mov     bx, word ptr ds:aProtocol+7 ; DS:0F3E
seg000:1AA7                                         ;
seg000:1AA7                                         ; - CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1AA7                                         ;
seg000:1AAB
seg000:1AAB loc_1AAB:                               ; CODE XREF: seg000:1AD1j
seg000:1AAB                                         ; seg000:1AD6j
seg000:1AAB                 jmp     word ptr cs:[bx-6550h]
seg000:1AAB CON__sub_1A9D   endp
seg000:1AAB
seg000:1AB0 ; ---------------------------------------------------------------------------
seg000:1AB0                 neg     byte ptr [bp+si-650Eh]
seg000:1AB4                 out     9Ah, al
seg000:1AB6                 loop    loc_1A52
seg000:1AB8                 fcomp   dword ptr [bp+si-6544h]
seg000:1ABC                 mov     cx, ax
seg000:1ABE                 mov     ax, word ptr ds:aProtocol+5 ; DS:0F3C
seg000:1AC1                 mov     word ptr ds:aProtocol+7, ax ; DS:0F3E
seg000:1AC4                 test    byte ptr es:TXT_GRAFIX_8084+0Bh, 1 ; 0x8f DEFAULT CHAR SET (0=USASCII 1=UK)
seg000:1ACA                 mov     ax, cx
seg000:1ACC                 jnz     short CON__loc_1AD3 ;
seg000:1ACC                                         ;
seg000:1ACE                 mov     bx, 0
seg000:1AD1                 jmp     short loc_1AAB
seg000:1AD3 ; ---------------------------------------------------------------------------
seg000:1AD3
seg000:1AD3 CON__loc_1AD3:                          ; CODE XREF: seg000:1ACCj
seg000:1AD3                 mov     bx, 2
seg000:1AD6                 jmp     short loc_1AAB
seg000:1AD8 ; ---------------------------------------------------------------------------
seg000:1AD8                 or      al, 80h
seg000:1ADA                 cmp     al, 0E0h ; 'Ó'
seg000:1ADC                 jb      short CON__loc_1AF6 ;
seg000:1ADC                                         ;
seg000:1ADE                 sub     al, 5Fh ; '_'
seg000:1AE0                 jmp     short CON__loc_1AF6
seg000:1AE2 ; ---------------------------------------------------------------------------
seg000:1AE2                 or      al, 80h
seg000:1AE4                 jmp     short CON__loc_1AF6
seg000:1AE6 ; ---------------------------------------------------------------------------
seg000:1AE6                 cmp     al, 60h ; '`'
seg000:1AE8                 jb      short CON__loc_1AF6 ;
seg000:1AE8                                         ;
seg000:1AEA                 sub     al, 5Fh ; '_'
seg000:1AEC                 jmp     short CON__loc_1AF6
seg000:1AEE ; ---------------------------------------------------------------------------
seg000:1AEE
seg000:1AEE CON__loc_1AEE:                          ; CODE XREF: seg000:1AF4j
seg000:1AEE                 mov     al, 1Eh
seg000:1AF0                 jmp     short CON__loc_1AF6
seg000:1AF2 ; ---------------------------------------------------------------------------
seg000:1AF2                 cmp     al, 23h ; '#'
seg000:1AF4                 jz      short CON__loc_1AEE
seg000:1AF6 ; START OF FUNCTION CHUNK FOR CON__sub_1DB9
seg000:1AF6
seg000:1AF6 CON__loc_1AF6:                          ; CODE XREF: seg000:1ADCj
seg000:1AF6                                         ; seg000:1AE0j ...
seg000:1AF6                 mov     ah, byte ptr ds:aProtocol+9 ; CALLED BY JUMP TABLE / ROUTINE CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1AFA                 pushf
seg000:1AFB                 cli
seg000:1AFC                 inc     byte ptr ds:aBaudEmpf_ ; DS:0F2B
seg000:1B00                 mov     byte ptr ds:aBaudEmpf_+1, 1 ; DS:0F2C
seg000:1B05                 cmp     byte ptr ds:aBaudEmpf_, 1 ; DS:0F2B
seg000:1B0A                 ja      short CON__loc_1B18 ;
seg000:1B0A                                         ;
seg000:1B0C                 mov     bx, word ptr ds:aLancementAutomati+10h
seg000:1B10                 mov     cl, byte ptr ds:aLancementAutomati+12h
seg000:1B14                 mov     [bx+1000h], cl
seg000:1B18
seg000:1B18 CON__loc_1B18:                          ; CODE XREF: CON__sub_1DB9-2AFj
seg000:1B18                 popf
seg000:1B19                 test    byte ptr es:TXT_GRAFIX_80a4+6, 1 ; ES:AA
seg000:1B1F                 jz      short loc_1B5F  ;
seg000:1B1F                                         ;
seg000:1B21                 mov     cl, byte ptr ds:aCharUse ; DS:0F57
seg000:1B25                 xor     ch, ch
seg000:1B27                 mov     di, cx
seg000:1B29
seg000:1B29 CON__loc_1B29:                          ; DATA XREF: seg000:34EBr
seg000:1B29                 mov     si, cx
seg000:1B2B                 dec     si
seg000:1B2C                 mov     bh, ch
seg000:1B2E                 mov     bl, byte ptr ds:aProtocole ; DS:0F41
seg000:1B32                 sub     cx, bx
seg000:1B34                 jz      short loc_1B5F  ;
seg000:1B34                                         ;
seg000:1B36                 push    ax
seg000:1B37                 mov     dh, byte ptr ds:aProtocole+1 ; DS:0F42
seg000:1B3B                 call    near ptr 8036h  ; F4036:
seg000:1B3B                                         ; GET VIDEO RAM *OFFSET* FOR BEGINNING OF LINE (= dh). Starts with line number 1
seg000:1B3B                                         ; => RESULT : BX  (Hi Lo)
seg000:1B3B                                         ; Example: DH = 01 / BX = 00 12
seg000:1B3E                 dec     bx
seg000:1B3F                 add     si, bx
seg000:1B41                 add     di, bx
seg000:1B43                 push    si
seg000:1B44                 push    di
seg000:1B45                 push    cx
seg000:1B46                 std
seg000:1B47                 mov     dx, ds
seg000:1B49                 mov     es, dx
seg000:1B4B                 rep movsb
seg000:1B4D                 mov     dx, 1000h
seg000:1B50                 pop     cx
seg000:1B51                 pop     di
seg000:1B52                 pop     si
seg000:1B53                 add     di, dx
seg000:1B55                 add     si, dx
seg000:1B57                 rep movsb
seg000:1B59                 mov     dx, 0ED00h
seg000:1B5C                 mov     es, dx
seg000:1B5E                 assume es:nothing
seg000:1B5E                 pop     ax
seg000:1B5F
seg000:1B5F loc_1B5F:                               ; CODE XREF: CON__sub_1DB9-29Aj
seg000:1B5F                                         ; CON__sub_1DB9-285j
seg000:1B5F                 pushf
seg000:1B60                 cli
seg000:1B61                 mov     bl, byte ptr ds:aCharUse ; DS:0F57
seg000:1B65                 cmp     byte ptr ds:aProtocole, bl ; DS:0F41
seg000:1B69                 jnb     short loc_1BDA
seg000:1B6B
seg000:1B6B loc_1B6B:                               ; CODE XREF: CON__sub_1DB9-1A5j
seg000:1B6B                 mov     bx, word ptr ds:aLancementAutomati+10h ; DS:0ED8
seg000:1B6F                 mov     [bx], al
seg000:1B71                 mov     [bx+1000h], ah
seg000:1B75                 mov     cx, word ptr ds:aProtocole ; DS:0F41
seg000:1B79                 mov     word ptr ds:aVRscep+7, cx
seg000:1B7D
seg000:1B7D loc_1B7D:                               ;
seg000:1B7D                 inc     byte ptr ds:aProtocole ; DS:0F41
seg000:1B81                 inc     word ptr ds:aLancementAutomati+10h ; DS:0ED8
seg000:1B85                 add     cl, 9
seg000:1B88                 cmp     cl, byte ptr ds:aCharUse ; DS:0F57
seg000:1B8C                 jbe     short loc_1B91  ;
seg000:1B8C                                         ;
seg000:1B8E                 call    near ptr 8039h  ; F4039
seg000:1B8E                                         ; KEYBOARD RELATED.
seg000:1B8E                                         ; Bell sound (if certain conditions are met).
seg000:1B91
seg000:1B91 loc_1B91:                               ; CODE XREF: CON__sub_1DB9-22Dj
seg000:1B91                 inc     bx
seg000:1B92                 and     byte ptr ds:aProtocole+2, 0FDh ; DS:0F43
seg000:1B97                 dec     byte ptr ds:aBaudEmpf_ ; DS:0F2B
seg000:1B9B                 jg      short DONTSAVE_n_LEAVE__loc_1BD8
seg000:1B9D
seg000:1B9D loc_1B9D:                               ; CODE XREF: seg000:000Cj
seg000:1B9D                 mov     ah, [bx+1000h]
seg000:1BA1                 mov     byte ptr ds:aLancementAutomati+12h, ah ; DS:0EDA
seg000:1BA5                 cmp     al, 20h ; ' '
seg000:1BA7                 jnz     short loc_1BB8  ;
seg000:1BA7                                         ;
seg000:1BA9                 test    byte ptr ds:aVolBip+7, 40h ; DS:0F90
seg000:1BAE                 jz      short loc_1BB8  ;
seg000:1BAE                                         ;
seg000:1BB0                 test    byte ptr es:89h, 1
seg000:1BB6                 jnz     short loc_1BBC
seg000:1BB8
seg000:1BB8 loc_1BB8:                               ; CODE XREF: CON__sub_1DB9-212j
seg000:1BB8                                         ; CON__sub_1DB9-20Bj
seg000:1BB8                 mov     al, 3Dh ; '='
seg000:1BBA                 jmp     short loc_1BC2
seg000:1BBC ; ---------------------------------------------------------------------------
seg000:1BBC
seg000:1BBC loc_1BBC:                               ; CODE XREF: CON__sub_1DB9-203j
seg000:1BBC                 mov     al, 27h ; '''
seg000:1BBE                 xor     ah, byte ptr ds:aBaudEmpf_+2 ; DS:0F2D
seg000:1BC2
seg000:1BC2 loc_1BC2:                               ; CODE XREF: CON__sub_1DB9-1FFj
seg000:1BC2                 mov     [bx+1000h], ah
seg000:1BC6                 mov     byte ptr ds:aLancementAutomati+0Fh, al ; DS:0ED7
seg000:1BC9                 and     byte ptr ds:aProtocole+2, 0FDh ; DS:0F43
seg000:1BCE
seg000:1BCE SAVE_to_0F2B_0F2C__loc_1BCE:            ; CODE XREF: CON__sub_1DB9-1BAj
seg000:1BCE                 mov     byte ptr ds:aBaudEmpf_, 0 ; DS:0F2B
seg000:1BD3                 mov     byte ptr ds:aBaudEmpf_+1, 3 ; DS:0F2C
seg000:1BD8
seg000:1BD8 DONTSAVE_n_LEAVE__loc_1BD8:             ; CODE XREF: CON__sub_1DB9-21Ej
seg000:1BD8                                         ; CON__sub_1DB9-1BCj
seg000:1BD8                 popf
seg000:1BD9                 retn
seg000:1BDA ; ---------------------------------------------------------------------------
seg000:1BDA
seg000:1BDA loc_1BDA:                               ; CODE XREF: CON__sub_1DB9-250j
seg000:1BDA                 test    byte ptr ds:aProtocole+2, 2 ; DS:0F43
seg000:1BDF                 jnz     short AUTO_WRAP__loc_1C01 ;
seg000:1BDF                                         ;
seg000:1BE1                 or      byte ptr ds:aProtocole+2, 2 ; DS:0F43
seg000:1BE6
seg000:1BE6 loc_1BE6:                               ; CODE XREF: CON__sub_1DB9-1B2j
seg000:1BE6                 mov     bx, word ptr ds:aLancementAutomati+10h
seg000:1BEA                 mov     [bx], al
seg000:1BEC                 mov     [bx+1000h], ah
seg000:1BF0                 mov     byte ptr ds:aLancementAutomati+12h, ah ; DS:0EDA
seg000:1BF4                 mov     byte ptr ds:aLancementAutomati+0Fh, 3Fh ; '?' ; DS:0ED7
seg000:1BF9                 dec     byte ptr ds:aBaudEmpf_ ; DS:0F2B
seg000:1BFD                 jg      short DONTSAVE_n_LEAVE__loc_1BD8
seg000:1BFF                 jmp     short SAVE_to_0F2B_0F2C__loc_1BCE
seg000:1C01 ; ---------------------------------------------------------------------------
seg000:1C01
seg000:1C01 AUTO_WRAP__loc_1C01:                    ; CODE XREF: CON__sub_1DB9-1DAj
seg000:1C01                 test    byte ptr es:8Dh, 1 ; 0x8d AUTO WRAP (0=OFF 1=ON)
seg000:1C07                 jz      short loc_1BE6
seg000:1C09                 popf
seg000:1C0A                 push    ax
seg000:1C0B                 call    near ptr 801Bh  ; F401B
seg000:1C0B                                         ; CURSOR RELATED #2
seg000:1C0B                                         ; Disables, then enables cursor.
seg000:1C0B                                         ; Sets memory location to 1.
seg000:1C0B                                         ;
seg000:1C0E                 call    near ptr 8027h  ; F4027
seg000:1C0E                                         ; VIDEO : uses fast video & cursor routines.
seg000:1C11                 pop     ax
seg000:1C12                 pushf
seg000:1C13                 cli
seg000:1C14                 jmp     loc_1B6B
seg000:1C14 ; END OF FUNCTION CHUNK FOR CON__sub_1DB9
seg000:1C17 ; ---------------------------------------------------------------------------
seg000:1C17
seg000:1C17 WAIT_FOR_EFEF5_1E__loc_1C17:            ; CODE XREF: seg000:000Fj
seg000:1C17                                         ; seg000:1C1Cj
seg000:1C17                 test    byte ptr ds:unk_1EF5, 1Eh
seg000:1C1C                 jnz     short WAIT_FOR_EFEF5_1E__loc_1C17
seg000:1C1E                 retn
seg000:1C1E ; ---------------------------------------------------------------------------
seg000:1C1F                 db    4,   4,   4,   4,   4,   6,   4,   8, 0Ah, 0Ch, 0Eh, 0Eh, 0Eh, 10h, 12h
seg000:1C1F                 db  14h,   4,   4,   4,   4,   4,   4,   4,   4, 16h,   4, 16h, 18h,   4,   4
seg000:1C1F                 db    4,   4,   0,   0,   0, 20h,   0,   0,   0,   0,   0,   0,   0,   0,   0
seg000:1C1F                 db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
seg000:1C1F                 db    0,   0,   0,   0, 20h,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
seg000:1C1F                 db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
seg000:1C1F                 db    0, 20h, 20h, 20h, 20h, 20h, 20h,   0,   0,   0,   0,   0,   0,   0,   0
seg000:1C1F                 db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
seg000:1C1F                 db    0,   0
seg000:1C99 ; ---------------------------------------------------------------------------
seg000:1C99
seg000:1C99 loc_1C99:                               ; CODE XREF: seg000:33B6j
seg000:1C99                 add     [bx+si], ah
seg000:1C9B                 and     [bx+si], ah
seg000:1C9D                 and     [si], al
seg000:1C9F                 add     al, 4
seg000:1CA1                 add     al, 4
seg000:1CA3                 sbb     bl, [si]
seg000:1CA5                 add     al, 4
seg000:1CA7                 and     al, [si]
seg000:1CA9                 add     al, 4
seg000:1CAB                 add     al, 1Eh
seg000:1CAD                 and     al, 26h
seg000:1CAF                 add     al, 4
seg000:1CB1                 add     al, 4
seg000:1CB3                 add     al, 4
seg000:1CB5                 add     al, 4
seg000:1CB7                 add     al, 4
seg000:1CB9                 add     al, 28h ; '('
seg000:1CBB                 add     al, 4
seg000:1CBD                 add     al, 4
seg000:1CBF                 add     al, 2
seg000:1CC1                 add     al, [bp+si]
seg000:1CC3                 add     al, 2
seg000:1CC5                 add     al, 2
seg000:1CC7                 add     al, [bp+si]
seg000:1CC9                 add     al, [bp+si]
seg000:1CCB                 add     al, 4
seg000:1CCD                 add     al, 4
seg000:1CCF                 add     al, [bp+si]
seg000:1CD1                 add     al, [bp+si]
seg000:1CD3                 add     al, 2
seg000:1CD5                 add     al, [bp+si]
seg000:1CD7                 add     al, 2
seg000:1CD9                 add     al, [bp+si]
seg000:1CDB                 add     al, [bp+si]
seg000:1CDD                 add     al, 2
seg000:1CDF                 add     al, [bp+si]
seg000:1CE1                 add     al, [bp+si]
seg000:1CE3                 add     al, [bp+si]
seg000:1CE5                 add     al, [bp+si]
seg000:1CE7                 add     al, [bp+si]
seg000:1CE9                 add     al, [bp+si]
seg000:1CEB                 add     al, [bp+si]
seg000:1CED                 add     al, [bp+si]
seg000:1CEF                 add     al, 2
seg000:1CF1                 add     al, [bp+si]
seg000:1CF3                 add     al, [bp+si]
seg000:1CF5                 add     al, [bp+si]
seg000:1CF7                 add     al, [bp+si]
seg000:1CF9                 add     al, [bp+si]
seg000:1CFB                 add     al, [bp+si]
seg000:1CFD                 add     al, 2
seg000:1CFF                 add     al, [bp+si]
seg000:1D01                 add     al, [bp+si]
seg000:1D03                 add     al, [bp+si]
seg000:1D05                 add     al, [bp+si]
seg000:1D07                 add     al, [bp+si]
seg000:1D09                 add     al, [bp+si]
seg000:1D0B                 add     al, [bp+si]
seg000:1D0D                 add     al, [bp+si]
seg000:1D0F                 add     al, 2
seg000:1D11                 add     al, [bp+si]
seg000:1D13                 add     al, [bp+si]
seg000:1D15                 add     al, [bp+si]
seg000:1D17                 add     al, [bp+si]
seg000:1D19                 add     al, [bp+si]
seg000:1D1B                 add     al, [bp+si]
seg000:1D1D                 add     al, 4
seg000:1D1F
seg000:1D1F CON_WAIT__loc_1D1F:                     ; CODE XREF: seg000:1D24j
seg000:1D1F                 cmp     word ptr ds:aLancementAutomati+1, 0 ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1D24                 jnz     short CON_WAIT__loc_1D1F ;
seg000:1D24                                         ;
seg000:1D26                 mov     al, 0A7h ; 'º'  ; KBD_COMMAND ($a7 is BELL)
seg000:1D28                 call    j_KBD_CMD_AL__sub_2846
seg000:1D2B                 mov     word ptr ds:aLancementAutomati+1, 8 ; DS:0EC9
seg000:1D31
seg000:1D31 locret_1D31:                            ; CODE XREF: seg000:0009j
seg000:1D31                 retn
seg000:1D32
seg000:1D32 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1D32
seg000:1D32
seg000:1D32 CON__sub_1D32   proc near
seg000:1D32                 call    near ptr 801Eh  ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1D32                                         ;
seg000:1D32                                         ; F401E
seg000:1D32                                         ; ROM_DisableCursor    0x08
seg000:1D35                 and     byte ptr ds:aProtocole+2, 0FDh ; DS:0F43
seg000:1D3A                 sub     bh, bh
seg000:1D3C                 mov     al, byte ptr ds:aCharUse ; DS:0F57
seg000:1D3F
seg000:1D3F loc_1D3F:                               ; CODE XREF: CON__sub_1D32+29j
seg000:1D3F                 cmp     byte ptr ds:aProtocole, al ; DS:0F41
seg000:1D43                 jz      short loc_1D65  ;
seg000:1D43                                         ;
seg000:1D45                 pushf
seg000:1D46                 cli
seg000:1D47                 inc     byte ptr ds:aProtocole ; DS:0F41
seg000:1D4B                 inc     word ptr ds:aLancementAutomati+10h ; DS:0ED8
seg000:1D4F                 popf
seg000:1D50                 mov     bl, byte ptr ds:aProtocole ; DS:0F41
seg000:1D54                 dec     bx
seg000:1D55                 test    byte ptr es:[bx+0], 1
seg000:1D5B                 jz      short loc_1D3F  ;
seg000:1D5B                                         ;
seg000:1D5D                 sub     al, 8
seg000:1D5F                 cmp     al, byte ptr ds:aProtocole ; DS:0F41
seg000:1D63                 jnb     short loc_1D68
seg000:1D65
seg000:1D65 loc_1D65:                               ; CODE XREF: CON__sub_1D32+11j
seg000:1D65                 call    near ptr 8039h  ; F4039
seg000:1D65                                         ; [KEYBOARD]
seg000:1D65                                         ; Bell sound (if certain conditions are met).
seg000:1D65                                         ;
seg000:1D68
seg000:1D68 loc_1D68:                               ; CODE XREF: CON__sub_1D32+31j
seg000:1D68                 jmp     near ptr 8033h  ; F4033
seg000:1D68 CON__sub_1D32   endp                    ; CURSOR FX ?
seg000:1D68                                         ; Possibly emits a space ($20 char) if certain conditions are met.
seg000:1D6B
seg000:1D6B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1D6B
seg000:1D6B
seg000:1D6B CON__sub_1D6B   proc near
seg000:1D6B                 mov     byte ptr ds:aProtocol+4, 0 ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1D70                 mov     al, byte ptr ds:aProtocol+2
seg000:1D73                 jmp     short loc_1D7D
seg000:1D73 CON__sub_1D6B   endp
seg000:1D73
seg000:1D75
seg000:1D75 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1D75
seg000:1D75
seg000:1D75 CON__sub_1D75   proc near
seg000:1D75                 mov     byte ptr ds:aProtocol+4, 0FFh ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1D7A                 mov     al, byte ptr ds:aProtocol+3 ; DS:0F3A
seg000:1D7D
seg000:1D7D loc_1D7D:                               ; CODE XREF: CON__sub_1D6B+8j
seg000:1D7D                 sub     ah, ah
seg000:1D7F                 shl     ax, 1
seg000:1D81                 mov     word ptr ds:aProtocol+5, ax ; DS:0F3C
seg000:1D84                 cmp     word ptr ds:aProtocol+7, 0Ah ; DS:0F3E
seg000:1D89                 jz      short locret_1D8E ;
seg000:1D89                                         ;
seg000:1D8B                 mov     word ptr ds:aProtocol+7, ax ; DS:0F3E
seg000:1D8E
seg000:1D8E locret_1D8E:                            ; CODE XREF: CON__sub_1D75+14j
seg000:1D8E                 retn
seg000:1D8E CON__sub_1D75   endp
seg000:1D8E
seg000:1D8F
seg000:1D8F ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1D8F
seg000:1D8F
seg000:1D8F CON__sub_1D8F   proc near
seg000:1D8F                 cmp     byte ptr ds:aScrollRate+5, 0 ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1D94                 jnz     short locret_1DA4
seg000:1D96                 mov     bx, 0FD0h
seg000:1D99                 call    near ptr 805Ah  ; F405A
seg000:1D99                                         ; sub_30F2 in BOOT ROM
seg000:1D9C                 mov     bl, byte ptr ds:aScrollRate+6
seg000:1DA0                 mov     byte ptr ds:aScrollRate+5, bl
seg000:1DA4
seg000:1DA4 locret_1DA4:                            ; CODE XREF: CON__sub_1D8F+5j
seg000:1DA4                 retn
seg000:1DA4 CON__sub_1D8F   endp
seg000:1DA4
seg000:1DA5 ; ---------------------------------------------------------------------------
seg000:1DA5                 mov     cl, 4
seg000:1DA7                 mov     al, es:[bx+si]
seg000:1DAA                 and     al, 0Fh
seg000:1DAC                 inc     si
seg000:1DAD                 mov     ch, es:[bx+si]
seg000:1DB0                 inc     si
seg000:1DB1                 shl     ch, cl
seg000:1DB3                 and     ch, 0F0h
seg000:1DB6                 or      al, ch
seg000:1DB8                 retn
seg000:1DB9
seg000:1DB9 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1DB9
seg000:1DB9
seg000:1DB9 CON__sub_1DB9   proc near
seg000:1DB9
seg000:1DB9 ; FUNCTION CHUNK AT seg000:1AF6 SIZE 00000121 BYTES
seg000:1DB9
seg000:1DB9                 call    near ptr 804Eh  ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1DB9                                         ;
seg000:1DB9                                         ; F404E
seg000:1DB9                                         ; loc_28C3 : AND byte ptr ds:0F2Fh, 7Fh  / RETN
seg000:1DBC                 mov     al, 2
seg000:1DBE                 jmp     CON__loc_1AF6
seg000:1DBE CON__sub_1DB9   endp
seg000:1DBE
seg000:1DC1
seg000:1DC1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1DC1
seg000:1DC1
seg000:1DC1 CON__sub_1DC1   proc near
seg000:1DC1                 call    near ptr 8051h  ; CALLED BY JUMP TABLE / ROUTINE ROM_ConsoleOut
seg000:1DC1                                         ;
seg000:1DC1                                         ; F4051
seg000:1DC1                                         ; SETS  ds:0EDCh
seg000:1DC4                 push    ds
seg000:1DC5                 push    cs
seg000:1DC6                 pop     ds
seg000:1DC7                 mov     ax, word ptr ds:TXT_GRAFIX_8084 ; "     \r\x12\x12\x12\f     "
seg000:1DCA                 pop     ds
seg000:1DCB                 mov     word ptr ds:aLancementAutomati+14h, ax
seg000:1DCE                 jmp     near ptr 8057h  ; F4057
seg000:1DCE CON__sub_1DC1   endp                    ; loc_2AFA in BOOT ROM
seg000:1DCE
seg000:1DD1
seg000:1DD1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1DD1
seg000:1DD1
seg000:1DD1 sub_1DD1        proc near               ; CODE XREF: sub_1E09+1Ep
seg000:1DD1                                         ; sub_1E09+3Bp ...
seg000:1DD1                 push    es
seg000:1DD2                 push    cs
seg000:1DD3                 pop     es
seg000:1DD4                 assume es:nothing
seg000:1DD4                 repne scasb
seg000:1DD6                 pop     es
seg000:1DD7                 retn
seg000:1DD7 sub_1DD1        endp
seg000:1DD7
seg000:1DD8
seg000:1DD8 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1DD8
seg000:1DD8
seg000:1DD8 sub_1DD8        proc near               ; CODE XREF: sub_1E09+Ap
seg000:1DD8                                         ; CON__sub_1E4Dp
seg000:1DD8                 test    byte ptr es:TXT_GRAFIX_8094+0Ah, 1 ; NVM 0x9e CHAR CODES (0=DEC-8  1= 7-BIT)
seg000:1DDE                 jnz     short loc_1DE2
seg000:1DE0                 stc
seg000:1DE1                 retn
seg000:1DE2 ; ---------------------------------------------------------------------------
seg000:1DE2
seg000:1DE2 loc_1DE2:                               ; CODE XREF: sub_1DD8+6j
seg000:1DE2                 mov     bx, 9F51h
seg000:1DE5                 mov     dx, word ptr es:TXT_GRAFIX_80a4+8
seg000:1DEA                 and     dl, 0Fh
seg000:1DED                 mov     cl, 4
seg000:1DEF                 shl     dh, cl
seg000:1DF1                 or      dl, dh
seg000:1DF3                 sub     dh, dh
seg000:1DF5                 shl     dx, 1
seg000:1DF7                 mov     si, dx
seg000:1DF9                 cmp     word ptr cs:[bx+si], 0
seg000:1DFD                 jnz     short loc_1E01
seg000:1DFF                 stc
seg000:1E00                 retn
seg000:1E01 ; ---------------------------------------------------------------------------
seg000:1E01
seg000:1E01 loc_1E01:                               ; CODE XREF: sub_1DD8+25j
seg000:1E01                 mov     di, cs:[bx+si]
seg000:1E04                 mov     cx, cs:[di]
seg000:1E07                 clc
seg000:1E08                 retn
seg000:1E08 sub_1DD8        endp
seg000:1E08
seg000:1E09
seg000:1E09 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1E09
seg000:1E09
seg000:1E09 sub_1E09        proc near               ; CODE XREF: ConsoleLev2Stat__sub_36E3:KBD__loc_3773p
seg000:1E09                 test    ah, 1
seg000:1E0C                 jnz     short loc_1E49
seg000:1E0E                 test    ah, 4
seg000:1E11                 jnz     short loc_1E49
seg000:1E13                 call    sub_1DD8
seg000:1E16                 jb      short loc_1E49
seg000:1E18                 shr     dx, 1
seg000:1E1A                 cmp     dl, 0Bh
seg000:1E1D                 jz      short loc_1E23
seg000:1E1F                 test    al, 80h
seg000:1E21                 jz      short loc_1E40
seg000:1E23
seg000:1E23 loc_1E23:                               ; CODE XREF: sub_1E09+14j
seg000:1E23                 push    di
seg000:1E24                 dec     di
seg000:1E25                 push    cx
seg000:1E26                 std
seg000:1E27                 call    sub_1DD1
seg000:1E2A                 pop     bx
seg000:1E2B                 jnz     short loc_1E34
seg000:1E2D                 mov     al, cs:[bx+di+3]
seg000:1E31                 pop     di
seg000:1E32                 stc
seg000:1E33                 retn
seg000:1E34 ; ---------------------------------------------------------------------------
seg000:1E34
seg000:1E34 loc_1E34:                               ; CODE XREF: sub_1E09+22j
seg000:1E34                 pop     di
seg000:1E35                 cmp     dl, 0Bh
seg000:1E38                 jnz     short loc_1E4B
seg000:1E3A                 test    al, 80h
seg000:1E3C                 jnz     short loc_1E4B
seg000:1E3E                 mov     cx, bx
seg000:1E40
seg000:1E40 loc_1E40:                               ; CODE XREF: sub_1E09+18j
seg000:1E40                 add     di, 2
seg000:1E43                 cld
seg000:1E44                 call    sub_1DD1
seg000:1E47                 jz      short loc_1E4B
seg000:1E49
seg000:1E49 loc_1E49:                               ; CODE XREF: sub_1E09+3j
seg000:1E49                                         ; sub_1E09+8j ...
seg000:1E49                 stc
seg000:1E4A                 retn
seg000:1E4B ; ---------------------------------------------------------------------------
seg000:1E4B
seg000:1E4B loc_1E4B:                               ; CODE XREF: sub_1E09+2Fj
seg000:1E4B                                         ; sub_1E09+33j ...
seg000:1E4B                 clc
seg000:1E4C                 retn
seg000:1E4C sub_1E09        endp
seg000:1E4C
seg000:1E4D
seg000:1E4D ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1E4D
seg000:1E4D
seg000:1E4D CON__sub_1E4D   proc near               ; CODE XREF: CON__sub_1A9D+7p
seg000:1E4D                 call    sub_1DD8
seg000:1E50                 jb      short locret_1E7A
seg000:1E52                 add     di, 2
seg000:1E55                 push    cx
seg000:1E56                 cld
seg000:1E57                 call    sub_1DD1
seg000:1E5A                 pop     bx
seg000:1E5B                 jnz     short locret_1E7A
seg000:1E5D                 sub     di, bx
seg000:1E5F                 mov     dx, ax
seg000:1E61                 mov     al, cs:[di-3]
seg000:1E65                 cmp     al, 0A0h ; 'á'
seg000:1E67                 jnz     short loc_1E6C
seg000:1E69                 mov     al, 22h ; '"'
seg000:1E6B                 retn
seg000:1E6C ; ---------------------------------------------------------------------------
seg000:1E6C
seg000:1E6C loc_1E6C:                               ; CODE XREF: CON__sub_1E4D+1Aj
seg000:1E6C                 cmp     al, 0FFh
seg000:1E6E                 jnz     short locret_1E7A
seg000:1E70                 cmp     dl, 5Bh ; '['
seg000:1E73                 jnz     short loc_1E78
seg000:1E75                 mov     al, 0FDh ; '²'
seg000:1E77                 retn
seg000:1E78 ; ---------------------------------------------------------------------------
seg000:1E78
seg000:1E78 loc_1E78:                               ; CODE XREF: CON__sub_1E4D+26j
seg000:1E78                 mov     al, 66h ; 'f'
seg000:1E7A
seg000:1E7A locret_1E7A:                            ; CODE XREF: CON__sub_1E4D+3j
seg000:1E7A                                         ; CON__sub_1E4D+Ej ...
seg000:1E7A                 retn
seg000:1E7A CON__sub_1E4D   endp
seg000:1E7A
seg000:1E7A ; ---------------------------------------------------------------------------
seg000:1E7B                 db 0E0h ; Ó             ; NO CODE.
seg000:1E7C                 db 0E2h ; Ô
seg000:1E7D                 db 0E7h ; þ
seg000:1E7E                 db 0E8h ; Þ
seg000:1E7F                 db 0E9h ; Ú
seg000:1E80                 db 0EAh ; Û
seg000:1E81                 db 0EEh ; ¯
seg000:1E82                 db 0F4h ; ¶
seg000:1E83                 db 0F9h ; ¨
seg000:1E84                 db 0FBh ; ¹
seg000:1E85                 db  0Ah
seg000:1E86                 db    0
seg000:1E87                 db  40h ; @
seg000:1E88                 db  5Bh ; [
seg000:1E89                 db  5Ch ; \
seg000:1E8A                 db  7Dh ; }
seg000:1E8B                 db  7Bh ; {
seg000:1E8C                 db  5Dh ; ]
seg000:1E8D                 db  5Eh ; ^
seg000:1E8E                 db  60h ; `
seg000:1E8F                 db  7Ch ; |
seg000:1E90                 db  7Eh ; ~
seg000:1E91                 db 0A3h ; ú
seg000:1E92                 db    1
seg000:1E93                 db    0
seg000:1E94                 db  23h ; #
seg000:1E95                 db 0C4h ; -
seg000:1E96                 db 0C5h ; +
seg000:1E97                 db 0D6h ; Í
seg000:1E98                 db 0DCh ; _
seg000:1E99                 db 0E4h ; õ
seg000:1E9A                 db 0E5h ; Õ
seg000:1E9B                 db 0E9h ; Ú
seg000:1E9C                 db 0F6h ; ÷
seg000:1E9D                 db 0FCh ; ³
seg000:1E9E                 db    9
seg000:1E9F                 db    0
seg000:1EA0                 db  5Bh ; [
seg000:1EA1                 db  5Dh ; ]
seg000:1EA2                 db  5Ch ; \
seg000:1EA3                 db  5Eh ; ^
seg000:1EA4                 db  7Bh ; {
seg000:1EA5                 db  7Dh ; }
seg000:1EA6                 db  60h ; `
seg000:1EA7                 db  7Ch ; |
seg000:1EA8                 db  7Eh ; ~
seg000:1EA9                 db 0C9h ; +
seg000:1EAA                 db 0C4h ; -
seg000:1EAB                 db 0C5h ; +
seg000:1EAC                 db 0D6h ; Í
seg000:1EAD                 db 0DCh ; _
seg000:1EAE                 db 0E4h ; õ
seg000:1EAF                 db 0E5h ; Õ
seg000:1EB0                 db 0E9h ; Ú
seg000:1EB1                 db 0F6h ; ÷
seg000:1EB2                 db 0FCh ; ³
seg000:1EB3                 db  0Ah
seg000:1EB4                 db    0
seg000:1EB5                 db  40h ; @
seg000:1EB6                 db  5Bh ; [
seg000:1EB7                 db  5Dh ; ]
seg000:1EB8                 db  5Ch ; \
seg000:1EB9                 db  5Eh ; ^
seg000:1EBA                 db  7Bh ; {
seg000:1EBB                 db  7Dh ; }
seg000:1EBC                 db  60h ; `
seg000:1EBD                 db  7Ch ; |
seg000:1EBE                 db  7Eh ; ~
seg000:1EBF                 db 0C4h ; -
seg000:1EC0                 db 0C5h ; +
seg000:1EC1                 db 0C6h ; ã
seg000:1EC2                 db 0D8h ; Ï
seg000:1EC3                 db 0DCh ; _
seg000:1EC4                 db 0E4h ; õ
seg000:1EC5                 db 0E5h ; Õ
seg000:1EC6                 db 0E6h ; µ
seg000:1EC7                 db 0F8h ; °
seg000:1EC8 word_1EC8       dw 0AFCh                ; DATA XREF: ConsoleLev1In__sub_1F6F:loc_1FF4r
seg000:1EC8                                         ; KBD_CLR_WAIT__sub_2C69+2w ...
seg000:1ECA unk_1ECA        db    0                 ; DATA XREF: sub_2EBCr
seg000:1ECA                                         ; SET_UP_PROCESS_n_JUMP__sub_2F18+22r ...
seg000:1ECB                 db  40h ; @
seg000:1ECC unk_1ECC        db  5Dh ; ]             ; DATA XREF: SET_UP__sub_3118+9r
seg000:1ECC                                         ; SET_UP__sub_3344+17r ...
seg000:1ECD unk_1ECD        db  5Bh ; [             ; DATA XREF: SET_UP_LOWER_DISPLAY__sub_304D+15w
seg000:1ECD                                         ; SET_UP__sub_3344+9w ...
seg000:1ECE                 db  5Ch ; \
seg000:1ECF unk_1ECF        db  5Eh ; ^             ; DATA XREF: sub_2EBC+1Dr
seg000:1ECF                                         ; sub_3126+6r ...
seg000:1ED0                 db  60h ; `
seg000:1ED1 unk_1ED1        db  7Dh ; }             ; DATA XREF: sub_2EBC+8r
seg000:1ED1                                         ; sub_2EBC+29r ...
seg000:1ED2 unk_1ED2        db  7Bh ; {             ; DATA XREF: sub_2EBC+21r
seg000:1ED2                                         ; sub_3126r ...
seg000:1ED3 unk_1ED3        db  7Ch ; |             ; DATA XREF: sub_2EBC+25r
seg000:1ED3                                         ; SET_UP__sub_3344+10r ...
seg000:1ED4                 db  7Eh ; ~
seg000:1ED5 byte_1ED5       db 0A1h                 ; DATA XREF: seg000:2E2Cr
seg000:1ED5                                         ; sub_2E7C+18r ...
seg000:1ED6 unk_1ED6        db 0A3h ; ú             ; DATA XREF: SET_UP__sub_3118r
seg000:1ED6                                         ; SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603:loc_368Cw
seg000:1ED7 unk_1ED7        db 0A7h ; º             ; DATA XREF: seg000:2E10r
seg000:1ED7                                         ; seg000:33D7w
seg000:1ED8                 db 0B0h ; ¦
seg000:1ED9 unk_1ED9        db 0BFh ; +             ; DATA XREF: seg000:2E0Cr
seg000:1ED9                                         ; seg000:33DBw
seg000:1EDA                 db 0D1h ; Ð
seg000:1EDB unk_1EDB        db 0E7h ; þ             ; DATA XREF: SET_UP_MAIN__sub_2CB2+4w
seg000:1EDB                                         ; SET_UP_LOWER_DISPLAY__sub_304Dr
seg000:1EDC                 db 0F1h ; ±
seg000:1EDD unk_1EDD        db    8                 ; DATA XREF: SET_UP_MAIN__sub_2CB2+8w
seg000:1EDD                                         ; SET_UP_LOWER_DISPLAY__sub_304D+4r ...
seg000:1EDE                 db    0
seg000:1EDF unk_1EDF        db  5Bh ; [             ; DATA XREF: SET_UP__sub_303Fr
seg000:1EE0                 db  23h ; #
seg000:1EE1 unk_1EE1        db  40h ; @             ; DATA XREF: SET_UP__sub_303F+4r
seg000:1EE2                 db  7Bh ; {
seg000:1EE3 word_1EE3       dw 5C5Dh                ; DATA XREF: seg000:2E28r
seg000:1EE3                                         ; seg000:330Aw
seg000:1EE5                 db  7Dh ; }
seg000:1EE6                 db  7Ch ; |
seg000:1EE7                 db 0A7h ; º
seg000:1EE8                 db 0C4h ; -
seg000:1EE9                 db 0D6h ; Í
seg000:1EEA                 db 0DCh ; _
seg000:1EEB                 db 0DFh ; ¯
seg000:1EEC                 db 0E4h ; õ
seg000:1EED                 db 0F6h ; ÷
seg000:1EEE                 db 0FCh ; ³
seg000:1EEF                 db    8
seg000:1EF0                 db    0
seg000:1EF1                 db  40h ; @
seg000:1EF2                 db  5Bh ; [
seg000:1EF3                 db  5Ch ; \
seg000:1EF4                 db  5Dh ; ]
seg000:1EF5 unk_1EF5        db  7Eh ; ~             ; DATA XREF: seg000:WAIT_FOR_EFEF5_1E__loc_1C17r
seg000:1EF5                                         ; KBD_ISR__sub_2930+55r ...
seg000:1EF6 unk_1EF6        db  7Bh ; {             ; DATA XREF: seg000:28CFr
seg000:1EF6                                         ; seg000:28D7w ...
seg000:1EF7                 db  7Ch ; |
seg000:1EF8 unk_1EF8        db  7Dh ; }             ; DATA XREF: KBD_CLR_WAIT__sub_2C69+Ew
seg000:1EF8                                         ; seg000:37C6r ...
seg000:1EF9 unk_1EF9        db 0A3h ; ú             ; DATA XREF: KBD_CLR_WAIT__sub_2C69+5w
seg000:1EF9                                         ; seg000:LEAVE_SET_UP_PROPERLY__loc_2C8Dr ...
seg000:1EFA                 db 0BFh ; +
seg000:1EFB                 db 0FFh
seg000:1EFC                 db 0BDh ; ¢
seg000:1EFD                 db  7Ch ; |
seg000:1EFE                 db 0A0h ; á
seg000:1EFF                 db 0FFh
seg000:1F00                 db 0BCh ; +
seg000:1F01                 db  27h ; '
seg000:1F02                 db    9
seg000:1F03                 db    0
seg000:1F04                 db  23h ; #
seg000:1F05                 db  40h ; @
seg000:1F06                 db  5Bh ; [
seg000:1F07                 db  5Ch ; \
seg000:1F08                 db  5Dh ; ]
seg000:1F09                 db  7Bh ; {
seg000:1F0A                 db  7Ch ; |
seg000:1F0B                 db  7Dh ; }
seg000:1F0C                 db  7Eh ; ~
seg000:1F0D                 db 0A0h ; á
seg000:1F0E                 db 0A3h ; ú
seg000:1F0F                 db 0A7h ; º
seg000:1F10                 db 0B0h ; ¦
seg000:1F11                 db 0E0h ; Ó
seg000:1F12                 db 0E7h ; þ
seg000:1F13                 db 0E8h ; Þ
seg000:1F14                 db 0E9h ; Ú
seg000:1F15                 db 0F9h ; ¨
seg000:1F16                 db    9
seg000:1F17                 db    0
seg000:1F18                 db  7Eh ; ~
seg000:1F19                 db  23h ; #
seg000:1F1A                 db  5Dh ; ]
seg000:1F1B                 db  5Bh ; [
seg000:1F1C                 db  40h ; @
seg000:1F1D                 db  5Ch ; \
seg000:1F1E                 db  7Dh ; }
seg000:1F1F                 db  7Bh ; {
seg000:1F20                 db  7Ch ; |
seg000:1F21                 db 0A3h ; ú
seg000:1F22                 db 0A7h ; º
seg000:1F23                 db 0B0h ; ¦
seg000:1F24                 db 0ECh ; ý
seg000:1F25                 db 0E0h ; Ó
seg000:1F26                 db 0E7h ; þ
seg000:1F27                 db 0E8h ; Þ
seg000:1F28                 db 0E9h ; Ú
seg000:1F29                 db 0F2h ; =
seg000:1F2A                 db 0F9h ; ¨
seg000:1F2B                 db  0Ah
seg000:1F2C                 db    0
seg000:1F2D                 db  23h ; #
seg000:1F2E                 db  40h ; @
seg000:1F2F                 db  5Bh ; [
seg000:1F30                 db  7Eh ; ~
seg000:1F31                 db  7Bh ; {
seg000:1F32                 db  5Ch ; \
seg000:1F33                 db  7Dh ; }
seg000:1F34                 db  5Dh ; ]
seg000:1F35                 db  7Ch ; |
seg000:1F36                 db  60h ; `
seg000:1F37                 db 0E0h ; Ó
seg000:1F38                 db 0E4h ; õ
seg000:1F39                 db 0E7h ; þ
seg000:1F3A                 db 0E8h ; Þ
seg000:1F3B                 db 0E9h ; Ú
seg000:1F3C                 db 0EAh ; Û
seg000:1F3D                 db 0EEh ; ¯
seg000:1F3E                 db 0F4h ; ¶             ; NO CODE.
seg000:1F3F                 db 0F6h ; ÷
seg000:1F40                 db 0F9h ; ¨
seg000:1F41                 db 0FBh ; ¹
seg000:1F42                 db 0FCh ; ³
seg000:1F43                 db  0Ch
seg000:1F44                 db    0
seg000:1F45                 db  40h ; @
seg000:1F46                 db  7Bh ; {
seg000:1F47                 db  5Ch ; \
seg000:1F48                 db  5Fh ; _
seg000:1F49                 db  5Bh ; [
seg000:1F4A                 db  5Dh ; ]
seg000:1F4B                 db  5Eh ; ^
seg000:1F4C                 db  60h ; `
seg000:1F4D                 db  7Ch ; |
seg000:1F4E                 db  23h ; #
seg000:1F4F                 db  7Eh ; ~
seg000:1F50                 db  7Dh ; }
seg000:1F51                 db    0
seg000:1F52                 db    0
seg000:1F53                 db  85h ; à
seg000:1F54                 db  9Eh ; ×
seg000:1F55                 db  92h ; Æ
seg000:1F56                 db  9Eh ; ×
seg000:1F57                 db  9Eh ; ×
seg000:1F58                 db  9Eh ; ×
seg000:1F59                 db 0B3h ; ¦
seg000:1F5A                 db  9Eh ; ×
seg000:1F5B                 db 0C9h ; +
seg000:1F5C                 db  9Eh ; ×
seg000:1F5D                 db 0C9h ; +
seg000:1F5E                 db  9Eh ; ×
seg000:1F5F                 db 0DDh ; ¦
seg000:1F60                 db  9Eh ; ×
seg000:1F61                 db 0EFh ; ´
seg000:1F62                 db  9Eh ; ×
seg000:1F63                 db  43h ; C
seg000:1F64                 db  9Fh ; ƒ
seg000:1F65                 db  43h ; C
seg000:1F66                 db  9Fh ; ƒ
seg000:1F67                 db    2
seg000:1F68                 db  9Fh ; ƒ
seg000:1F69                 db  16h
seg000:1F6A                 db  9Fh ; ƒ
seg000:1F6B                 db  16h
seg000:1F6C                 db  9Fh ; ƒ
seg000:1F6D                 db  2Bh ; +
seg000:1F6E                 db  9Fh ; ƒ
seg000:1F6F
seg000:1F6F ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:1F6F
seg000:1F6F ; Attributes: bp-based frame
seg000:1F6F
seg000:1F6F ConsoleLev1In__sub_1F6F proc near       ; CODE XREF: j_ConsoleLev1In__sub_1F6Fj
seg000:1F6F                                         ; COMPOSE__sub_20B6:loc_20C0p
seg000:1F6F                 call    RAW_KBD_DATA__sub_275B
seg000:1F72                 jb      short loc_1F77  ;
seg000:1F72                                         ;
seg000:1F74                 xor     ax, ax
seg000:1F76                 retn
seg000:1F77 ; ---------------------------------------------------------------------------
seg000:1F77
seg000:1F77 loc_1F77:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+3j
seg000:1F77                 call    sub_2053
seg000:1F7A                 test    byte ptr ds:aVolBip+7, 8 ; DS:0F90 = EEF90
seg000:1F7F                 jnz     short loc_1F8D  ;
seg000:1F7F                                         ;
seg000:1F81                 cmp     al, 0B1h ; '¦'  ; 'Compose' ?
seg000:1F83                 jnz     short loc_1F8D  ;
seg000:1F83                                         ;
seg000:1F85                 push    ax
seg000:1F86
seg000:1F86 loc_1F86:
seg000:1F86                 mov     bp, sp
seg000:1F88                 call    COMPOSE_ON__sub_20B1
seg000:1F8B                 pop     bp
seg000:1F8C                 retn
seg000:1F8D ; ---------------------------------------------------------------------------
seg000:1F8D
seg000:1F8D loc_1F8D:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+10j
seg000:1F8D                                         ; ConsoleLev1In__sub_1F6F+14j
seg000:1F8D                 cmp     al, 0BFh ; '+'
seg000:1F8F                 jnb     short loc_1FA1
seg000:1F91
seg000:1F91 loc_1F91:
seg000:1F91                 mov     bx, cs:0A3AFh
seg000:1F96
seg000:1F96 loc_1F96:                               ;
seg000:1F96                 xlat    byte ptr cs:[bx] ; FE3AF (Offset 23AF in LANGUAGE ROM)
seg000:1F96                                         ;
seg000:1F98                 cmp     al, 80h ; 'Ç'
seg000:1F9A
seg000:1F9A loc_1F9A:
seg000:1F9A                 jb      short loc_1F9F
seg000:1F9C                 or      ah, 1
seg000:1F9F
seg000:1F9F loc_1F9F:                               ; CODE XREF: ConsoleLev1In__sub_1F6F:loc_1F9Aj
seg000:1F9F                 stc
seg000:1FA0                 retn
seg000:1FA1 ; ---------------------------------------------------------------------------
seg000:1FA1
seg000:1FA1 loc_1FA1:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+20j
seg000:1FA1                 mov     cl, al
seg000:1FA3
seg000:1FA3 loc_1FA3:                               ;
seg000:1FA3                 mov     bx, 0A3B1h      ; (Offset 23b1 in LANGUAGE ROM)
seg000:1FA6                 sub     al, 0BFh ; '+'
seg000:1FA8                 mov     si, ax
seg000:1FAA                 shl     si, 1
seg000:1FAC
seg000:1FAC loc_1FAC:
seg000:1FAC                 and     si, 0FFh
seg000:1FB0                 mov     bx, cs:[bx+si]
seg000:1FB3                 xor     si, si
seg000:1FB5                 inc     si
seg000:1FB6
seg000:1FB6 loc_1FB6:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+5Aj
seg000:1FB6                                         ; ConsoleLev1In__sub_1F6F+5Fj
seg000:1FB6                 mov     dh, cs:[bx]
seg000:1FB9                 and     dh, 1Fh
seg000:1FBC                 cmp     dl, dh
seg000:1FBE                 jb      short loc_1FD0  ;
seg000:1FBE                                         ;
seg000:1FC0                 test    byte ptr cs:[bx], 40h
seg000:1FC4                 jnz     short loc_1FCB
seg000:1FC6                 add     bx, 3
seg000:1FC9                 jmp     short loc_1FB6
seg000:1FCB ; ---------------------------------------------------------------------------
seg000:1FCB
seg000:1FCB loc_1FCB:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+55j
seg000:1FCB                 add     bx, 5
seg000:1FCE                 jmp     short loc_1FB6
seg000:1FD0 ; ---------------------------------------------------------------------------
seg000:1FD0
seg000:1FD0 loc_1FD0:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+4Fj
seg000:1FD0                 test    byte ptr cs:[bx], 40h
seg000:1FD4                 jz      short CORR_CHARSET__loc_1FE0 ;
seg000:1FD4                                         ;
seg000:1FD6                 test    byte ptr es:TXT_GRAFIX_8084+1, 1 ; 0x85: CORRESPONDENCE / DATA PROC (0=DP 1=CORR)
seg000:1FDC                 jnz     short CORR_CHARSET__loc_1FE0 ;
seg000:1FDC                                         ;
seg000:1FDE                 inc     si              ; DATA PROCESSING CHARSET.
seg000:1FDF                 inc     si
seg000:1FE0
seg000:1FE0 CORR_CHARSET__loc_1FE0:                 ; CODE XREF: ConsoleLev1In__sub_1F6F+65j
seg000:1FE0                                         ; ConsoleLev1In__sub_1F6F+6Dj
seg000:1FE0                 mov     al, cs:[bx+si]
seg000:1FE3                 cmp     al, 61h ; 'a'
seg000:1FE5                 jb      short loc_2009  ;
seg000:1FE5                                         ;
seg000:1FE7                 cmp     al, 7Ah ; 'z'
seg000:1FE9                 ja      short loc_2009  ;
seg000:1FE9                                         ;
seg000:1FEB                 test    ah, 4
seg000:1FEE                 jz      short loc_1FF4  ;
seg000:1FEE                                         ;
seg000:1FF0                 and     al, 1Fh
seg000:1FF2                 jmp     short loc_2051
seg000:1FF4 ; ---------------------------------------------------------------------------
seg000:1FF4
seg000:1FF4 loc_1FF4:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+7Fj
seg000:1FF4                                         ; ConsoleLev1In__sub_1F6F+ACj
seg000:1FF4                 cmp     byte ptr ds:word_1EC8, 7
seg000:1FF9
seg000:1FF9 loc_1FF9:                               ; DATA XREF: KBD_ISR__sub_28EA:KBD_NO_SYN_NO_BRK__loc_2918w
seg000:1FF9                                         ; KBD_CHK_MORE__sub_299F:KBD_FAIL__loc_2A08w ...
seg000:1FF9                 jz      short loc_2002
seg000:1FFB
seg000:1FFB loc_1FFB:                               ; DATA XREF: KBD_CHK_MORE__sub_299F:loc_2A22w
seg000:1FFB                                         ; sub_2B47+24r ...
seg000:1FFB                 test    byte ptr ds:aVolBip+7, 4
seg000:2000                 jnz     short loc_2022
seg000:2002
seg000:2002 loc_2002:                               ; CODE XREF: ConsoleLev1In__sub_1F6F:loc_1FF9j
seg000:2002                 test    ah, 0Ah
seg000:2005                 jz      short loc_2039
seg000:2007                 jmp     short loc_2022
seg000:2009 ; ---------------------------------------------------------------------------
seg000:2009
seg000:2009 loc_2009:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+76j
seg000:2009                                         ; ConsoleLev1In__sub_1F6F+7Aj
seg000:2009                 test    ah, 4
seg000:200C                 jz      short loc_2015
seg000:200E                 call    sub_2062
seg000:2011                 jnz     short loc_2051
seg000:2013                 clc
seg000:2014                 retn
seg000:2015 ; ---------------------------------------------------------------------------
seg000:2015
seg000:2015 loc_2015:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+9Dj
seg000:2015                 test    byte ptr es:TXT_GRAFIX_8094+8, 1 ; 0x9C LOCK MODE (0= CAPS 1=SHIFT)
seg000:201B                 jnz     short loc_1FF4
seg000:201D                 test    ah, 2
seg000:2020                 jz      short loc_2026
seg000:2022
seg000:2022 loc_2022:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+91j
seg000:2022                                         ; ConsoleLev1In__sub_1F6F+98j
seg000:2022                 inc     si
seg000:2023                 mov     al, cs:[bx+si]
seg000:2026
seg000:2026 loc_2026:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+B1j
seg000:2026                 test    byte ptr es:TXT_GRAFIX_8094+8, 1 ; 0x9C LOCK MODE (0= CAPS 1=SHIFT)
seg000:202C                 jnz     short loc_2039
seg000:202E                 cmp     al, 0E0h ; 'Ó'
seg000:2030                 jb      short loc_2039
seg000:2032                 test    ah, 8
seg000:2035                 jz      short loc_2039
seg000:2037                 sub     al, 20h ; ' '
seg000:2039
seg000:2039 loc_2039:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+96j
seg000:2039                                         ; ConsoleLev1In__sub_1F6F+BDj ...
seg000:2039                 cmp     al, 5
seg000:203B                 jnb     short loc_2051  ;
seg000:203B                                         ;
seg000:203D                 mov     bx, 0A690h
seg000:2040                 xlat    byte ptr cs:[bx]
seg000:2042                 test    byte ptr ds:aVolBip+7, 8
seg000:2047                 jnz     short loc_2051
seg000:2049                 push    ax
seg000:204A                 mov     bp, sp
seg000:204C                 call    COMPOSE__sub_20B6
seg000:204F                 pop     bp
seg000:2050                 retn
seg000:2051 ; ---------------------------------------------------------------------------
seg000:2051
seg000:2051 loc_2051:                               ; CODE XREF: ConsoleLev1In__sub_1F6F+83j
seg000:2051                                         ; ConsoleLev1In__sub_1F6F+A2j ...
seg000:2051                 stc
seg000:2052                 retn
seg000:2052 ConsoleLev1In__sub_1F6F endp
seg000:2052
seg000:2053
seg000:2053 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2053
seg000:2053
seg000:2053 sub_2053        proc near               ; CODE XREF: ConsoleLev1In__sub_1F6F:loc_1F77p
seg000:2053                                         ; COMPOSE__sub_20B6+81p
seg000:2053                 mov     dx, word ptr es:TXT_GRAFIX_80a4+8 ; ED00:00ac = ED0AC
seg000:2058                 mov     cl, 4
seg000:205A                 shl     dh, cl
seg000:205C                 and     dl, 0Fh
seg000:205F                 or      dl, dh
seg000:2061                 retn
seg000:2061 sub_2053        endp
seg000:2061
seg000:2062
seg000:2062 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2062
seg000:2062
seg000:2062 sub_2062        proc near               ; CODE XREF: ConsoleLev1In__sub_1F6F+9Fp
seg000:2062                 mov     al, cl
seg000:2064                 mov     di, 0A097h
seg000:2067                 xor     ch, ch
seg000:2069                 mov     cl, cs:[di-2]
seg000:206D                 cmp     dl, 0
seg000:2070                 jnz     short loc_2076
seg000:2072                 mov     cl, cs:[di-1]
seg000:2076
seg000:2076 loc_2076:                               ; CODE XREF: sub_2062+Ej
seg000:2076                 push    es
seg000:2077                 push    cs
seg000:2078                 pop     es
seg000:2079                 cld
seg000:207A                 repne scasb
seg000:207C                 jnz     short loc_2088
seg000:207E                 dec     di
seg000:207F                 add     di, 0Dh
seg000:2083                 mov     al, es:[di]
seg000:2086                 pop     es
seg000:2087                 retn
seg000:2088 ; ---------------------------------------------------------------------------
seg000:2088
seg000:2088 loc_2088:                               ; CODE XREF: sub_2062+1Aj
seg000:2088                 pop     es
seg000:2089                 xor     ax, ax
seg000:208B                 test    byte ptr ds:aVolBip+7, 8
seg000:2090                 jz      short locret_2094
seg000:2092                 mov     al, 0FFh
seg000:2094
seg000:2094 locret_2094:                            ; CODE XREF: sub_2062+2Ej
seg000:2094                 retn
seg000:2094 sub_2062        endp
seg000:2094
seg000:2094 ; ---------------------------------------------------------------------------
seg000:2095                 db    7
seg000:2096                 db  0Dh
seg000:2097                 db 0C5h ; +
seg000:2098                 db 0CBh ; -
seg000:2099                 db 0D0h ; ð
seg000:209A                 db 0D6h ; Í
seg000:209B                 db 0DBh ; ¦
seg000:209C                 db 0E0h ; Ó
seg000:209D                 db 0E5h ; Õ
seg000:209E                 db 0BFh ; +
seg000:209F                 db 0FAh ; ·
seg000:20A0                 db 0F6h ; ÷
seg000:20A1                 db 0F7h ; ¸
seg000:20A2                 db 0F3h ; ¾
seg000:20A3                 db 0D4h ; È
seg000:20A4                 db    0
seg000:20A5                 db  1Bh
seg000:20A6                 db  1Ch
seg000:20A7                 db  1Dh
seg000:20A8                 db  1Eh
seg000:20A9                 db  1Fh
seg000:20AA                 db  7Fh ; 
seg000:20AB                 db  1Eh
seg000:20AC                 db  1Bh
seg000:20AD                 db  1Dh
seg000:20AE                 db  1Ch
seg000:20AF                 db  1Fh
seg000:20B0                 db    0
seg000:20B1
seg000:20B1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:20B1
seg000:20B1
seg000:20B1 COMPOSE_ON__sub_20B1 proc near          ; CODE XREF: ConsoleLev1In__sub_1F6F+19p
seg000:20B1                                         ; COMPOSE__sub_20B6+1Fj
seg000:20B1                 call    COMPOSE_LED_ON__sub_2178
seg000:20B4                 jmp     short loc_20BE
seg000:20B4 COMPOSE_ON__sub_20B1 endp
seg000:20B4
seg000:20B6
seg000:20B6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:20B6
seg000:20B6
seg000:20B6 COMPOSE__sub_20B6 proc near             ; CODE XREF: ConsoleLev1In__sub_1F6F+DDp
seg000:20B6                 call    COMPOSE_LED_ON__sub_2178
seg000:20B9                 mov     [bp+0], al
seg000:20BC                 dec     cl
seg000:20BE
seg000:20BE loc_20BE:                               ; CODE XREF: COMPOSE_ON__sub_20B1+3j
seg000:20BE                 push    cx
seg000:20BF                 push    bp
seg000:20C0
seg000:20C0 loc_20C0:                               ; CODE XREF: COMPOSE__sub_20B6+19j
seg000:20C0                                         ; COMPOSE__sub_20B6+3Ej
seg000:20C0                 call    ConsoleLev1In__sub_1F6F
seg000:20C3                 pushf
seg000:20C4                 cmp     al, 0FFh
seg000:20C6                 jnz     short loc_20CE  ;
seg000:20C6                                         ;
seg000:20C8                 popf
seg000:20C9                 pop     bp
seg000:20CA                 pop     cx
seg000:20CB                 jmp     BELL_n_COMPOSE_OFF__loc_2154
seg000:20CE ; ---------------------------------------------------------------------------
seg000:20CE
seg000:20CE loc_20CE:                               ; CODE XREF: COMPOSE__sub_20B6+10j
seg000:20CE                 popf
seg000:20CF                 jnb     short loc_20C0
seg000:20D1                 pop     bp
seg000:20D2                 pop     cx
seg000:20D3                 cmp     al, 84h ; 'ä'
seg000:20D5                 jz      short COMPOSE_ON__sub_20B1 ;
seg000:20D5                                         ;
seg000:20D7                 test    ah, 5
seg000:20DA                 jnz     short BELL__loc_2156
seg000:20DC                 cmp     al, 9
seg000:20DE                 jz      short BELL__loc_2156
seg000:20E0                 cmp     al, 0Dh
seg000:20E2                 jz      short BELL__loc_2156
seg000:20E4                 cmp     al, 7Fh ; ''
seg000:20E6                 jz      short loc_215F  ;
seg000:20E6                                         ;
seg000:20E8                 cmp     cl, 2
seg000:20EB                 jb      short loc_20F6  ;
seg000:20EB                                         ;
seg000:20ED                 mov     [bp+0], al
seg000:20F0                 dec     cl
seg000:20F2                 push    cx
seg000:20F3                 push    bp
seg000:20F4                 jnz     short loc_20C0
seg000:20F6
seg000:20F6 loc_20F6:                               ; CODE XREF: COMPOSE__sub_20B6+35j
seg000:20F6                 mov     [bp+1], al
seg000:20F9                 call    sub_218D
seg000:20FC                 or      bx, bx
seg000:20FE                 jnz     short loc_2118
seg000:2100
seg000:2100 LOOP__loc_2100:                         ; CODE XREF: COMPOSE__sub_20B6+70j
seg000:2100                 or      byte ptr ds:aVolBip+7, 10h ; DS:0F90
seg000:2105                 mov     dh, ah
seg000:2107                 mov     ax, [bp+0]
seg000:210A                 xchg    ah, al
seg000:210C                 mov     [bp+0], ax
seg000:210F                 mov     ah, dh
seg000:2111                 call    sub_218D
seg000:2114                 or      bx, bx
seg000:2116                 jz      short BELL_n_COMPOSE_OFF__loc_2154
seg000:2118
seg000:2118 loc_2118:                               ; CODE XREF: COMPOSE__sub_20B6+48j
seg000:2118                 call    sub_21B1
seg000:211B                 or      bx, bx
seg000:211D                 jnz     short loc_2128  ;
seg000:211D                                         ;
seg000:211F                 test    byte ptr ds:aVolBip+7, 10h ; DS:0F90
seg000:2124                 jnz     short BELL_n_COMPOSE_OFF__loc_2154
seg000:2126                 jmp     short LOOP__loc_2100
seg000:2128 ; ---------------------------------------------------------------------------
seg000:2128
seg000:2128 loc_2128:                               ; CODE XREF: COMPOSE__sub_20B6+67j
seg000:2128                 mov     al, cs:[bx]
seg000:212B                 cmp     al, 22h ; '"'
seg000:212D                 jnz     short loc_2150  ;
seg000:212D                                         ;
seg000:212F                 test    byte ptr es:TXT_GRAFIX_8094+0Ah, 1 ; ES:9E    CHAR CODES (0=DEC-8  1= 7-BIT)
seg000:2135                 jz      short loc_2150  ;
seg000:2135                                         ;
seg000:2137                 call    sub_2053
seg000:213A                 cmp     dl, 9
seg000:213D                 jz      short loc_214E
seg000:213F                 cmp     dl, 0Ch
seg000:2142                 jz      short loc_214E
seg000:2144                 cmp     dl, 0Bh
seg000:2147                 jz      short loc_214E
seg000:2149                 cmp     dl, 0Dh
seg000:214C                 jnz     short loc_2150
seg000:214E
seg000:214E loc_214E:                               ; CODE XREF: COMPOSE__sub_20B6+87j
seg000:214E                                         ; COMPOSE__sub_20B6+8Cj ...
seg000:214E                 mov     al, 0A0h ; 'á'
seg000:2150
seg000:2150 loc_2150:                               ; CODE XREF: COMPOSE__sub_20B6+77j
seg000:2150                                         ; COMPOSE__sub_20B6+7Fj ...
seg000:2150                 call    COMPOSE_LED_OFF__sub_2165
seg000:2153                 retn
seg000:2154 ; ---------------------------------------------------------------------------
seg000:2154
seg000:2154 BELL_n_COMPOSE_OFF__loc_2154:           ; CODE XREF: COMPOSE__sub_20B6+15j
seg000:2154                                         ; COMPOSE__sub_20B6+60j ...
seg000:2154                 xor     ax, ax
seg000:2156
seg000:2156 BELL__loc_2156:                         ; CODE XREF: COMPOSE__sub_20B6+24j
seg000:2156                                         ; COMPOSE__sub_20B6+28j ...
seg000:2156                 push    ax
seg000:2157                 mov     al, 0A7h ; 'º'  ; 0xa7    /* emit a bell */
seg000:2159                 call    KBD_CMD_AL__sub_2846
seg000:215C                 pop     ax
seg000:215D                 jmp     short loc_2161
seg000:215F ; ---------------------------------------------------------------------------
seg000:215F
seg000:215F loc_215F:                               ; CODE XREF: COMPOSE__sub_20B6+30j
seg000:215F                 xor     ax, ax
seg000:2161
seg000:2161 loc_2161:                               ; CODE XREF: COMPOSE__sub_20B6+A7j
seg000:2161                 call    COMPOSE_LED_OFF__sub_2165
seg000:2164                 retn
seg000:2164 COMPOSE__sub_20B6 endp
seg000:2164
seg000:2165
seg000:2165 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2165
seg000:2165
seg000:2165 COMPOSE_LED_OFF__sub_2165 proc near     ; CODE XREF: COMPOSE__sub_20B6:loc_2150p
seg000:2165                                         ; COMPOSE__sub_20B6:loc_2161p
seg000:2165                 push    ax
seg000:2166                 mov     ax, 8211h       ; 0x11    /* turn off LEDs */   ?
seg000:2169                 call    KBD_CMD_AL__sub_2846
seg000:216C                 and     byte ptr ds:aVolBip+7, 0E7h ; 11100111
seg000:2171                 pop     ax
seg000:2172                 or      ax, ax
seg000:2174                 jz      short locret_2177
seg000:2176                 stc
seg000:2177
seg000:2177 locret_2177:                            ; CODE XREF: COMPOSE_LED_OFF__sub_2165+Fj
seg000:2177                 retn
seg000:2177 COMPOSE_LED_OFF__sub_2165 endp
seg000:2177
seg000:2178
seg000:2178 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2178
seg000:2178
seg000:2178 COMPOSE_LED_ON__sub_2178 proc near      ; CODE XREF: COMPOSE_ON__sub_20B1p
seg000:2178                                         ; COMPOSE__sub_20B6p
seg000:2178                 push    ax
seg000:2179                 mov     ax, 8213h       ; 0x13    /* light COMPOSE LED */
seg000:217C                 call    KBD_CMD_AL__sub_2846
seg000:217F                 or      byte ptr ds:aVolBip+7, 8 ; DS:0F90 - set or enable BIT 3
seg000:2184                 and     byte ptr ds:aVolBip+7, 0EFh ; DS:0F90 : mask 11101111 (bit 4)
seg000:2189                 mov     cl, 2
seg000:218B                 pop     ax
seg000:218C                 retn
seg000:218C COMPOSE_LED_ON__sub_2178 endp
seg000:218C
seg000:218D
seg000:218D ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:218D
seg000:218D
seg000:218D sub_218D        proc near               ; CODE XREF: COMPOSE__sub_20B6+43p
seg000:218D                                         ; COMPOSE__sub_20B6+5Bp
seg000:218D                 push    es
seg000:218E                 push    cs
seg000:218F                 pop     es
seg000:2190                 mov     al, [bp+0]
seg000:2193                 mov     cx, 18h
seg000:2196                 mov     di, 0A1DEh
seg000:2199                 cld
seg000:219A                 repne scasb
seg000:219C                 jnz     short loc_21AD
seg000:219E                 dec     di
seg000:219F                 sub     di, 0A1DEh
seg000:21A3                 shl     di, 1
seg000:21A5                 mov     bx, 0A1F6h
seg000:21A8                 mov     bx, es:[bx+di]
seg000:21AB                 pop     es
seg000:21AC                 retn
seg000:21AD ; ---------------------------------------------------------------------------
seg000:21AD
seg000:21AD loc_21AD:                               ; CODE XREF: sub_218D+Fj
seg000:21AD                 xor     bx, bx
seg000:21AF                 pop     es
seg000:21B0                 retn
seg000:21B0 sub_218D        endp
seg000:21B0
seg000:21B1
seg000:21B1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:21B1
seg000:21B1
seg000:21B1 sub_21B1        proc near               ; CODE XREF: COMPOSE__sub_20B6:loc_2118p
seg000:21B1                 push    es
seg000:21B2                 push    cs
seg000:21B3                 pop     es
seg000:21B4                 mov     al, [bp+1]
seg000:21B7                 xor     ch, ch
seg000:21B9                 mov     cl, cs:[bx-2]
seg000:21BD                 test    byte ptr ds:aVolBip+7, 10h ; DS:0F90
seg000:21C2                 jz      short loc_21C8  ;
seg000:21C2                                         ;
seg000:21C4                 mov     cl, cs:[bx-1]
seg000:21C8
seg000:21C8 loc_21C8:                               ; CODE XREF: sub_21B1+11j
seg000:21C8                 mov     di, bx
seg000:21CA                 cld
seg000:21CB                 repne scasb
seg000:21CD                 jnz     short loc_21DA
seg000:21CF                 mov     cl, cs:[bx-2]
seg000:21D3                 dec     di
seg000:21D4                 add     di, cx
seg000:21D6                 mov     bx, di
seg000:21D8                 pop     es
seg000:21D9                 retn
seg000:21DA ; ---------------------------------------------------------------------------
seg000:21DA
seg000:21DA loc_21DA:                               ; CODE XREF: sub_21B1+1Cj
seg000:21DA                 xor     bx, bx
seg000:21DC                 pop     es
seg000:21DD                 retn
seg000:21DD sub_21B1        endp
seg000:21DD
seg000:21DD ; ---------------------------------------------------------------------------
seg000:21DE                 db  21h ; !             ; NOT CODE.
seg000:21DF                 db  22h ; "
seg000:21E0                 db  27h ; '
seg000:21E1                 db  28h ; (
seg000:21E2                 db  29h ; )
seg000:21E3                 db  2Bh ; +
seg000:21E4                 db  2Dh ; -
seg000:21E5                 db  2Fh ; /
seg000:21E6                 db  30h ; 0
seg000:21E7                 db  31h ; 1
seg000:21E8                 db  3Ch ; <
seg000:21E9                 db  3Dh ; =
seg000:21EA                 db  3Eh ; >
seg000:21EB                 db  3Fh ; ?
seg000:21EC                 db  41h ; A
seg000:21ED                 db  43h ; C
seg000:21EE                 db  4Fh ; O
seg000:21EF                 db  5Eh ; ^
seg000:21F0                 db  60h ; `
seg000:21F1                 db  61h ; a
seg000:21F2                 db  63h ; c
seg000:21F3                 db  6Fh ; o
seg000:21F4                 db  73h ; s
seg000:21F5                 db  7Eh ; ~
seg000:21F6                 db  28h ; (
seg000:21F7                 db 0A2h ; ó
seg000:21F8                 db  30h ; 0
seg000:21F9                 db 0A2h ; ó
seg000:21FA                 db  4Ch ; L
seg000:21FB                 db 0A2h ; ó
seg000:21FC                 db  64h ; d
seg000:21FD                 db 0A2h ; ó
seg000:21FE                 db  6Ah ; j
seg000:21FF                 db 0A2h ; ó
seg000:2200                 db  70h ; p
seg000:2201                 db 0A2h ; ó
seg000:2202                 db  76h ; v
seg000:2203                 db 0A2h ; ó
seg000:2204                 db  80h ; Ç
seg000:2205                 db 0A2h ; ó
seg000:2206                 db  90h ; É
seg000:2207                 db 0A2h ; ó
seg000:2208                 db  9Eh ; ×
seg000:2209                 db 0A2h ; ó
seg000:220A                 db 0A6h ; ª
seg000:220B                 db 0A2h ; ó
seg000:220C                 db 0AAh ; ¬
seg000:220D                 db 0A2h ; ó
seg000:220E                 db 0B4h ; ¦
seg000:220F                 db 0A2h ; ó
seg000:2210                 db 0B8h ; ©
seg000:2211                 db 0A2h ; ó
seg000:2212                 db 0BCh ; +
seg000:2213                 db 0A2h ; ó
seg000:2214                 db 0C8h ; +
seg000:2215                 db 0A2h ; ó
seg000:2216                 db 0D0h ; ð
seg000:2217                 db 0A2h ; ó
seg000:2218                 db 0DAh ; +
seg000:2219                 db 0A2h ; ó
seg000:221A                 db 0FEh ; ¦
seg000:221B                 db 0A2h ; ó
seg000:221C                 db  16h
seg000:221D                 db 0A3h ; ú
seg000:221E                 db  22h ; "
seg000:221F                 db 0A3h ; ú
seg000:2220                 db  2Ah ; *
seg000:2221                 db 0A3h ; ú
seg000:2222                 db  34h ; 4
seg000:2223                 db 0A3h ; ú
seg000:2224                 db  38h ; 8
seg000:2225                 db 0A3h ; ú
seg000:2226                 db    3
seg000:2227                 db    3
seg000:2228                 db  21h ; !
seg000:2229                 db  50h ; P
seg000:222A                 db  70h ; p
seg000:222B                 db 0A1h ; í
seg000:222C                 db 0B6h ; Â
seg000:222D                 db 0B6h ; Â
seg000:222E                 db  0Dh
seg000:222F                 db  0Dh
seg000:2230                 db  20h
seg000:2231                 db  41h ; A             ; Umlaute or foreign language characters?
seg000:2232                 db  45h ; E
seg000:2233                 db  49h ; I
seg000:2234                 db  4Fh ; O
seg000:2235                 db  55h ; U
seg000:2236                 db  59h ; Y
seg000:2237                 db  61h ; a
seg000:2238                 db  65h ; e
seg000:2239                 db  69h ; i
seg000:223A                 db  6Fh ; o
seg000:223B                 db  75h ; u
seg000:223C                 db  79h ; y
seg000:223D                 db  22h ; "
seg000:223E                 db 0C4h ; -
seg000:223F                 db 0CBh ; -
seg000:2240                 db 0CFh ; ¤
seg000:2241                 db 0D6h ; Í
seg000:2242                 db 0DCh ; _
seg000:2243                 db 0DDh ; ¦
seg000:2244                 db 0E4h ; õ
seg000:2245                 db 0EBh ; Ù
seg000:2246                 db 0EFh ; ´
seg000:2247                 db 0F6h ; ÷
seg000:2248                 db 0FCh ; ³
seg000:2249                 db 0FDh ; ²
seg000:224A                 db  0Bh
seg000:224B                 db  0Bh
seg000:224C                 db  20h                 ; Umlaute or foreign language characters?
seg000:224C                                         ; PART 2
seg000:224D                 db  41h ; A
seg000:224E                 db  45h ; E
seg000:224F                 db  49h ; I
seg000:2250                 db  4Fh ; O
seg000:2251                 db  55h ; U
seg000:2252                 db  61h ; a
seg000:2253                 db  65h ; e
seg000:2254                 db  69h ; i
seg000:2255                 db  6Fh ; o
seg000:2256                 db  75h ; u
seg000:2257                 db  27h ; '
seg000:2258                 db 0C1h ; -
seg000:2259                 db 0C9h ; +
seg000:225A                 db 0CDh ; -
seg000:225B                 db 0D3h ; Ë
seg000:225C                 db 0DAh ; +
seg000:225D                 db 0E1h ; ß
seg000:225E                 db 0E9h ; Ú
seg000:225F                 db 0EDh ; Ý
seg000:2260                 db 0F3h ; ¾
seg000:2261                 db 0FAh ; ·
seg000:2262                 db    2
seg000:2263                 db    2
seg000:2264                 db  28h ; (
seg000:2265                 db  2Dh ; -
seg000:2266                 db  5Bh ; [
seg000:2267                 db  7Bh ; {
seg000:2268                 db    2
seg000:2269                 db    2
seg000:226A                 db  29h ; )
seg000:226B                 db  2Dh ; -
seg000:226C                 db  5Dh ; ]
seg000:226D                 db  7Dh ; }
seg000:226E                 db    2
seg000:226F                 db    2
seg000:2270                 db  2Bh ; +
seg000:2271                 db  2Dh ; -
seg000:2272                 db  23h ; #
seg000:2273                 db 0B1h ; ¦
seg000:2274                 db    4
seg000:2275                 db    4
seg000:2276                 db  4Ch ; L
seg000:2277                 db  59h ; Y
seg000:2278                 db  6Ch ; l
seg000:2279                 db  79h ; y
seg000:227A                 db 0A3h ; ú
seg000:227B                 db 0A5h ; Ñ
seg000:227C                 db 0A3h ; ú
seg000:227D                 db 0A5h ; Ñ
seg000:227E                 db    7
seg000:227F                 db    5
seg000:2280                 db  2Fh ; /
seg000:2281                 db  43h ; C
seg000:2282                 db  4Fh ; O
seg000:2283                 db  63h ; c
seg000:2284                 db  6Fh ; o
seg000:2285                 db  55h ; U
seg000:2286                 db  75h ; u
seg000:2287                 db  5Ch ; \
seg000:2288                 db 0A2h ; ó
seg000:2289                 db 0D8h ; Ï
seg000:228A                 db 0A2h ; ó
seg000:228B                 db 0F8h ; °
seg000:228C                 db 0B5h ; Á
seg000:228D                 db 0B5h ; Á
seg000:228E                 db    6
seg000:228F                 db    6
seg000:2290                 db  43h ; C
seg000:2291                 db  53h ; S
seg000:2292                 db  58h ; X
seg000:2293                 db  63h ; c
seg000:2294                 db  73h ; s
seg000:2295                 db  78h ; x
seg000:2296                 db 0A9h ; ®
seg000:2297                 db 0A7h ; º
seg000:2298                 db 0A8h ; ¿
seg000:2299                 db 0A9h ; ®
seg000:229A                 db 0A7h ; º
seg000:229B                 db 0A8h ; ¿
seg000:229C                 db    3
seg000:229D                 db    1
seg000:229E                 db  5Eh ; ^
seg000:229F                 db  32h ; 2
seg000:22A0                 db  34h ; 4
seg000:22A1                 db 0B9h ; ¦
seg000:22A2                 db 0BDh ; ¢
seg000:22A3                 db 0BCh ; +
seg000:22A4                 db    1
seg000:22A5                 db    1
seg000:22A6                 db  3Ch ; <
seg000:22A7                 db 0ABh ; ½
seg000:22A8                 db    4
seg000:22A9                 db    4
seg000:22AA                 db  4Ch ; L
seg000:22AB                 db  59h ; Y
seg000:22AC                 db  6Ch ; l
seg000:22AD                 db  79h ; y
seg000:22AE                 db 0A3h ; ú
seg000:22AF                 db 0A5h ; Ñ
seg000:22B0                 db 0A3h ; ú
seg000:22B1                 db 0A5h ; Ñ
seg000:22B2                 db    1
seg000:22B3                 db    1
seg000:22B4                 db  3Eh ; >
seg000:22B5                 db 0BBh ; +
seg000:22B6                 db    1
seg000:22B7                 db    1
seg000:22B8                 db  3Fh ; ?
seg000:22B9                 db 0BFh ; +
seg000:22BA                 db    5
seg000:22BB                 db    4
seg000:22BC                 db  41h ; A
seg000:22BD                 db  2Ah ; *
seg000:22BE                 db 0B0h ; ¦
seg000:22BF                 db  5Fh ; _
seg000:22C0                 db  45h ; E
seg000:22C1                 db  40h ; @
seg000:22C2                 db 0C5h ; +
seg000:22C3                 db 0C5h ; +
seg000:22C4                 db 0AAh ; ¬
seg000:22C5                 db 0C6h ; ã
seg000:22C6                 db    3
seg000:22C7                 db    3
seg000:22C8                 db  2Ch ; ,
seg000:22C9                 db  4Fh ; O
seg000:22CA                 db  7Ch ; |
seg000:22CB                 db 0C7h ; Ã
seg000:22CC                 db 0A9h ; ®
seg000:22CD                 db 0A2h ; ó
seg000:22CE                 db    4
seg000:22CF                 db    3
seg000:22D0                 db  53h ; S
seg000:22D1                 db  58h ; X
seg000:22D2                 db  5Fh ; _
seg000:22D3                 db  45h ; E
seg000:22D4                 db 0A7h ; º
seg000:22D5                 db 0A8h ; ¿
seg000:22D6                 db 0BAh ; ¦
seg000:22D7                 db 0D7h ; Î
seg000:22D8                 db  11h
seg000:22D9                 db  11h
seg000:22DA                 db  20h
seg000:22DB                 db  2Eh ; .
seg000:22DC                 db  2Fh ; /
seg000:22DD                 db  30h ; 0
seg000:22DE                 db  31h ; 1
seg000:22DF                 db  32h ; 2
seg000:22E0                 db  33h ; 3
seg000:22E1                 db  41h ; A
seg000:22E2                 db  45h ; E
seg000:22E3                 db  49h ; I
seg000:22E4                 db  4Fh ; O
seg000:22E5                 db  55h ; U
seg000:22E6                 db  61h ; a
seg000:22E7                 db  65h ; e
seg000:22E8                 db  69h ; i
seg000:22E9                 db  6Fh ; o
seg000:22EA                 db  75h ; u
seg000:22EB                 db  5Eh ; ^
seg000:22EC                 db 0B7h ; À
seg000:22ED                 db  7Ch ; |
seg000:22EE                 db 0B0h ; ¦
seg000:22EF                 db 0B9h ; ¦
seg000:22F0                 db 0B2h ; ¦
seg000:22F1                 db 0B3h ; ¦
seg000:22F2                 db 0C2h ; -
seg000:22F3                 db 0CAh ; -
seg000:22F4                 db 0CEh ; +
seg000:22F5                 db 0D4h ; È
seg000:22F6                 db 0DBh ; ¦
seg000:22F7                 db 0E2h ; Ô
seg000:22F8                 db 0EAh ; Û
seg000:22F9                 db 0EEh ; ¯
seg000:22FA                 db 0F4h ; ¶
seg000:22FB                 db 0FBh ; ¹
seg000:22FC                 db  0Bh
seg000:22FD                 db  0Bh
seg000:22FE                 db  20h
seg000:22FF                 db  41h ; A
seg000:2300                 db  45h ; E
seg000:2301                 db  49h ; I
seg000:2302                 db  4Fh ; O
seg000:2303                 db  55h ; U
seg000:2304                 db  61h ; a
seg000:2305                 db  65h ; e
seg000:2306                 db  69h ; i
seg000:2307                 db  6Fh ; o
seg000:2308                 db  75h ; u
seg000:2309                 db  60h ; `
seg000:230A                 db 0C0h ; +
seg000:230B                 db 0C8h ; +
seg000:230C                 db 0CCh ; ¦
seg000:230D                 db 0D2h ; Ê
seg000:230E                 db 0D9h ; +
seg000:230F                 db 0E0h ; Ó
seg000:2310                 db 0E8h ; Þ
seg000:2311                 db 0ECh ; ý
seg000:2312                 db 0F2h ; =
seg000:2313                 db 0F9h ; ¨
seg000:2314                 db    5
seg000:2315                 db    4
seg000:2316                 db  2Ah ; *
seg000:2317                 db  5Fh ; _
seg000:2318                 db  61h ; a
seg000:2319                 db 0B0h ; ¦
seg000:231A                 db  65h ; e
seg000:231B                 db 0E5h ; Õ
seg000:231C                 db 0AAh ; ¬
seg000:231D                 db  40h ; @
seg000:231E                 db 0E5h ; Õ
seg000:231F                 db 0E6h ; µ
seg000:2320                 db    3
seg000:2321                 db    3
seg000:2322                 db  2Ch ; ,
seg000:2323                 db  6Fh ; o
seg000:2324                 db  7Ch ; |
seg000:2325                 db 0E7h ; þ
seg000:2326                 db 0A9h ; ®
seg000:2327                 db 0A2h ; ó
seg000:2328                 db    4
seg000:2329                 db    3
seg000:232A                 db  5Fh ; _
seg000:232B                 db  73h ; s
seg000:232C                 db  78h ; x
seg000:232D                 db  65h ; e
seg000:232E                 db 0BAh ; ¦
seg000:232F                 db 0A7h ; º
seg000:2330                 db 0A8h ; ¿
seg000:2331                 db 0F7h ; ¸
seg000:2332                 db    1
seg000:2333                 db    1
seg000:2334                 db  73h ; s
seg000:2335                 db 0DFh ; ¯
seg000:2336                 db    7
seg000:2337                 db    7
seg000:2338                 db  20h
seg000:2339                 db  41h ; A
seg000:233A                 db  4Eh ; N
seg000:233B                 db  4Fh ; O
seg000:233C                 db  61h ; a
seg000:233D                 db  6Eh ; n
seg000:233E                 db  6Fh ; o
seg000:233F                 db  7Eh ; ~
seg000:2340                 db 0C3h ; +
seg000:2341                 db 0D1h ; Ð
seg000:2342                 db 0D5h ; i
seg000:2343                 db 0E3h ; Ò
seg000:2344                 db 0F1h ; ±
seg000:2345                 db 0F5h ; §
seg000:2346                 db  80h ; Ç
seg000:2347                 db  85h ; à
seg000:2348                 db  81h ; ü
seg000:2349                 db  87h ; ç
seg000:234A                 db 0E7h ; þ
seg000:234B                 db 0FFh
seg000:234C                 db 0FFh
seg000:234D                 db 0FFh
seg000:234E                 db 0FFh
seg000:234F                 db 0FFh
seg000:2350                 db 0FFh
seg000:2351                 db 0FFh
seg000:2352                 db 0FFh
seg000:2353                 db 0FFh
seg000:2354                 db  89h ; ë
seg000:2355                 db  8Bh ; ï
seg000:2356                 db  8Dh ; ì
seg000:2357                 db  8Fh ; Å
seg000:2358                 db  91h ; æ
seg000:2359                 db 0FFh
seg000:235A                 db 0FFh
seg000:235B                 db 0FFh
seg000:235C                 db 0FFh
seg000:235D                 db 0FFh
seg000:235E                 db 0FFh
seg000:235F                 db 0FFh
seg000:2360                 db 0FFh
seg000:2361                 db  1Bh
seg000:2362                 db    8
seg000:2363                 db  0Ah
seg000:2364                 db  93h ; ô
seg000:2365                 db 0FFh
seg000:2366                 db 0FFh
seg000:2367                 db 0FFh
seg000:2368                 db 0FFh
seg000:2369                 db 0FFh
seg000:236A                 db 0FFh
seg000:236B                 db 0FFh
seg000:236C                 db  82h ; é
seg000:236D                 db  83h ; â
seg000:236E                 db 0FFh
seg000:236F                 db 0FFh
seg000:2370                 db  95h ; ò
seg000:2371                 db  97h ; ù
seg000:2372                 db  99h ; Ö
seg000:2373                 db  9Bh ; ø
seg000:2374                 db 0FFh
seg000:2375                 db 0FFh
seg000:2376                 db 0FFh
seg000:2377                 db 0FFh
seg000:2378                 db 0FFh
seg000:2379                 db 0FFh
seg000:237A                 db  9Dh ; Ø
seg000:237B                 db  9Fh ; ƒ
seg000:237C                 db 0A1h ; í
seg000:237D                 db 0A3h ; ú
seg000:237E                 db 0A5h ; Ñ
seg000:237F                 db 0A7h ; º
seg000:2380                 db 0FFh
seg000:2381                 db 0FFh
seg000:2382                 db 0B1h ; ¦
seg000:2383                 db 0FFh
seg000:2384                 db 0D5h ; i
seg000:2385                 db 0D8h ; Ï
seg000:2386                 db 0B4h ; ¦
seg000:2387                 db 0B7h ; À
seg000:2388                 db 0BAh ; ¦
seg000:2389                 db 0BDh ; ¢
seg000:238A                 db 0C0h ; +
seg000:238B                 db 0C3h ; +
seg000:238C                 db 0D2h ; Ê
seg000:238D                 db 0C6h ; ã
seg000:238E                 db 0C9h ; +
seg000:238F                 db 0CCh ; ¦
seg000:2390                 db 0CFh ; ¤
seg000:2391                 db 0DBh ; ¦
seg000:2392                 db 0DEh ; Ì
seg000:2393                 db 0E1h ; ß
seg000:2394                 db 0E4h ; õ
seg000:2395                 db 0FFh
seg000:2396                 db 0FFh
seg000:2397                 db 0AFh ; »
seg000:2398                 db 0ADh ; ¡
seg000:2399                 db 0ABh ; ½
seg000:239A                 db 0A9h ; ®
seg000:239B                 db 0FFh
seg000:239C                 db 0FFh
seg000:239D                 db 0FFh
seg000:239E                 db    2
seg000:239F                 db    4
seg000:23A0                 db    8
seg000:23A1                 db  84h ; ä
seg000:23A2                 db 0FFh
seg000:23A3                 db 0B3h ; ¦
seg000:23A4                 db 0ADh ; ¡
seg000:23A5                 db 0B5h ; Á
seg000:23A6                 db 0B6h ; Â
seg000:23A7                 db 0B7h ; À
seg000:23A8                 db 0B8h ; ©
seg000:23A9                 db 0B9h ; ¦
seg000:23AA                 db 0BAh ; ¦
seg000:23AB                 db 0FFh
seg000:23AC                 db  7Fh ; 
seg000:23AD                 db  0Dh
seg000:23AE                 db    9
seg000:23AF                 db 0F0h ; ­             ; See ConsoleLev1In__sub_1F6F  or   loc_1F96
seg000:23B0                 db 0A2h ; ó
seg000:23B1                 db  30h ; 0             ; loc_1FA3
seg000:23B2                 db 0A4h ; ñ
seg000:23B3                 db  47h ; G
seg000:23B4                 db 0A4h ; ñ
seg000:23B5                 db  2Ah ; *
seg000:23B6                 db 0A5h ; Ñ
seg000:23B7                 db 0A1h ; í
seg000:23B8                 db 0A5h ; Ñ
seg000:23B9                 db  3Ch ; <
seg000:23BA                 db 0A6h ; ª
seg000:23BB                 db  2Dh ; -
seg000:23BC                 db 0A4h ; ñ
seg000:23BD                 db  58h ; X
seg000:23BE                 db 0A4h ; ñ
seg000:23BF                 db  33h ; 3
seg000:23C0                 db 0A5h ; Ñ
seg000:23C1                 db 0AAh ; ¬
seg000:23C2                 db 0A5h ; Ñ
seg000:23C3                 db  48h ; H
seg000:23C4                 db 0A6h ; ª
seg000:23C5                 db  39h ; 9
seg000:23C6                 db 0A6h ; ª
seg000:23C7                 db  2Dh ; -
seg000:23C8                 db 0A4h ; ñ
seg000:23C9                 db  6Bh ; k
seg000:23CA                 db 0A4h ; ñ
seg000:23CB                 db  39h ; 9
seg000:23CC                 db 0A5h ; Ñ
seg000:23CD                 db 0ADh ; ¡
seg000:23CE                 db 0A5h ; Ñ
seg000:23CF                 db  4Bh ; K
seg000:23D0                 db 0A6h ; ª
seg000:23D1                 db  2Dh ; -
seg000:23D2                 db 0A4h ; ñ
seg000:23D3                 db  8Ch ; î
seg000:23D4                 db 0A4h ; ñ
seg000:23D5                 db  3Ch ; <
seg000:23D6                 db 0A5h ; Ñ
seg000:23D7                 db 0B0h ; ¦
seg000:23D8                 db 0A5h ; Ñ
seg000:23D9                 db  4Eh ; N
seg000:23DA                 db 0A6h ; ª
seg000:23DB                 db  2Dh ; -
seg000:23DC                 db 0A4h ; ñ
seg000:23DD                 db  2Dh ; -
seg000:23DE                 db 0A4h ; ñ
seg000:23DF                 db  9Ah ; Ü
seg000:23E0                 db 0A4h ; ñ
seg000:23E1                 db  3Fh ; ?
seg000:23E2                 db 0A5h ; Ñ
seg000:23E3                 db 0B3h ; ¦
seg000:23E4                 db 0A5h ; Ñ
seg000:23E5                 db  51h ; Q
seg000:23E6                 db 0A6h ; ª
seg000:23E7                 db  2Dh ; -
seg000:23E8                 db 0A4h ; ñ
seg000:23E9                 db 0A0h ; á
seg000:23EA                 db 0A4h ; ñ
seg000:23EB                 db  42h ; B
seg000:23EC                 db 0A5h ; Ñ
seg000:23ED                 db 0B6h ; Â
seg000:23EE                 db 0A5h ; Ñ
seg000:23EF                 db  54h ; T
seg000:23F0                 db 0A6h ; ª
seg000:23F1                 db  2Dh ; -
seg000:23F2                 db 0A4h ; ñ
seg000:23F3                 db 0B4h ; ¦
seg000:23F4                 db 0A4h ; ñ
seg000:23F5                 db  4Bh ; K
seg000:23F6                 db 0A5h ; Ñ
seg000:23F7                 db 0B9h ; ¦
seg000:23F8                 db 0A5h ; Ñ
seg000:23F9                 db  57h ; W
seg000:23FA                 db 0A6h ; ª
seg000:23FB                 db  2Dh ; -
seg000:23FC                 db 0A4h ; ñ
seg000:23FD                 db 0C8h ; +
seg000:23FE                 db 0A4h ; ñ
seg000:23FF                 db  4Eh ; N
seg000:2400                 db 0A5h ; Ñ
seg000:2401                 db 0BCh ; +
seg000:2402                 db 0A5h ; Ñ
seg000:2403                 db  5Dh ; ]
seg000:2404                 db 0A6h ; ª
seg000:2405                 db  2Dh ; -
seg000:2406                 db 0A4h ; ñ
seg000:2407                 db 0D4h ; È
seg000:2408                 db 0A4h ; ñ
seg000:2409                 db  51h ; Q
seg000:240A                 db 0A5h ; Ñ
seg000:240B                 db 0BFh ; +
seg000:240C                 db 0A5h ; Ñ
seg000:240D                 db  6Fh ; o
seg000:240E                 db 0A6h ; ª
seg000:240F                 db  2Dh ; -
seg000:2410                 db 0A4h ; ñ
seg000:2411                 db 0E2h ; Ô
seg000:2412                 db 0A4h ; ñ
seg000:2413                 db  54h ; T
seg000:2414                 db 0A5h ; Ñ
seg000:2415                 db  2Dh ; -
seg000:2416                 db 0A4h ; ñ
seg000:2417                 db 0C2h ; -
seg000:2418                 db 0A5h ; Ñ
seg000:2419                 db  7Bh ; {
seg000:241A                 db 0A6h ; ª
seg000:241B                 db  2Dh ; -
seg000:241C                 db 0A4h ; ñ
seg000:241D                 db  0Ah
seg000:241E                 db 0A5h ; Ñ
seg000:241F                 db  81h ; ü
seg000:2420                 db 0A5h ; Ñ
seg000:2421                 db  1Ah
seg000:2422                 db 0A6h ; ª
seg000:2423                 db  2Dh ; -
seg000:2424                 db 0A4h ; ñ
seg000:2425                 db 0F5h ; §
seg000:2426                 db 0A4h ; ñ
seg000:2427                 db  57h ; W
seg000:2428                 db 0A5h ; Ñ
seg000:2429                 db 0E7h ; þ
seg000:242A                 db 0A5h ; Ñ
seg000:242B                 db  2Dh ; -
seg000:242C                 db 0A4h ; ñ
seg000:242D                 db  0Fh
seg000:242E                 db  20h
seg000:242F                 db  20h
seg000:2430                 db    1
seg000:2431                 db  60h ; `
seg000:2432                 db  7Eh ; ~
seg000:2433                 db    7
seg000:2434                 db    0
seg000:2435                 db 0B0h ; ¦
seg000:2436                 db  48h ; H
seg000:2437                 db 0BFh ; +
seg000:2438                 db 0A1h ; í
seg000:2439                 db  40h ; @
seg000:243A                 db  5Ch ; \
seg000:243B                 db    9
seg000:243C                 db    0
seg000:243D                 db    1
seg000:243E                 db  0Bh
seg000:243F                 db  21h ; !
seg000:2440                 db 0B0h ; ¦
seg000:2441                 db  0Ch
seg000:2442                 db    0
seg000:2443                 db 0B0h ; ¦
seg000:2444                 db  0Fh
seg000:2445                 db    2
seg000:2446                 db    0
seg000:2447                 db    9
seg000:2448                 db  31h ; 1
seg000:2449                 db  21h ; !
seg000:244A                 db  0Bh
seg000:244B                 db  31h ; 1
seg000:244C                 db  2Bh ; +
seg000:244D                 db  0Ch
seg000:244E                 db  31h ; 1
seg000:244F                 db 0BCh ; +
seg000:2450                 db  0Eh
seg000:2451                 db  26h ; &
seg000:2452                 db  31h ; 1
seg000:2453                 db  4Fh ; O
seg000:2454                 db 0A3h ; ú
seg000:2455                 db  31h ; 1
seg000:2456                 db  40h ; @
seg000:2457                 db  31h ; 1
seg000:2458                 db    1
seg000:2459                 db  32h ; 2
seg000:245A                 db  40h ; @
seg000:245B                 db  0Bh
seg000:245C                 db  32h ; 2
seg000:245D                 db  22h ; "
seg000:245E                 db  4Ch ; L
seg000:245F                 db  32h ; 2
seg000:2460                 db 0BDh ; ¢
seg000:2461                 db  32h ; 2
seg000:2462                 db  5Bh ; [
seg000:2463                 db  0Eh
seg000:2464                 db 0E9h ; Ú
seg000:2465                 db  32h ; 2
seg000:2466                 db  4Fh ; O
seg000:2467                 db 0E9h ; Ú
seg000:2468                 db  32h ; 2
seg000:2469                 db  23h ; #
seg000:246A                 db  32h ; 2             ; NO CODE.
seg000:246B                 db    1
seg000:246C                 db  33h ; 3
seg000:246D                 db  23h ; #
seg000:246E                 db    2
seg000:246F                 db  33h ; 3
seg000:2470                 db  2Fh ; /
seg000:2471                 db  43h ; C
seg000:2472                 db  33h ; 3
seg000:2473                 db 0A3h ; ú
seg000:2474                 db  33h ; 3
seg000:2475                 db  23h ; #
seg000:2476                 db  47h ; G
seg000:2477                 db  33h ; 3
seg000:2478                 db 0A7h ; º
seg000:2479                 db  33h ; 3
seg000:247A                 db  40h ; @
seg000:247B                 db    8
seg000:247C                 db  33h ; 3
seg000:247D                 db  23h ; #
seg000:247E                 db    9
seg000:247F                 db  33h ; 3
seg000:2480                 db 0A7h ; º
seg000:2481                 db  0Bh
seg000:2482                 db  33h ; 3
seg000:2483                 db  2Ah ; *
seg000:2484                 db  4Ch ; L
seg000:2485                 db  33h ; 3
seg000:2486                 db 0A3h ; ú
seg000:2487                 db  33h ; 3
seg000:2488                 db  5Dh ; ]
seg000:2489                 db  0Fh
seg000:248A                 db  22h ; "
seg000:248B                 db  33h ; 3
seg000:248C                 db    9
seg000:248D                 db  34h ; 4
seg000:248E                 db  24h ; $
seg000:248F                 db  4Bh ; K
seg000:2490                 db  34h ; 4
seg000:2491                 db 0E7h ; þ
seg000:2492                 db  34h ; 4
seg000:2493                 db  40h ; @
seg000:2494                 db  0Ch
seg000:2495                 db  34h ; 4
seg000:2496                 db  24h ; $
seg000:2497                 db  0Fh
seg000:2498                 db  27h ; '
seg000:2499                 db  34h ; 4
seg000:249A                 db  0Ch
seg000:249B                 db  35h ; 5
seg000:249C                 db  25h ; %
seg000:249D                 db  0Fh
seg000:249E                 db  28h ; (
seg000:249F                 db  35h ; 5
seg000:24A0                 db    1
seg000:24A1                 db  36h ; 6
seg000:24A2                 db  5Eh ; ^
seg000:24A3                 db    2
seg000:24A4                 db  36h ; 6
seg000:24A5                 db  3Fh ; ?
seg000:24A6                 db  0Bh
seg000:24A7                 db  36h ; 6
seg000:24A8                 db  26h ; &
seg000:24A9                 db  0Ch
seg000:24AA                 db  36h ; 6
seg000:24AB                 db  23h ; #
seg000:24AC                 db  4Eh ; N
seg000:24AD                 db 0A7h ; º
seg000:24AE                 db  36h ; 6
seg000:24AF                 db  5Bh ; [
seg000:24B0                 db  36h ; 6
seg000:24B1                 db  0Fh
seg000:24B2                 db  5Fh ; _
seg000:24B3                 db  36h ; 6
seg000:24B4                 db    2
seg000:24B5                 db  37h ; 7
seg000:24B6                 db  26h ; &
seg000:24B7                 db    3
seg000:24B8                 db  37h ; 7
seg000:24B9                 db  27h ; '
seg000:24BA                 db  0Bh
seg000:24BB                 db  37h ; 7
seg000:24BC                 db  2Fh ; /
seg000:24BD                 db  0Ch
seg000:24BE                 db  37h ; 7
seg000:24BF                 db  26h ; &
seg000:24C0                 db  4Eh ; N
seg000:24C1                 db 0E8h ; Þ
seg000:24C2                 db  37h ; 7
seg000:24C3                 db  5Dh ; ]
seg000:24C4                 db  37h ; 7
seg000:24C5                 db  0Fh
seg000:24C6                 db 0E8h ; Þ
seg000:24C7                 db  37h ; 7
seg000:24C8                 db    2
seg000:24C9                 db  38h ; 8
seg000:24CA                 db  2Ah ; *
seg000:24CB                 db  0Ch
seg000:24CC                 db  38h ; 8
seg000:24CD                 db  28h ; (
seg000:24CE                 db  0Eh
seg000:24CF                 db  21h ; !
seg000:24D0                 db  38h ; 8
seg000:24D1                 db  0Fh
seg000:24D2                 db    1
seg000:24D3                 db  38h ; 8
seg000:24D4                 db    2
seg000:24D5                 db  39h ; 9
seg000:24D6                 db  28h ; (
seg000:24D7                 db  0Ch
seg000:24D8                 db  39h ; 9
seg000:24D9                 db  29h ; )
seg000:24DA                 db  0Eh
seg000:24DB                 db 0E7h ; þ
seg000:24DC                 db  39h ; 9
seg000:24DD                 db  4Fh ; O
seg000:24DE                 db 0E7h ; þ
seg000:24DF                 db  39h ; 9
seg000:24E0                 db  5Bh ; [
seg000:24E1                 db  39h ; 9
seg000:24E2                 db    2
seg000:24E3                 db  30h ; 0
seg000:24E4                 db  29h ; )
seg000:24E5                 db  0Bh
seg000:24E6                 db  30h ; 0
seg000:24E7                 db  3Dh ; =
seg000:24E8                 db  4Ch ; L
seg000:24E9                 db  30h ; 0
seg000:24EA                 db 0A7h ; º
seg000:24EB                 db  30h ; 0
seg000:24EC                 db  5Ch ; \
seg000:24ED                 db  0Eh
seg000:24EE                 db 0E0h ; Ó
seg000:24EF                 db  30h ; 0
seg000:24F0                 db  4Fh ; O
seg000:24F1                 db 0E0h ; Ó
seg000:24F2                 db  30h ; 0
seg000:24F3                 db  5Dh ; ]
seg000:24F4                 db  30h ; 0
seg000:24F5                 db    3
seg000:24F6                 db  2Dh ; -
seg000:24F7                 db  5Fh ; _
seg000:24F8                 db    7
seg000:24F9                 db  2Bh ; +
seg000:24FA                 db  3Fh ; ?
seg000:24FB                 db    8
seg000:24FC                 db  27h ; '
seg000:24FD                 db  3Fh ; ?
seg000:24FE                 db    9
seg000:24FF                 db 0DFh ; ¯
seg000:2500                 db  3Fh ; ?
seg000:2501                 db  0Bh
seg000:2502                 db  27h ; '
seg000:2503                 db  3Fh ; ?
seg000:2504                 db  0Ch
seg000:2505                 db  27h ; '
seg000:2506                 db  22h ; "
seg000:2507                 db  0Fh
seg000:2508                 db  29h ; )
seg000:2509                 db 0B0h ; ¦
seg000:250A                 db    2
seg000:250B                 db  3Dh ; =
seg000:250C                 db  2Bh ; +
seg000:250D                 db    3
seg000:250E                 db 0BDh ; ¢
seg000:250F                 db 0BCh ; +
seg000:2510                 db    5
seg000:2511                 db    1
seg000:2512                 db    2
seg000:2513                 db    7
seg000:2514                 db    3
seg000:2515                 db    2
seg000:2516                 db  48h ; H
seg000:2517                 db 0BAh ; ¦
seg000:2518                 db 0AAh ; ¬
seg000:2519                 db  5Dh ; ]
seg000:251A                 db  5Bh ; [
seg000:251B                 db    9
seg000:251C                 db    3
seg000:251D                 db    2
seg000:251E                 db  0Bh
seg000:251F                 db    1
seg000:2520                 db    2
seg000:2521                 db  0Ch
seg000:2522                 db  2Fh ; /
seg000:2523                 db  3Ah ; :
seg000:2524                 db  0Eh
seg000:2525                 db  2Dh ; -
seg000:2526                 db  5Fh ; _
seg000:2527                 db  0Fh
seg000:2528                 db  2Dh ; -
seg000:2529                 db  2Bh ; +
seg000:252A                 db  0Ch
seg000:252B                 db  71h ; q
seg000:252C                 db  51h ; Q
seg000:252D                 db  0Eh
seg000:252E                 db  61h ; a             ; Unshifted and shifted characters?
seg000:252F                 db  41h ; A
seg000:2530                 db  0Fh
seg000:2531                 db  71h ; q
seg000:2532                 db  51h ; Q
seg000:2533                 db  0Ch
seg000:2534                 db  77h ; w
seg000:2535                 db  57h ; W
seg000:2536                 db  0Fh
seg000:2537                 db  7Ah ; z
seg000:2538                 db  5Ah ; Z
seg000:2539                 db  0Fh
seg000:253A                 db  65h ; e
seg000:253B                 db  45h ; E
seg000:253C                 db  0Fh
seg000:253D                 db  72h ; r
seg000:253E                 db  52h ; R
seg000:253F                 db  0Fh
seg000:2540                 db  74h ; t
seg000:2541                 db  54h ; T
seg000:2542                 db    8
seg000:2543                 db  79h ; y
seg000:2544                 db  59h ; Y
seg000:2545                 db  0Bh
seg000:2546                 db  7Ah ; z
seg000:2547                 db  5Ah ; Z
seg000:2548                 db  0Fh
seg000:2549                 db  79h ; y
seg000:254A                 db  59h ; Y
seg000:254B                 db  0Fh
seg000:254C                 db  75h ; u
seg000:254D                 db  55h ; U
seg000:254E                 db  0Fh
seg000:254F                 db  69h ; i
seg000:2550                 db  49h ; I
seg000:2551                 db  0Fh
seg000:2552                 db  6Fh ; o
seg000:2553                 db  4Fh ; O
seg000:2554                 db  0Fh
seg000:2555                 db  70h ; p
seg000:2556                 db  50h ; P
seg000:2557                 db    1
seg000:2558                 db  5Bh ; [
seg000:2559                 db  7Bh ; {
seg000:255A                 db  42h ; B
seg000:255B                 db 0E7h ; þ
seg000:255C                 db 0C7h ; Ã
seg000:255D                 db  5Dh ; ]
seg000:255E                 db  5Bh ; [
seg000:255F                 db  43h ; C
seg000:2560                 db  40h ; @
seg000:2561                 db 0A7h ; º
seg000:2562                 db  40h ; @
seg000:2563                 db  5Ch ; \
seg000:2564                 db  47h ; G
seg000:2565                 db 0E5h ; Õ
seg000:2566                 db 0C5h ; +
seg000:2567                 db  5Dh ; ]
seg000:2568                 db  5Bh ; [
seg000:2569                 db    8
seg000:256A                 db    2
seg000:256B                 db    1
seg000:256C                 db  49h ; I
seg000:256D                 db 0FCh ; ³
seg000:256E                 db 0DCh ; _
seg000:256F                 db  40h ; @
seg000:2570                 db  5Ch ; \
seg000:2571                 db  4Ah ; J
seg000:2572                 db 0E8h ; Þ
seg000:2573                 db 0FCh ; ³
seg000:2574                 db 0E8h ; Þ
seg000:2575                 db  5Ch ; \
seg000:2576                 db  4Bh ; K
seg000:2577                 db 0FCh ; ³
seg000:2578                 db 0E8h ; Þ
seg000:2579                 db 0FCh ; ³
seg000:257A                 db  5Ch ; \
seg000:257B                 db  0Eh
seg000:257C                 db    1
seg000:257D                 db    4
seg000:257E                 db  0Fh
seg000:257F                 db 0ECh ; ý
seg000:2580                 db  3Dh ; =
seg000:2581                 db    1
seg000:2582                 db  5Dh ; ]
seg000:2583                 db  7Dh ; }
seg000:2584                 db    2
seg000:2585                 db  23h ; #
seg000:2586                 db  40h ; @
seg000:2587                 db    3
seg000:2588                 db  5Dh ; ]
seg000:2589                 db  5Bh ; [
seg000:258A                 db  45h ; E
seg000:258B                 db 0FCh ; ³
seg000:258C                 db 0DCh ; _
seg000:258D                 db  23h ; #
seg000:258E                 db  5Ch ; \
seg000:258F                 db    7
seg000:2590                 db    4
seg000:2591                 db    1
seg000:2592                 db    9
seg000:2593                 db  2Bh ; +
seg000:2594                 db  2Ah ; *
seg000:2595                 db  0Bh
seg000:2596                 db    4
seg000:2597                 db    0
seg000:2598                 db  0Ch
seg000:2599                 db  2Ah ; *
seg000:259A                 db  21h ; !
seg000:259B                 db  0Eh
seg000:259C                 db  24h ; $
seg000:259D                 db  2Ah ; *
seg000:259E                 db  0Fh
seg000:259F                 db  24h ; $
seg000:25A0                 db  26h ; &
seg000:25A1                 db  0Ch
seg000:25A2                 db  61h ; a
seg000:25A3                 db  41h ; A
seg000:25A4                 db  0Eh
seg000:25A5                 db  71h ; q
seg000:25A6                 db  51h ; Q
seg000:25A7                 db  0Fh
seg000:25A8                 db  61h ; a
seg000:25A9                 db  41h ; A
seg000:25AA                 db  0Fh
seg000:25AB                 db  73h ; s
seg000:25AC                 db  53h ; S
seg000:25AD                 db  0Fh
seg000:25AE                 db  64h ; d
seg000:25AF                 db  44h ; D
seg000:25B0                 db  0Fh
seg000:25B1                 db  66h ; f
seg000:25B2                 db  46h ; F
seg000:25B3                 db  0Fh
seg000:25B4                 db  67h ; g
seg000:25B5                 db  47h ; G
seg000:25B6                 db  0Fh
seg000:25B7                 db  68h ; h
seg000:25B8                 db  48h ; H
seg000:25B9                 db  0Fh
seg000:25BA                 db  6Ah ; j
seg000:25BB                 db  4Ah ; J
seg000:25BC                 db  0Fh
seg000:25BD                 db  6Bh ; k
seg000:25BE                 db  4Bh ; K
seg000:25BF                 db  0Fh
seg000:25C0                 db  6Ch ; l
seg000:25C1                 db  4Ch ; L
seg000:25C2                 db    2
seg000:25C3                 db  3Bh ; ;
seg000:25C4                 db  3Ah ; :
seg000:25C5                 db    3
seg000:25C6                 db  3Bh ; ;
seg000:25C7                 db  2Bh ; +
seg000:25C8                 db    5
seg000:25C9                 db 0F6h ; ÷
seg000:25CA                 db 0D6h ; Í
seg000:25CB                 db    6
seg000:25CC                 db 0F8h ; °
seg000:25CD                 db 0D8h ; Ï
seg000:25CE                 db    7
seg000:25CF                 db 0E6h ; µ
seg000:25D0                 db 0C6h ; ã
seg000:25D1                 db    8
seg000:25D2                 db 0F1h ; ±
seg000:25D3                 db 0D1h ; Ð
seg000:25D4                 db    9
seg000:25D5                 db 0F6h ; ÷
seg000:25D6                 db 0D6h ; Í
seg000:25D7                 db  4Ah ; J
seg000:25D8                 db 0E9h ; Ú
seg000:25D9                 db 0F6h ; ÷
seg000:25DA                 db 0E9h ; Ú
seg000:25DB                 db  5Bh ; [
seg000:25DC                 db  4Bh ; K
seg000:25DD                 db 0F6h ; ÷
seg000:25DE                 db 0E9h ; Ú
seg000:25DF                 db 0F6h ; ÷
seg000:25E0                 db  5Bh ; [
seg000:25E1                 db  0Ch
seg000:25E2                 db  2Dh ; -
seg000:25E3                 db  5Fh ; _
seg000:25E4                 db  0Fh
seg000:25E5                 db  6Dh ; m
seg000:25E6                 db  4Dh ; M
seg000:25E7                 db    1
seg000:25E8                 db  27h ; '
seg000:25E9                 db  22h ; "
seg000:25EA                 db    2
seg000:25EB                 db    2
seg000:25EC                 db    1
seg000:25ED                 db    3
seg000:25EE                 db  3Ah ; :
seg000:25EF                 db  2Ah ; *
seg000:25F0                 db    5
seg000:25F1                 db 0E4h ; õ
seg000:25F2                 db 0C4h ; -
seg000:25F3                 db  46h ; F
seg000:25F4                 db 0E6h ; µ
seg000:25F5                 db 0C6h ; ã
seg000:25F6                 db  23h ; #
seg000:25F7                 db  5Ch ; \
seg000:25F8                 db  47h ; G
seg000:25F9                 db 0F8h ; °
seg000:25FA                 db 0D8h ; Ï
seg000:25FB                 db  23h ; #
seg000:25FC                 db  5Ch ; \
seg000:25FD                 db    8
seg000:25FE                 db    3
seg000:25FF                 db    4
seg000:2600                 db  49h ; I
seg000:2601                 db 0E4h ; õ
seg000:2602                 db 0C4h ; -
seg000:2603                 db  5Dh ; ]
seg000:2604                 db  5Bh ; [
seg000:2605                 db  4Ah ; J
seg000:2606                 db 0E0h ; Ó
seg000:2607                 db 0E4h ; õ
seg000:2608                 db 0E0h ; Ó
seg000:2609                 db  5Dh ; ]
seg000:260A                 db  4Bh ; K
seg000:260B                 db 0E4h ; õ
seg000:260C                 db 0E0h ; Ó
seg000:260D                 db 0E4h ; õ
seg000:260E                 db  5Dh ; ]
seg000:260F                 db  0Ch
seg000:2610                 db    2
seg000:2611                 db    3
seg000:2612                 db  4Eh ; N
seg000:2613                 db 0F9h ; ¨
seg000:2614                 db  25h ; %
seg000:2615                 db  5Ch ; \
seg000:2616                 db  25h ; %
seg000:2617                 db  0Fh
seg000:2618                 db 0F9h ; ¨
seg000:2619                 db  25h ; %
seg000:261A                 db    2
seg000:261B                 db  5Ch ; \
seg000:261C                 db  7Ch ; |
seg000:261D                 db    3
seg000:261E                 db    1
seg000:261F                 db    2
seg000:2620                 db    7
seg000:2621                 db  27h ; '
seg000:2622                 db  2Ah ; *
seg000:2623                 db    8
seg000:2624                 db 0E7h ; þ
seg000:2625                 db    0
seg000:2626                 db    9
seg000:2627                 db  23h ; #
seg000:2628                 db  27h ; '
seg000:2629                 db  4Bh ; K
seg000:262A                 db  24h ; $
seg000:262B                 db 0A3h ; ú
seg000:262C                 db  24h ; $
seg000:262D                 db  23h ; #
seg000:262E                 db  0Ch
seg000:262F                 db  40h ; @
seg000:2630                 db  7Ch ; |
seg000:2631                 db  0Eh
seg000:2632                 db  23h ; #
seg000:2633                 db  40h ; @
seg000:2634                 db  4Fh ; O
seg000:2635                 db  2Ah ; *
seg000:2636                 db 0A7h ; º
seg000:2637                 db  2Ah ; *
seg000:2638                 db  5Ch ; \
seg000:2639                 db  0Fh
seg000:263A                 db  3Ch ; <
seg000:263B                 db  3Eh ; >
seg000:263C                 db    8
seg000:263D                 db  7Ah ; z
seg000:263E                 db  5Ah ; Z
seg000:263F                 db  0Bh
seg000:2640                 db  79h ; y
seg000:2641                 db  59h ; Y
seg000:2642                 db  0Ch
seg000:2643                 db  7Ah ; z
seg000:2644                 db  5Ah ; Z
seg000:2645                 db  0Fh
seg000:2646                 db  77h ; w
seg000:2647                 db  57h ; W
seg000:2648                 db  0Fh
seg000:2649                 db  78h ; x
seg000:264A                 db  58h ; X
seg000:264B                 db  0Fh
seg000:264C                 db  63h ; c
seg000:264D                 db  43h ; C
seg000:264E                 db  0Fh
seg000:264F                 db  76h ; v
seg000:2650                 db  56h ; V
seg000:2651                 db  0Fh
seg000:2652                 db  62h ; b
seg000:2653                 db  42h ; B
seg000:2654                 db  0Fh
seg000:2655                 db  6Eh ; n
seg000:2656                 db  4Eh ; N
seg000:2657                 db  0Ch
seg000:2658                 db  6Dh ; m
seg000:2659                 db  4Dh ; M
seg000:265A                 db  0Fh
seg000:265B                 db  2Ch ; ,
seg000:265C                 db  3Fh ; ?
seg000:265D                 db    1
seg000:265E                 db  2Ch ; ,
seg000:265F                 db  2Ch ; ,
seg000:2660                 db    2
seg000:2661                 db  2Ch ; ,
seg000:2662                 db  27h ; '
seg000:2663                 db    3
seg000:2664                 db  2Ch ; ,
seg000:2665                 db  2Ch ; ,
seg000:2666                 db  0Bh
seg000:2667                 db  2Ch ; ,
seg000:2668                 db  3Bh ; ;
seg000:2669                 db  0Ch
seg000:266A                 db  2Ch ; ,
seg000:266B                 db  3Fh ; ?
seg000:266C                 db  0Fh
seg000:266D                 db  3Bh ; ;
seg000:266E                 db  2Eh ; .
seg000:266F                 db    3
seg000:2670                 db  2Eh ; .
seg000:2671                 db  2Eh ; .
seg000:2672                 db  0Bh
seg000:2673                 db  2Eh ; .
seg000:2674                 db  3Ah ; :
seg000:2675                 db  0Ch
seg000:2676                 db  2Eh ; .
seg000:2677                 db  3Bh ; ;
seg000:2678                 db  0Fh
seg000:2679                 db  3Ah ; :
seg000:267A                 db  2Fh ; /
seg000:267B                 db    1
seg000:267C                 db  2Fh ; /
seg000:267D                 db  3Fh ; ?
seg000:267E                 db    2
seg000:267F                 db 0E9h ; Ú
seg000:2680                 db 0C9h ; +
seg000:2681                 db    3
seg000:2682                 db  2Fh ; /
seg000:2683                 db  3Fh ; ?
seg000:2684                 db  0Bh
seg000:2685                 db  2Dh ; -
seg000:2686                 db  5Fh ; _
seg000:2687                 db  0Ch
seg000:2688                 db  2Bh ; +
seg000:2689                 db  3Dh ; =
seg000:268A                 db  0Eh
seg000:268B                 db  3Dh ; =
seg000:268C                 db  2Bh ; +
seg000:268D                 db  0Fh
seg000:268E                 db 0F2h ; =
seg000:268F                 db  21h ; !
seg000:2690                 db  7Eh ; ~
seg000:2691                 db  5Eh ; ^
seg000:2692                 db  60h ; `
seg000:2693                 db  27h ; '
seg000:2694                 db  22h ; "
seg000:2695                 db 0FBh ; ¹
seg000:2696                 db 0A6h ; ª
seg000:2697                 db    0
seg000:2698                 db 0A7h ; º
seg000:2699                 db    5
seg000:269A                 db 0A7h ; º
seg000:269B                 db  0Ah
seg000:269C                 db 0A7h ; º
seg000:269D                 db  0Fh
seg000:269E                 db 0A7h ; º
seg000:269F                 db  14h
seg000:26A0                 db 0A7h ; º
seg000:26A1                 db  19h
seg000:26A2                 db 0A7h ; º
seg000:26A3                 db  1Eh
seg000:26A4                 db 0A7h ; º
seg000:26A5                 db  23h ; #
seg000:26A6                 db 0A7h ; º
seg000:26A7                 db  28h ; (
seg000:26A8                 db 0A7h ; º
seg000:26A9                 db  2Dh ; -
seg000:26AA                 db 0A7h ; º
seg000:26AB                 db  32h ; 2
seg000:26AC                 db 0A7h ; º
seg000:26AD                 db  37h ; 7
seg000:26AE                 db 0A7h ; º
seg000:26AF                 db  3Ch ; <
seg000:26B0                 db 0A7h ; º
seg000:26B1                 db  41h ; A
seg000:26B2                 db 0A7h ; º
seg000:26B3                 db  45h ; E
seg000:26B4                 db 0A7h ; º
seg000:26B5                 db  49h ; I
seg000:26B6                 db 0A7h ; º
seg000:26B7                 db  4Dh ; M
seg000:26B8                 db 0A7h ; º
seg000:26B9                 db  51h ; Q
seg000:26BA                 db 0A7h ; º
seg000:26BB                 db  55h ; U
seg000:26BC                 db 0A7h ; º             ; ------ ESCAPE CODES:
seg000:26BC                                         ;
seg000:26BD                 db  1Bh, 41h            ; ESC A - cursor keys in VT52 mode?
seg000:26BF                 db  1Bh, 42h            ; ESC B - cursor keys in VT52 mode?
seg000:26C1                 db  1Bh, 43h            ; ESC C - cursor keys in VT52 mode?
seg000:26C3                 db  1Bh, 44h            ; ESC D - cursor keys in VT52 mode?
seg000:26C5                 db  1Bh, 4Fh, 70h       ; ESC O p - keypad "0"
seg000:26C8                 db  1Bh, 4Fh, 71h       ; ESC O q ...
seg000:26CB                 db  1Bh, 4Fh, 72h       ; ESC O r
seg000:26CE                 db  1Bh, 4Fh, 73h       ; ESC O s
seg000:26D1                 db  1Bh, 4Fh, 74h       ; ESC O t
seg000:26D4                 db  1Bh, 4Fh, 75h       ; ESC O u - keypad "5"
seg000:26D7                 db  1Bh, 4Fh, 76h       ; ESC O v ...
seg000:26DA                 db  1Bh, 4Fh, 77h       ; ESC O w
seg000:26DD                 db  1Bh, 4Fh, 78h       ; ESC O x
seg000:26E0                 db  1Bh, 4Fh, 79h       ; ESC O y - keypad "9"
seg000:26E3                 db  1Bh, 4Fh, 6Dh       ; ESC O m (minus)
seg000:26E6                 db  1Bh, 4Fh, 6Ch       ; ESC O l (comma)
seg000:26E9                 db  1Bh, 4Fh, 6Eh       ; ESC O n (period)
seg000:26EC                 db  1Bh, 4Fh, 4Dh       ; ESC O M (ENTER)
seg000:26EF                 db  1Bh, 4Fh, 50h       ; ESC O P - "PF1"
seg000:26F2                 db  1Bh, 4Fh, 51h       ; ESC O Q - "PF2"
seg000:26F5                 db  1Bh, 4Fh, 52h       ; ESC O R - "PF3"
seg000:26F8                 db  1Bh, 4Fh, 53h       ; ESC O S - "PF4"
seg000:26FB                 db  1Bh
seg000:26FC                 db  5Bh ; [             ; (?) Help = ESC [ 28 ~
seg000:26FD                 db  32h ; 2
seg000:26FE                 db  38h ; 8
seg000:26FF                 db  7Eh ; ~
seg000:2700                 db  1Bh
seg000:2701                 db  5Bh ; [             ; (?) Do = ESC [ 29 ~
seg000:2702                 db  32h ; 2
seg000:2703                 db  39h ; 9
seg000:2704                 db  7Eh ; ~
seg000:2705                 db  1Bh
seg000:2706                 db  5Bh ; [             ; ESC [ 12 ~
seg000:2707                 db  31h ; 1
seg000:2708                 db  32h ; 2
seg000:2709                 db  7Eh ; ~
seg000:270A                 db  1Bh                 ; (?) F4 = ESC [ 14 ~
seg000:270B                 db  5Bh ; [
seg000:270C                 db  31h ; 1
seg000:270D                 db  34h ; 4
seg000:270E                 db  7Eh ; ~
seg000:270F                 db  1Bh                 ; (?) Interrupt = ESC [ 17 ~
seg000:2710                 db  5Bh ; [
seg000:2711                 db  31h ; 1
seg000:2712                 db  37h ; 7
seg000:2713                 db  7Eh ; ~
seg000:2714                 db  1Bh                 ; (?) Resume = ESC [ 18 ~
seg000:2715                 db  5Bh ; [
seg000:2716                 db  31h ; 1
seg000:2717                 db  38h ; 8
seg000:2718                 db  7Eh ; ~
seg000:2719                 db  1Bh                 ; (?) Cancel = ESC [ 19 ~
seg000:271A                 db  5Bh ; [
seg000:271B                 db  31h ; 1
seg000:271C                 db  39h ; 9
seg000:271D                 db  7Eh ; ~
seg000:271E                 db  1Bh                 ; (?) Main Screen = ESC [ 20 ~
seg000:271F                 db  5Bh ; [
seg000:2720                 db  32h ; 2
seg000:2721                 db  30h ; 0
seg000:2722                 db  7Eh ; ~
seg000:2723                 db  1Bh                 ; (?) Exit = ESC [ 21 ~
seg000:2724                 db  5Bh ; [
seg000:2725                 db  32h ; 2
seg000:2726                 db  31h ; 1
seg000:2727                 db  7Eh ; ~
seg000:2728                 db  1Bh                 ; (?) Addtnl Options = ESC [ 26 ~
seg000:2729                 db  5Bh ; [
seg000:272A                 db  32h ; 2
seg000:272B                 db  36h ; 6
seg000:272C                 db  7Eh ; ~
seg000:272D                 db  1Bh                 ; (?) F17 = ESC [ 31 ~
seg000:272E                 db  5Bh ; [
seg000:272F                 db  33h ; 3
seg000:2730                 db  31h ; 1
seg000:2731                 db  7Eh ; ~
seg000:2732                 db  1Bh                 ; (?) F18 = ESC [ 32 ~
seg000:2733                 db  5Bh ; [
seg000:2734                 db  33h ; 3
seg000:2735                 db  32h ; 2
seg000:2736                 db  7Eh ; ~
seg000:2737                 db  1Bh                 ; (?) F19 = ESC [ 33 ~
seg000:2738                 db  5Bh ; [
seg000:2739                 db  33h ; 3
seg000:273A                 db  33h ; 3
seg000:273B                 db  7Eh ; ~
seg000:273C                 db  1Bh                 ; (?) F20 = ESC [ 34 ~
seg000:273D                 db  5Bh ; [
seg000:273E                 db  33h ; 3
seg000:273F                 db  34h ; 4
seg000:2740                 db  7Eh ; ~
seg000:2741                 db  1Bh                 ; (?) Find = ESC [ 1 ~
seg000:2742                 db  5Bh ; [
seg000:2743                 db  31h ; 1
seg000:2744                 db  7Eh ; ~
seg000:2745                 db  1Bh                 ; (?) Insert Here = ESC [ 2 ~
seg000:2746                 db  5Bh ; [
seg000:2747                 db  32h ; 2
seg000:2748                 db  7Eh ; ~
seg000:2749                 db  1Bh                 ; (?) Remove = ESC [ 3 ~
seg000:274A                 db  5Bh ; [
seg000:274B                 db  33h ; 3
seg000:274C                 db  7Eh ; ~
seg000:274D                 db  1Bh                 ; (?) Select = ESC [ 4 ~
seg000:274E                 db  5Bh ; [
seg000:274F                 db  34h ; 4
seg000:2750                 db  7Eh ; ~
seg000:2751                 db  1Bh                 ; (?) Prev Screen = ESC [ 5 ~
seg000:2752                 db  5Bh ; [
seg000:2753                 db  35h ; 5
seg000:2754                 db  7Eh ; ~
seg000:2755                 db  1Bh                 ; (?) Next Screen = ESC [ 6 ~
seg000:2756                 db  5Bh ; [
seg000:2757                 db  36h ; 6
seg000:2758                 db  7Eh ; ~
seg000:2759                 db  14h
seg000:275A                 db 0A6h ; ª
seg000:275B
seg000:275B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:275B
seg000:275B
seg000:275B RAW_KBD_DATA__sub_275B proc near        ; CODE XREF: seg000:0024j
seg000:275B                                         ; ConsoleLev1In__sub_1F6Fp
seg000:275B                 pushf
seg000:275C                 cli
seg000:275D                 cmp     byte ptr ds:aCarDeDsconnx+0Bh, 0Eh ; DS:0F6C
seg000:2762                 jb      short WAITLED_OFF__loc_2767 ;
seg000:2762                                         ;
seg000:2764                 popf
seg000:2765                 clc
seg000:2766                 retn
seg000:2767 ; ---------------------------------------------------------------------------
seg000:2767
seg000:2767 WAITLED_OFF__loc_2767:                  ; CODE XREF: RAW_KBD_DATA__sub_275B+7j
seg000:2767                 cmp     byte ptr ds:aCarDeDsconnx+0Bh, 0 ; DS:0F6C = EEF6C
seg000:276C                 jnz     short BUFF_NOT_FULL__loc_2774 ; turn off WAIT in case buffer was full (not any longer...)
seg000:276C                                         ;
seg000:276E                 mov     ax, 8111h       ; 0x11    /* turn off WAIT LED */
seg000:2771                 call    KBD_CMD_AL__sub_2846
seg000:2774
seg000:2774 BUFF_NOT_FULL__loc_2774:                ; CODE XREF: RAW_KBD_DATA__sub_275B+11j
seg000:2774                 mov     bx, word ptr ds:aCarDeDsconnx+0Ch ; DS:0F6D
seg000:2778                 inc     byte ptr ds:aCarDeDsconnx+0Bh ; DS:0F6C
seg000:277C                 mov     ax, [bx]
seg000:277E                 inc     bx
seg000:277F                 inc     bx
seg000:2780                 cmp     bx, 0F8Fh
seg000:2784                 jb      short loc_2789  ;
seg000:2784                                         ;
seg000:2786                 mov     bx, 0F71h
seg000:2789
seg000:2789 loc_2789:                               ; CODE XREF: RAW_KBD_DATA__sub_275B+29j
seg000:2789                 mov     word ptr ds:aCarDeDsconnx+0Ch, bx ; DS:0F6D
seg000:278D                 popf
seg000:278E                 stc
seg000:278F                 retn
seg000:278F RAW_KBD_DATA__sub_275B endp
seg000:278F
seg000:278F ; ---------------------------------------------------------------------------
seg000:2790                 db  11h                 ; NO CODE.
seg000:2791                 db  8Fh ; Å
seg000:2792                 db  8Eh ; Ä
seg000:2793                 db  96h ; û
seg000:2794                 db  9Eh ; ×
seg000:2795                 db 0A6h ; ª
seg000:2796                 db 0A8h ; ¿
seg000:2797                 db 0B6h ; Â
seg000:2798                 db 0BEh ; ¥
seg000:2799                 db 0C6h ; ã
seg000:279A                 db 0CEh ; +
seg000:279B                 db 0D0h ; ð
seg000:279C                 db 0DEh ; Ì
seg000:279D                 db 0E6h ; µ
seg000:279E                 db 0EEh ; ¯
seg000:279F                 db 0F6h ; ÷
seg000:27A0 ; ---------------------------------------------------------------------------
seg000:27A0
seg000:27A0 loc_27A0:                               ; CODE XREF: seg000:0018j
seg000:27A0                 push    es
seg000:27A1                 push    ds
seg000:27A2                 pop     es
seg000:27A3                 mov     cx, 5Bh ; '['
seg000:27A6                 mov     al, 0
seg000:27A8                 mov     di, 0F5Ah
seg000:27AB                 cld
seg000:27AC                 rep stosb
seg000:27AE                 pop     es
seg000:27AF                 call    near ptr 8048h  ; F4048
seg000:27AF                                         ; sub_36DC in BOOT ROM
seg000:27B2                 retn
seg000:27B3 ; ---------------------------------------------------------------------------
seg000:27B3
seg000:27B3 KBD_SEND_PORT11_LOW_LEVEL__loc_27B3:    ; CODE XREF: seg000:001Ej
seg000:27B3                 xor     al, al          ; 00 / 00 / 00
seg000:27B5                 out     11h, al
seg000:27B7                 out     11h, al
seg000:27B9                 out     11h, al
seg000:27BB                 mov     al, 40h ; '@'   ; 40
seg000:27BD                 out     11h, al
seg000:27BF                 mov     al, 4Eh ; 'N'   ; 4e
seg000:27C1                 out     11h, al
seg000:27C3                 mov     al, 14h         ; 14 or 16
seg000:27C5                 test    byte ptr ds:aProtocole+3, 4
seg000:27CA                 jnz     short loc_27CE  ;
seg000:27CA                                         ;
seg000:27CC                 or      al, 2
seg000:27CE
seg000:27CE loc_27CE:                               ; CODE XREF: seg000:27CAj
seg000:27CE                 out     11h, al
seg000:27D0                 in      al, 10h
seg000:27D2                 retn
seg000:27D3 ; ---------------------------------------------------------------------------
seg000:27D3
seg000:27D3 RING_BELL_etc__loc_27D3:                ; CODE XREF: seg000:0015j
seg000:27D3                 push    ds
seg000:27D4                 push    es
seg000:27D5                 push    ds
seg000:27D6                 pop     es
seg000:27D7                 push    cs
seg000:27D8                 pop     ds
seg000:27D9                 mov     cx, 10h
seg000:27DC                 mov     word ptr es:aVolAlarme+6, cx ; DS:0FB5
seg000:27E1                 mov     word ptr es:aVolAlarme+4, 0 ; DS:0FB3
seg000:27E8                 mov     di, 0F95h
seg000:27EB                 mov     si, 0A790h
seg000:27EE                 cld
seg000:27EF                 rep movsb
seg000:27F1                 pop     es
seg000:27F2                 pop     ds
seg000:27F3                 call    ENABLE_BELL_ES_A8__sub_2835
seg000:27F6                 call    ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A ;
seg000:27F6                                         ;
seg000:27F9                 mov     al, 0A7h ; 'º'  ; 0xa7    /* bell command */
seg000:27FB                 call    KBD_CMD_AL__sub_2846
seg000:27FE                 retn
seg000:27FF
seg000:27FF ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:27FF
seg000:27FF
seg000:27FF CON_INIT_VARS__sub_27FF proc near       ; CODE XREF: j_INIT_VARS__sub_27FFj
seg000:27FF                 push    es
seg000:2800                 push    ds
seg000:2801                 pop     es
seg000:2802                 mov     byte ptr ds:aCarDeDsconnx+0Bh, 0Eh ; DS:0F6C  <=  0E (empty)
seg000:2807                 mov     ax, 0F71h
seg000:280A                 mov     word ptr ds:aCarDeDsconnx+0Ch, ax ; DS:0F6D  <=  0f71
seg000:280D                 mov     word ptr ds:aCarDeDsconnx+0Eh, ax ; DS:0F6E  <=  0f71
seg000:2810                 xor     ax, ax
seg000:2812                 mov     word ptr ds:aVolAlarme+4, ax ; DS:0FB3
seg000:2815                 mov     word ptr ds:aVolAlarme+6, ax ; DS:0FB5
seg000:2818                 pop     es
seg000:2819                 retn
seg000:2819 CON_INIT_VARS__sub_27FF endp
seg000:2819
seg000:281A
seg000:281A ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:281A
seg000:281A
seg000:281A ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A proc near ; CODE XREF: seg000:27F6p
seg000:281A                                         ; seg000:2DEAp ...
seg000:281A                 mov     al, 99h ; 'Ö'
seg000:281C                 test    byte ptr es:TXT_GRAFIX_8084+8, 1 ; ES:8C 0x8c KEYCLICK (0=OFF 1=ON)
seg000:2822                 jz      short NO_KEYCLICK__loc_2831 ;
seg000:2822                                         ;
seg000:2824                 mov     ah, byte ptr es:TXT_GRAFIX_80a4+5 ; ES:A9 KEYCLICK VOLUME ("1" => 7;  "8" => 0; "2" => 6)
seg000:2829                 and     ah, 0Fh
seg000:282C                 or      ah, 80h
seg000:282F                 mov     al, 1Bh         ; 0x1b    /* enable the keyclick */
seg000:282F                                         ;         /* 1st param: volume */
seg000:2831
seg000:2831 NO_KEYCLICK__loc_2831:                  ; CODE XREF: ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A+8j
seg000:2831                 call    KBD_CMD_AL__sub_2846
seg000:2834                 retn
seg000:2834 ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A endp
seg000:2834
seg000:2835
seg000:2835 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2835
seg000:2835
seg000:2835 ENABLE_BELL_ES_A8__sub_2835 proc near   ; CODE XREF: seg000:27F3p
seg000:2835                                         ; seg000:2DEDp ...
seg000:2835                 mov     al, 23h ; '#'   ; 0x23    /* enable the bell */
seg000:2835                                         ;         /* 1st param: volume */
seg000:2837                 mov     ah, byte ptr es:TXT_GRAFIX_80a4+4 ; ES:A8  BELL VOLUME (see notes for keyclick volume above)
seg000:283C                 and     ah, 0Fh
seg000:283F                 or      ah, 80h
seg000:2842                 call    KBD_CMD_AL__sub_2846
seg000:2845                 retn
seg000:2845 ENABLE_BELL_ES_A8__sub_2835 endp
seg000:2845
seg000:2846
seg000:2846 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2846
seg000:2846
seg000:2846 KBD_CMD_AL__sub_2846 proc near          ; CODE XREF: j_KBD_CMD_AL__sub_2846j
seg000:2846                                         ; COMPOSE__sub_20B6+A3p ...
seg000:2846                 pushf
seg000:2847                 cli
seg000:2848                 mov     si, word ptr ds:aVolAlarme+6 ; DS:0FB5
seg000:284C                 mov     [si+0F95h], al
seg000:2850                 inc     si
seg000:2851                 inc     word ptr ds:aVolAlarme+6 ; DS:0FB5
seg000:2855                 cmp     al, 23h ; '#'
seg000:2857                 ja      short loc_2862  ;
seg000:2857                                         ;
seg000:2859                 mov     [si+0F95h], ah
seg000:285D                 inc     word ptr ds:aVolAlarme+6 ; DS:0FB5
seg000:2861                 inc     si
seg000:2862
seg000:2862 loc_2862:                               ; CODE XREF: KBD_CMD_AL__sub_2846+11j
seg000:2862                 cmp     si, 1Eh
seg000:2866                 ja      short loc_287D  ;
seg000:2866                                         ;
seg000:2868                 or      byte ptr ds:aVolBip+7, 1 ; DS:0F90 - set BIT 0
seg000:286D                 mov     al, 15h
seg000:286F                 test    byte ptr ds:aProtocole+3, 4 ; DS:0F44
seg000:2874                 jnz     short KBD__loc_2878 ;
seg000:2874                                         ;
seg000:2876                 or      al, 2
seg000:2878
seg000:2878 KBD__loc_2878:                          ; CODE XREF: KBD_CMD_AL__sub_2846+2Ej
seg000:2878                 out     11h, al
seg000:287A                 popf
seg000:287B                 stc
seg000:287C                 retn
seg000:287D ; ---------------------------------------------------------------------------
seg000:287D
seg000:287D loc_287D:                               ; CODE XREF: KBD_CMD_AL__sub_2846+20j
seg000:287D                 popf
seg000:287E                 clc
seg000:287F                 retn
seg000:287F KBD_CMD_AL__sub_2846 endp
seg000:287F
seg000:2880 ; ---------------------------------------------------------------------------
seg000:2880
seg000:2880 KBD_ISR_8251__loc_2880:                 ; CODE XREF: seg000:002Aj
seg000:2880                 push    ax
seg000:2881                 push    bx
seg000:2882                 push    ds
seg000:2883                 mov     ax, 0EE00h
seg000:2886                 mov     ds, ax
seg000:2888                 assume ds:nothing
seg000:2888                 mov     ax, ss
seg000:288A                 mov     bx, sp
seg000:288C                 cmp     ax, 0EE00h
seg000:288F                 jz      short KBD_ISR__loc_28A7 ;
seg000:288F                                         ;
seg000:2891                 mov     sp, 0EE00h
seg000:2894                 mov     ss, sp
seg000:2896                 mov     sp, ds:1FF7h
seg000:289A                 push    word ptr ds:1EF6h
seg000:289E                 or      word ptr ds:1EF6h, 1
seg000:28A4                 jmp     KBD_ISR__loc_28B1
seg000:28A7 ; ---------------------------------------------------------------------------
seg000:28A7
seg000:28A7 KBD_ISR__loc_28A7:                      ; CODE XREF: seg000:288Fj
seg000:28A7                 push    word ptr ds:1EF6h
seg000:28AB                 and     word ptr ds:1EF6h, 0FFFEh
seg000:28B1
seg000:28B1 KBD_ISR__loc_28B1:                      ; CODE XREF: seg000:28A4j
seg000:28B1                 push    ax
seg000:28B2                 push    bx
seg000:28B3                 push    cx
seg000:28B4                 push    dx
seg000:28B5                 push    si
seg000:28B6                 push    di
seg000:28B7                 push    bp
seg000:28B8                 push    ds
seg000:28B9                 push    es
seg000:28BA                 mov     ax, 0EE00h
seg000:28BD                 mov     es, ax
seg000:28BF                 assume es:nothing
seg000:28BF                 call    KBD_ISR__sub_28EA
seg000:28C2                 call    KBD_ISR__sub_2930
seg000:28C5                 cli
seg000:28C6                 pop     es
seg000:28C7                 assume es:nothing
seg000:28C7                 pop     ds
seg000:28C8                 assume ds:nothing
seg000:28C8                 pop     bp
seg000:28C9                 pop     di
seg000:28CA                 pop     si
seg000:28CB                 pop     dx
seg000:28CC                 pop     cx
seg000:28CD                 pop     bx
seg000:28CE                 pop     ax
seg000:28CF                 test    word ptr ds:unk_1EF6, 1
seg000:28D5                 jz      short KBD_ISR__loc_28E2 ;
seg000:28D5                                         ;
seg000:28D7                 pop     word ptr ds:unk_1EF6
seg000:28DB                 mov     ss, ax
seg000:28DD                 mov     sp, bx
seg000:28DF                 jmp     KBD_ISR__loc_28E6
seg000:28E2 ; ---------------------------------------------------------------------------
seg000:28E2
seg000:28E2 KBD_ISR__loc_28E2:                      ; CODE XREF: seg000:28D5j
seg000:28E2                 pop     word ptr ds:unk_1EF6
seg000:28E6
seg000:28E6 KBD_ISR__loc_28E6:                      ; CODE XREF: seg000:28DFj
seg000:28E6                 pop     ds
seg000:28E7                 pop     bx
seg000:28E8                 pop     ax
seg000:28E9                 iret
seg000:28EA
seg000:28EA ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:28EA
seg000:28EA
seg000:28EA KBD_ISR__sub_28EA proc near             ; CODE XREF: seg000:28BFp
seg000:28EA                 in      al, 11h         ; KEYBOARD PORT 11 ( 8251A ) - see PAGE 16 of PC 100 SYSTEM SPEC.
seg000:28EC                 test    al, 2
seg000:28EE                 jz      short locret_290E ; not RxRDY ?
seg000:28EE                                         ;
seg000:28F0                 call    near ptr 804Bh  ; F404B
seg000:28F0                                         ; sub_3752        ; VIDEO: unknown subroutine.
seg000:28F0                                         ;
seg000:28F3                 test    al, 78h         ; 1111000 (NOTE: this is still the result from IN AL,11)
seg000:28F5                 jnz     short ERROR_LIKELY__loc_290F ;
seg000:28F5                                         ; (0: TxRDY)
seg000:28F5                                         ; (1: RxRDY)
seg000:28F5                                         ; (2: TxEMPTY)
seg000:28F5                                         ; 3: PE (PARITY ERROR)
seg000:28F5                                         ; 4: OE (OVERRUN ERROR)
seg000:28F5                                         ; 5: FE (FRAMING ERROR - async only)
seg000:28F5                                         ; 6: SYNDET/BRKDET
seg000:28F5                                         ; (7: DSR)
seg000:28F7                 in      al, 10h
seg000:28F9                 cmp     al, 58h ; 'X'   ; Keycode for SET-UP (F3)
seg000:28FB                 jnz     short KBD_CHECK_OTHER_KEYS__loc_290A ;
seg000:28FB                                         ;
seg000:28FD                 test    byte ptr ds:aVolBip+7, 4 ; DS:0F90 => EEF90
seg000:2902                 jnz     short KBD_CHECK_OTHER_KEYS__loc_290A ;
seg000:2902                                         ;
seg000:2904                 or      byte ptr ds:aVolBip+7, 2 ; DS:0F90 => EEF90
seg000:2909                 retn
seg000:290A ; ---------------------------------------------------------------------------
seg000:290A
seg000:290A KBD_CHECK_OTHER_KEYS__loc_290A:         ; CODE XREF: KBD_ISR__sub_28EA+11j
seg000:290A                                         ; KBD_ISR__sub_28EA+18j
seg000:290A                 call    KBD_CHK_MORE__sub_299F
seg000:290D                 cli
seg000:290E
seg000:290E locret_290E:                            ; CODE XREF: KBD_ISR__sub_28EA+4j
seg000:290E                 retn
seg000:290F ; ---------------------------------------------------------------------------
seg000:290F
seg000:290F ERROR_LIKELY__loc_290F:                 ; CODE XREF: KBD_ISR__sub_28EA+Bj
seg000:290F                 test    al, 40h         ; 01000000 = 6: SYNDET / BRKDET
seg000:2911                 in      al, 10h
seg000:2913                 jnz     short KBD_NO_SYN_NO_BRK__loc_2918 ;
seg000:2913                                         ;
seg000:2915                 jmp     ALL_KEYS_UP__0F90_b6__loc_29B1
seg000:2918 ; ---------------------------------------------------------------------------
seg000:2918
seg000:2918 KBD_NO_SYN_NO_BRK__loc_2918:            ; CODE XREF: KBD_ISR__sub_28EA+29j
seg000:2918                 or      byte ptr ds:loc_1FF9, 20h
seg000:291D                 mov     byte ptr ds:aVolBip+8, 3Ch ; '<' ; DS:0F91
seg000:2922                 mov     al, 10h
seg000:2924                 test    byte ptr ds:aProtocole+3, 4 ; DS:0F44
seg000:2929                 jnz     short loc_292D  ;
seg000:2929                                         ;
seg000:292B                 or      al, 2
seg000:292D
seg000:292D loc_292D:                               ; CODE XREF: KBD_ISR__sub_28EA+3Fj
seg000:292D                 out     11h, al
seg000:292F                 retn
seg000:292F KBD_ISR__sub_28EA endp
seg000:292F
seg000:2930
seg000:2930 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2930
seg000:2930
seg000:2930 KBD_ISR__sub_2930 proc near             ; CODE XREF: seg000:28C2p
seg000:2930
seg000:2930 ; FUNCTION CHUNK AT seg000:2973 SIZE 0000000E BYTES
seg000:2930 ; FUNCTION CHUNK AT seg000:2982 SIZE 0000001D BYTES
seg000:2930
seg000:2930                 test    byte ptr ds:aVolBip+7, 1 ; DS:0F90 - TEST BIT 0
seg000:2935                 jz      short KBD_0F90_BIT0__sub_2954 ;
seg000:2935                                         ;
seg000:2937                 mov     al, 5
seg000:2939                 test    byte ptr ds:aProtocole+3, 4 ; DS:0F44
seg000:293E                 jnz     short KBD__loc_2942 ;
seg000:293E                                         ;
seg000:2940                 or      al, 2
seg000:2942
seg000:2942 KBD__loc_2942:                          ; CODE XREF: KBD_ISR__sub_2930+Ej
seg000:2942                 out     11h, al
seg000:2944                 in      al, 11h
seg000:2946                 test    al, 1
seg000:2948                 jz      short nullsub_1 ; retn
seg000:2948                                         ;
seg000:294A                 mov     si, word ptr ds:aVolAlarme+4 ; DS:0FB3 * WORD *
seg000:294E                 cmp     si, word ptr ds:aVolAlarme+6 ; DS:0FB5 * WORD *
seg000:2952                 jb      short KBD_ISR__loc_2973
seg000:2952 KBD_ISR__sub_2930 endp
seg000:2952
seg000:2954
seg000:2954 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2954
seg000:2954
seg000:2954 KBD_0F90_BIT0__sub_2954 proc near       ; CODE XREF: KBD_ISR__sub_2930+5j
seg000:2954                                         ; KBD_ISR__sub_2930:KBD_SETUP_or_OUT__loc_2982p
seg000:2954                 mov     al, 14h
seg000:2956                 test    byte ptr ds:aProtocole+3, 4 ; DS:0F44
seg000:295B                 jnz     short loc_295F
seg000:295D                 or      al, 2
seg000:295F
seg000:295F loc_295F:                               ; CODE XREF: KBD_0F90_BIT0__sub_2954+7j
seg000:295F                 out     11h, al
seg000:2961                 mov     word ptr ds:aVolAlarme+4, 0 ; DS:0FB3
seg000:2967                 mov     word ptr ds:aVolAlarme+6, 0 ; DS:0FB5
seg000:296D                 and     byte ptr ds:aVolBip+7, 0FEh ; DS:0F90 - CLEAR BIT 0
seg000:2972                 retn
seg000:2972 KBD_0F90_BIT0__sub_2954 endp
seg000:2972
seg000:2973 ; ---------------------------------------------------------------------------
seg000:2973 ; START OF FUNCTION CHUNK FOR KBD_ISR__sub_2930
seg000:2973
seg000:2973 KBD_ISR__loc_2973:                      ; CODE XREF: KBD_ISR__sub_2930+22j
seg000:2973                 mov     al, [si+0F95h]
seg000:2977                 cmp     al, 7Fh ; ''
seg000:2979                 jz      short KBD_SETUP_or_OUT__loc_2982 ;
seg000:2979                                         ;
seg000:297B                 out     10h, al
seg000:297D                 inc     word ptr ds:aVolAlarme+4 ; DS:0FB3
seg000:297D ; END OF FUNCTION CHUNK FOR KBD_ISR__sub_2930
seg000:2981
seg000:2981 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2981
seg000:2981
seg000:2981 nullsub_1       proc near               ; CODE XREF: KBD_ISR__sub_2930+18j
seg000:2981                 retn
seg000:2981 nullsub_1       endp
seg000:2981
seg000:2982 ; ---------------------------------------------------------------------------
seg000:2982 ; START OF FUNCTION CHUNK FOR KBD_ISR__sub_2930
seg000:2982
seg000:2982 KBD_SETUP_or_OUT__loc_2982:             ; CODE XREF: KBD_ISR__sub_2930+49j
seg000:2982                 call    KBD_0F90_BIT0__sub_2954
seg000:2985                 test    byte ptr ds:unk_1EF5, 10h
seg000:298A                 jnz     short GET_OUT__locret_299E ;
seg000:298A                                         ;
seg000:298C                 call    j_INIT_VARS__sub_27FF
seg000:298F                 or      byte ptr ds:aVolBip+7, 4 ; DS:0F90 - SET BIT 2
seg000:2994                 and     byte ptr ds:aVolBip+7, 0FDh ; 11111101 - CLEAR BIT 1
seg000:2999                 sti
seg000:299A                 call    SET_UP_PREPARE__sub_2C40
seg000:299D                 cli
seg000:299E
seg000:299E GET_OUT__locret_299E:                   ; CODE XREF: KBD_ISR__sub_2930+5Aj
seg000:299E                 retn
seg000:299E ; END OF FUNCTION CHUNK FOR KBD_ISR__sub_2930
seg000:299F
seg000:299F ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:299F
seg000:299F
seg000:299F KBD_CHK_MORE__sub_299F proc near        ; CODE XREF: KBD_ISR__sub_28EA:KBD_CHECK_OTHER_KEYS__loc_290Ap
seg000:299F                 cmp     al, 0BCh ; '+'
seg000:29A1                 jb      short KBD_MODIFIER__loc_29A6 ; lower 0xbc => modifier keys (CTRL, LOCK, SHIFT, COMPOSE)
seg000:29A1                                         ;
seg000:29A3                 jmp     KBD_QWERTY__loc_2A72 ; QWERTY keys (from key group 1),
seg000:29A3                                         ;
seg000:29A6 ; ---------------------------------------------------------------------------
seg000:29A6
seg000:29A6 KBD_MODIFIER__loc_29A6:                 ; CODE XREF: KBD_CHK_MORE__sub_299F+2j
seg000:29A6                 cmp     al, 0AAh ; '¬'  ; A7...AA : cursor keys
seg000:29A6                                         ;
seg000:29A8                 jbe     short KBD_CURSOR_ETC__loc_29D1 ; Treat CURSOR-, "Find" (6 keys above), NUM PAD + ALL FX KEYS
seg000:29A8                                         ;
seg000:29A8                                         ;
seg000:29AA                 cmp     al, 0B3h ; '¦'  ; response from keyboard : ALL_KEYS_UP = code 0xb3 (not found on LK201 keyboard matrix)
seg000:29AC                 jz      short ALL_KEYS_UP__0F90_b6__loc_29B1 ;
seg000:29AC                                         ;
seg000:29AE                 jmp     HANDLE_COMPOSE__loc_2A2A
seg000:29B1 ; ---------------------------------------------------------------------------
seg000:29B1
seg000:29B1 ALL_KEYS_UP__0F90_b6__loc_29B1:         ; CODE XREF: seg000:0027j
seg000:29B1                                         ; KBD_ISR__sub_28EA+2Bj ...
seg000:29B1                 push    es
seg000:29B2                 push    ds
seg000:29B3                 pop     es
seg000:29B4                 xor     al, al
seg000:29B6                 mov     di, 0F5Ah
seg000:29B9                 mov     cx, 0Ch
seg000:29BC                 cld
seg000:29BD                 rep stosb
seg000:29BF                 and     byte ptr ds:aVolBip+6, 8 ; DS:0F8F - preserve BIT 3
seg000:29C4                 mov     word ptr ds:aCarDeDsconnx+6, 1 ;  1 => DS:0F67
seg000:29CA                 and     byte ptr ds:aVolBip+7, 0BFh ; DS:0F90     10111111 - reset BIT 6 (no repeat)
seg000:29CF                 pop     es
seg000:29D0                 retn
seg000:29D1 ; ---------------------------------------------------------------------------
seg000:29D1
seg000:29D1 KBD_CURSOR_ETC__loc_29D1:               ; CODE XREF: KBD_CHK_MORE__sub_299F+9j
seg000:29D1                 cmp     al, 5Ah ; 'Z'   ; KEYCODE FOR 'Break' (F5)
seg000:29D1                                         ;
seg000:29D1                                         ; *****************************************
seg000:29D1                                         ; *** CURSOR, "Find" (6 keys above), NUM **
seg000:29D1                                         ; ***  PAD KEYS - AND ALL FUNCTION KEYS. **
seg000:29D1                                         ; *****************************************
seg000:29D3                 jz      short KBD_TO_2_byte_BUFFER__loc_29E3 ;
seg000:29D3                                         ;
seg000:29D5                 jb      short loc_29DA
seg000:29D7                 jmp     KBD_QWERTY__loc_2A72
seg000:29DA ; ---------------------------------------------------------------------------
seg000:29DA
seg000:29DA loc_29DA:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+36j
seg000:29DA                 cmp     al, 56h ; 'V'   ; KEYCODE FOR 'Hold Screen' (F1)
seg000:29DC                 jz      short KBD_switch_HOLD_SCREEN__LED__loc_29E7 ;
seg000:29DC                                         ;
seg000:29DE                 jb      short KBD_FINAL__loc_2A00
seg000:29E0                 call    TEST_COMPOSE_STATUS__sub_2AFD
seg000:29E3
seg000:29E3 KBD_TO_2_byte_BUFFER__loc_29E3:         ; CODE XREF: KBD_CHK_MORE__sub_299F+34j
seg000:29E3                 call    AL_to_KBD_BUFF_0F71_ff__sub_2AC7
seg000:29E6                 retn
seg000:29E7 ; ---------------------------------------------------------------------------
seg000:29E7
seg000:29E7 KBD_switch_HOLD_SCREEN__LED__loc_29E7:  ; CODE XREF: KBD_CHK_MORE__sub_299F+3Dj
seg000:29E7                 xor     byte ptr ds:aBaudEmpf_+4, 8 ; DS:0F2F
seg000:29EC                 test    byte ptr ds:aBaudEmpf_+4, 8 ; DS:0F2F
seg000:29F1                 mov     ah, 88h ; 'ê'   ;  0x8     /* Hold Screen LED */
seg000:29F3                 mov     al, 13h         ; LK_CMD_LEDS_ON          0x13    /* light LEDs */
seg000:29F5                 jnz     short HOLD_SCREEN_ON__loc_29F9 ;
seg000:29F5                                         ;
seg000:29F7                 mov     al, 11h         ; LK_CMD_LEDS_OFF         0x11    /* turn off LEDs */
seg000:29F9
seg000:29F9 HOLD_SCREEN_ON__loc_29F9:               ; CODE XREF: KBD_CHK_MORE__sub_299F+56j
seg000:29F9                 call    j_KBD_CMD_AL__sub_2846
seg000:29FC                 call    near ptr 8030h  ; F4030
seg000:29FC                                         ; SWITCH_HOLDSCREEN
seg000:29FF                 retn
seg000:2A00 ; ---------------------------------------------------------------------------
seg000:2A00
seg000:2A00 KBD_FINAL__loc_2A00:                    ; CODE XREF: KBD_CHK_MORE__sub_299F+3Fj
seg000:2A00                 cmp     al, 3Eh ; '>'   ; 0x3e    /* keyboard self test failure */
seg000:2A02                 jz      short KBD_FAIL__loc_2A08
seg000:2A04                 cmp     al, 3Dh ; '='   ; 0x3d    /* stuck key during the test */
seg000:2A06                 jnz     short NO_STUCK_KEY__loc_2A14
seg000:2A08
seg000:2A08 KBD_FAIL__loc_2A08:                     ; CODE XREF: KBD_CHK_MORE__sub_299F+63j
seg000:2A08                 or      byte ptr ds:loc_1FF9, 40h
seg000:2A0D                 call    KBD_DIAG_n_ERROR13__sub_2B06
seg000:2A10                 call    near ptr 8048h  ; F4048
seg000:2A10                                         ; sub_36DC in BOOT ROM
seg000:2A13                 retn
seg000:2A14 ; ---------------------------------------------------------------------------
seg000:2A14
seg000:2A14 NO_STUCK_KEY__loc_2A14:                 ; CODE XREF: KBD_CHK_MORE__sub_299F+67j
seg000:2A14                 cmp     byte ptr ds:aLautstTast_klick+1, 1 ; DS:0F93
seg000:2A19                 jb      short loc_2A22  ;
seg000:2A19                                         ;
seg000:2A1B                 ja      short loc_2A25  ;
seg000:2A1B                                         ;
seg000:2A1D                 mov     byte ptr ds:aLautstTast_klick+2, al ; DS:0F94
seg000:2A20                 jmp     short loc_2A25
seg000:2A22 ; ---------------------------------------------------------------------------
seg000:2A22
seg000:2A22 loc_2A22:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+7Aj
seg000:2A22                 mov     byte ptr ds:loc_1FFB, al
seg000:2A25
seg000:2A25 loc_2A25:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+7Cj
seg000:2A25                                         ; KBD_CHK_MORE__sub_299F+81j
seg000:2A25                 inc     byte ptr ds:aLautstTast_klick+1 ; DS:0F93
seg000:2A29                 retn
seg000:2A2A ; ---------------------------------------------------------------------------
seg000:2A2A
seg000:2A2A HANDLE_COMPOSE__loc_2A2A:               ; CODE XREF: KBD_CHK_MORE__sub_299F+Fj
seg000:2A2A                 ja      short loc_2A6A
seg000:2A2C                 cmp     al, 0B1h ; '¦'  ; COMPOSE KEY ?            0xb1
seg000:2A2E                 jnz     short LOCK_LED_OFF__loc_2A37 ;
seg000:2A2E                                         ;
seg000:2A30                 call    TEST_COMPOSE_STATUS__sub_2AFD
seg000:2A33                 call    AL_to_KBD_BUFF_0F71_ff__sub_2AC7
seg000:2A36                 retn
seg000:2A37 ; ---------------------------------------------------------------------------
seg000:2A37
seg000:2A37 LOCK_LED_OFF__loc_2A37:                 ; CODE XREF: KBD_CHK_MORE__sub_299F+8Fj
seg000:2A37                 mov     bx, cs:0A3AFh
seg000:2A3C                 xlat    byte ptr cs:[bx]
seg000:2A3E                 test    byte ptr ds:aVolBip+6, al ; DS:0F8F
seg000:2A42                 jz      short LOCK_LED_ON__loc_2A58 ;
seg000:2A42                                         ;
seg000:2A44                 test    al, 8
seg000:2A46                 jz      short loc_2A51  ;
seg000:2A46                                         ;
seg000:2A48                 push    ax
seg000:2A49                 mov     al, 11h         ; 0x11    /* turn off LED */
seg000:2A4B                 mov     ah, 84h ; 'ä'
seg000:2A4D                 call    j_KBD_CMD_AL__sub_2846
seg000:2A50                 pop     ax
seg000:2A51
seg000:2A51 loc_2A51:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+A7j
seg000:2A51                 not     al
seg000:2A53                 and     byte ptr ds:aVolBip+6, al ; DS:0F8F
seg000:2A57                 retn
seg000:2A58 ; ---------------------------------------------------------------------------
seg000:2A58
seg000:2A58 LOCK_LED_ON__loc_2A58:                  ; CODE XREF: KBD_CHK_MORE__sub_299F+A3j
seg000:2A58                 test    al, 8
seg000:2A5A                 jz      short loc_2A65  ;
seg000:2A5A                                         ;
seg000:2A5C                 push    ax
seg000:2A5D                 mov     al, 13h         ; 0x13    /* light LED */
seg000:2A5F                 mov     ah, 84h ; 'ä'
seg000:2A61                 call    j_KBD_CMD_AL__sub_2846
seg000:2A64                 pop     ax
seg000:2A65
seg000:2A65 loc_2A65:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+BBj
seg000:2A65                 or      byte ptr ds:aVolBip+6, al
seg000:2A69                 retn
seg000:2A6A ; ---------------------------------------------------------------------------
seg000:2A6A
seg000:2A6A loc_2A6A:                               ; CODE XREF: KBD_CHK_MORE__sub_299F:HANDLE_COMPOSE__loc_2A2Aj
seg000:2A6A                 cmp     al, 0B6h ; 'Â'
seg000:2A6C                 jnz     short locret_2A71 ;
seg000:2A6C                                         ;
seg000:2A6E                 call    near ptr 8048h  ; F4048
seg000:2A6E                                         ; sub_36DC in BOOT ROM
seg000:2A71
seg000:2A71 locret_2A71:                            ; CODE XREF: KBD_CHK_MORE__sub_299F+CDj
seg000:2A71                 retn
seg000:2A72 ; ---------------------------------------------------------------------------
seg000:2A72
seg000:2A72 KBD_QWERTY__loc_2A72:                   ; CODE XREF: KBD_CHK_MORE__sub_299F+4j
seg000:2A72                                         ; KBD_CHK_MORE__sub_299F+38j
seg000:2A72                 call    TEST_COMPOSE_STATUS__sub_2AFD ;
seg000:2A72                                         ;
seg000:2A72                                         ; Routine deals with QWERTY keys (from key group 1),
seg000:2A72                                         ; except modifier keys (CTRL, LOCK, SHIFT, COMPOSE)
seg000:2A75                 mov     di, 0F5Ah
seg000:2A78                 mov     cx, word ptr ds:aCarDeDsconnx+6 ; DS:0F67
seg000:2A7C                 cld
seg000:2A7D                 repne scasb
seg000:2A7F                 jnz     short loc_2AAA  ;
seg000:2A7F                                         ;
seg000:2A81                 mov     si, di
seg000:2A83                 dec     di
seg000:2A84                 inc     cx
seg000:2A85                 cld
seg000:2A86                 rep movsb
seg000:2A88                 dec     word ptr ds:aCarDeDsconnx+6 ; DS:0F67
seg000:2A8C                 mov     al, byte ptr ds:aCharUse+4 ; DS:0F5B
seg000:2A8F
seg000:2A8F loc_2A8F:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+125j
seg000:2A8F                 cmp     word ptr ds:aCarDeDsconnx+6, 2 ; DS:0F67
seg000:2A94                 jnz     short INVALID__loc_2AA4 ;
seg000:2A94                                         ;
seg000:2A96                 mov     byte ptr ds:aCarDeDsconnx+9, al ; DS:0F6A  REPEAT CHARACTER (?)
seg000:2A96                                         ; (store low byte for later use,
seg000:2A96                                         ;  see the IRQ routine @ 35CC in BOOT ROM)
seg000:2A96                                         ;
seg000:2A99                 mov     byte ptr ds:aCarDeDsconnx+8, 1Eh ; DS:0F69 (bit value 11110)
seg000:2A9E                 or      byte ptr ds:aVolBip+7, 40h ; DS:0F90 - SET BIT 6 (repeat flag ?)
seg000:2AA3                 retn
seg000:2AA4 ; ---------------------------------------------------------------------------
seg000:2AA4
seg000:2AA4 INVALID__loc_2AA4:                      ; CODE XREF: KBD_CHK_MORE__sub_299F+F5j
seg000:2AA4                                         ; KBD_CHK_MORE__sub_299F+114j
seg000:2AA4                 and     byte ptr ds:aVolBip+7, 0BFh ; DS:0F90 - reset BIT 6 (= no repeat)
seg000:2AA9                 retn
seg000:2AAA ; ---------------------------------------------------------------------------
seg000:2AAA
seg000:2AAA loc_2AAA:                               ; CODE XREF: KBD_CHK_MORE__sub_299F+E0j
seg000:2AAA                 cmp     al, 0FEh ; '¦'
seg000:2AAC                 jnb     short GET_OUT___locret_2AC6 ;
seg000:2AAC                                         ;
seg000:2AAE                 cmp     word ptr ds:aCarDeDsconnx+6, 9 ; DS:0F67
seg000:2AB3                 jnb     short INVALID__loc_2AA4 ;
seg000:2AB3                                         ;
seg000:2AB5                 mov     di, word ptr ds:aCarDeDsconnx+6 ; DS:0F67
seg000:2AB9                 mov     [di+0F5Ah], al
seg000:2ABD                 inc     word ptr ds:aCarDeDsconnx+6 ; DS:0F67
seg000:2AC1                 call    AL_to_KBD_BUFF_0F71_ff__sub_2AC7
seg000:2AC4                 jmp     short loc_2A8F
seg000:2AC6 ; ---------------------------------------------------------------------------
seg000:2AC6
seg000:2AC6 GET_OUT___locret_2AC6:                  ; CODE XREF: KBD_CHK_MORE__sub_299F+10Dj
seg000:2AC6                 retn
seg000:2AC6 KBD_CHK_MORE__sub_299F endp
seg000:2AC6
seg000:2AC7
seg000:2AC7 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2AC7
seg000:2AC7
seg000:2AC7 AL_to_KBD_BUFF_0F71_ff__sub_2AC7 proc near ; CODE XREF: seg000:002Dj
seg000:2AC7                                         ; KBD_CHK_MORE__sub_299F:KBD_TO_2_byte_BUFFER__loc_29E3p ...
seg000:2AC7                 pushf                   ; Move value from AL (and AH = value from EEF8F)
seg000:2AC7                                         ;  to (2-BYTE) KEYBOARD BUFFER
seg000:2AC7                                         ;  ranging from 0f71 - 0f8d.
seg000:2AC7                                         ;
seg000:2AC7                                         ;  EEF6C = 0e (=> empty)
seg000:2AC7                                         ;  EEF6C = 00 (=> FULL)
seg000:2AC7                                         ;
seg000:2AC7                                         ; Rings BELL and lights WAIT LED (if buffer full).
seg000:2AC8                 cli
seg000:2AC9                 mov     ah, byte ptr ds:aVolBip+6 ; DS:0F8F
seg000:2ACD                 mov     bx, word ptr ds:aCarDeDsconnx+0Eh ; DS:0F6F
seg000:2ACD                                         ;
seg000:2AD1                 cmp     byte ptr ds:aCarDeDsconnx+0Bh, 0 ; DS:0F6C
seg000:2AD6                 jnz     short KBD_BUFFER_NOT_FULL__loc_2AE5 ;
seg000:2AD6                                         ;
seg000:2AD8                 mov     ax, 8113h       ; 0x13    /* light WAIT LED */
seg000:2ADB                 call    j_KBD_CMD_AL__sub_2846
seg000:2ADE                 mov     al, 0A7h ; 'º'  ;  0xa7    /* emit a bell */
seg000:2AE0                 call    j_KBD_CMD_AL__sub_2846
seg000:2AE3                 popf
seg000:2AE4                 retn
seg000:2AE5 ; ---------------------------------------------------------------------------
seg000:2AE5
seg000:2AE5 KBD_BUFFER_NOT_FULL__loc_2AE5:          ; CODE XREF: AL_to_KBD_BUFF_0F71_ff__sub_2AC7+Fj
seg000:2AE5                 dec     byte ptr ds:aCarDeDsconnx+0Bh ; DS:0F6C
seg000:2AE9                 mov     [bx], ax
seg000:2AEB                 add     bx, 2
seg000:2AEE                 cmp     bx, 0F8Fh
seg000:2AF2                 jb      short loc_2AF7  ;
seg000:2AF2                                         ;
seg000:2AF4                 mov     bx, 0F71h
seg000:2AF7
seg000:2AF7 loc_2AF7:                               ; CODE XREF: AL_to_KBD_BUFF_0F71_ff__sub_2AC7+2Bj
seg000:2AF7                 mov     word ptr ds:aCarDeDsconnx+0Eh, bx ; DS:0F6F
seg000:2AFB                 popf
seg000:2AFC                 retn
seg000:2AFC AL_to_KBD_BUFF_0F71_ff__sub_2AC7 endp
seg000:2AFC
seg000:2AFD
seg000:2AFD ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2AFD
seg000:2AFD
seg000:2AFD TEST_COMPOSE_STATUS__sub_2AFD proc near ; CODE XREF: KBD_CHK_MORE__sub_299F+41p
seg000:2AFD                                         ; KBD_CHK_MORE__sub_299F+91p ...
seg000:2AFD                 test    byte ptr ds:aVolBip+7, 80h ; DS:0F90 - IF BIT 7 SET => POP AX (last key?)
seg000:2B02                 jz      short locret_2B05 ;
seg000:2B02                                         ;
seg000:2B04                 pop     ax
seg000:2B05
seg000:2B05 locret_2B05:                            ; CODE XREF: TEST_COMPOSE_STATUS__sub_2AFD+5j
seg000:2B05                 retn
seg000:2B05 TEST_COMPOSE_STATUS__sub_2AFD endp ; sp =  2
seg000:2B05
seg000:2B06
seg000:2B06 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2B06
seg000:2B06
seg000:2B06 KBD_DIAG_n_ERROR13__sub_2B06 proc near  ; CODE XREF: seg000:0030j
seg000:2B06                                         ; KBD_CHK_MORE__sub_299F+6Ep
seg000:2B06                 mov     dl, 2Ch ; ','
seg000:2B08                 test    byte ptr ds:loc_1FF9, 10h
seg000:2B0D                 jz      short loc_2B23  ;
seg000:2B0D                                         ;
seg000:2B0F                 mov     ax, 49Fh
seg000:2B12                 call    near ptr 800Ch  ; F400C
seg000:2B12                                         ; SET_DIAG_LEDs : controls the 7 LEDs at back of computer.
seg000:2B15                 sti
seg000:2B16                 mov     dl, 2Ah ; '*'
seg000:2B18                 test    byte ptr ds:loc_1FF9+1, 80h
seg000:2B1D                 jnz     short HANG__loc_2B3B ;
seg000:2B1D                                         ;
seg000:2B1F                 mov     dl, 0Ah
seg000:2B21                 jmp     short HANG__loc_2B3B
seg000:2B23 ; ---------------------------------------------------------------------------
seg000:2B23
seg000:2B23 loc_2B23:                               ; CODE XREF: KBD_DIAG_n_ERROR13__sub_2B06+7j
seg000:2B23                 test    byte ptr ds:loc_1FF9, 80h
seg000:2B28                 jnz     short LUCKY__locret_2B46 ;
seg000:2B28                                         ;
seg000:2B2A                 or      byte ptr ds:loc_1FF9, 80h
seg000:2B2F                 call    near ptr 801Eh  ; F401E
seg000:2B2F                                         ; ROM_DisableCursor    0x08
seg000:2B2F                                         ;
seg000:2B32                 mov     word ptr ds:aProtocole, 101h ; "=Protocole"
seg000:2B38                 call    near ptr 8021h  ; F4021
seg000:2B38                                         ; ROM_EnableCursor     0x0a
seg000:2B3B
seg000:2B3B HANG__loc_2B3B:                         ; CODE XREF: KBD_DIAG_n_ERROR13__sub_2B06+17j
seg000:2B3B                                         ; KBD_DIAG_n_ERROR13__sub_2B06+1Bj
seg000:2B3B                 mov     cx, 0F400h
seg000:2B3E                 mov     si, 820Eh       ; 8306 : "13 - "
seg000:2B3E                                         ; 8a6c : "Keyboard"
seg000:2B41                 push    ds
seg000:2B42                 call    near ptr 8009h  ; F4009
seg000:2B42                                         ; SYS_MESSAGE_SIT_n_WAIT__sub_9
seg000:2B45                 pop     ds
seg000:2B46
seg000:2B46 LUCKY__locret_2B46:                     ; CODE XREF: KBD_DIAG_n_ERROR13__sub_2B06+22j
seg000:2B46                 retn
seg000:2B46 KBD_DIAG_n_ERROR13__sub_2B06 endp
seg000:2B46
seg000:2B47
seg000:2B47 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2B47
seg000:2B47
seg000:2B47 sub_2B47        proc near               ; CODE XREF: ConsoleLev2Stat__sub_36E3+A1p
seg000:2B47
seg000:2B47 ; FUNCTION CHUNK AT seg000:2BEE SIZE 00000034 BYTES
seg000:2B47
seg000:2B47                 test    ah, 1
seg000:2B4A                 jnz     short SPECIAL_KEY__loc_2B5C ;
seg000:2B4A                                         ;
seg000:2B4C                 cmp     al, 0Dh
seg000:2B4E                 jnz     short loc_2B54  ;
seg000:2B4E                                         ;
seg000:2B50                 call    sub_2BCA
seg000:2B53                 retn
seg000:2B54 ; ---------------------------------------------------------------------------
seg000:2B54
seg000:2B54 loc_2B54:                               ; CODE XREF: sub_2B47+7j
seg000:2B54                 mov     cl, 1
seg000:2B56                 mov     ch, al
seg000:2B58                 call    sub_2C37
seg000:2B5B                 retn
seg000:2B5C ; ---------------------------------------------------------------------------
seg000:2B5C
seg000:2B5C SPECIAL_KEY__loc_2B5C:                  ; CODE XREF: sub_2B47+3j
seg000:2B5C                 cmp     al, 0E7h ; 'þ'
seg000:2B5E                 jz      short KBD_BELL__loc_2B94 ;
seg000:2B5E                                         ;
seg000:2B60                 call    sub_2C22
seg000:2B63                 cmp     al, 0B1h ; '¦'  ; COMPOSE (??) B1
seg000:2B65                 jnb     short loc_2BBD  ;
seg000:2B65                                         ;
seg000:2B67                 cmp     al, 0A9h ; '®'  ; CURSOR KEYS (??)  AA up; A9 down; A7 left; A8 right.
seg000:2B69                 jnb     short loc_2B9E  ;
seg000:2B69                                         ;
seg000:2B6B                 test    word ptr ds:loc_1FFB+3, 1 ; DS:1FFE
seg000:2B71                 jnz     short KBD_BELL__loc_2B94 ;
seg000:2B71                                         ;
seg000:2B73                 cmp     al, 9Dh ; 'Ø'
seg000:2B75                 mov     cl, 5
seg000:2B77                 jb      short loc_2B7B  ;
seg000:2B77                                         ;
seg000:2B79                 mov     cl, 4
seg000:2B7B
seg000:2B7B loc_2B7B:                               ; CODE XREF: sub_2B47+30j
seg000:2B7B                 cmp     al, 83h ; 'â'   ; FN KEYS (??)  83 = F20.
seg000:2B7B                                         ; Others >= keycode 56 (F1).
seg000:2B7D                 jnb     short loc_2B81  ;
seg000:2B7D                                         ;
seg000:2B7F                 sub     al, 1
seg000:2B81
seg000:2B81 loc_2B81:                               ; CODE XREF: sub_2B47+36j
seg000:2B81                 mov     si, cs:0A759h
seg000:2B86                 xor     ah, ah
seg000:2B88                 add     si, ax
seg000:2B8A                 mov     si, cs:[si]
seg000:2B8D                 call    sub_2C2B
seg000:2B90                 call    sub_2C37
seg000:2B93                 retn
seg000:2B94 ; ---------------------------------------------------------------------------
seg000:2B94
seg000:2B94 KBD_BELL__loc_2B94:                     ; CODE XREF: sub_2B47+17j
seg000:2B94                                         ; sub_2B47+2Aj
seg000:2B94                 xor     al, al
seg000:2B96                 mov     [bx], al
seg000:2B98                 mov     al, 0A7h ; 'º'  ; KBD_COMMAND ($a7 is BELL)
seg000:2B9A                 call    j_KBD_CMD_AL__sub_2846
seg000:2B9D                 retn
seg000:2B9E ; ---------------------------------------------------------------------------
seg000:2B9E
seg000:2B9E loc_2B9E:                               ; CODE XREF: sub_2B47+22j
seg000:2B9E                 test    byte ptr es:TXT_GRAFIX_8084+4, 1 ; ES:88 - 0x88 :EMULATION (0=VT52 1=ANSI)
seg000:2BA4                 jnz     short loc_2BAA  ;
seg000:2BA4                                         ;
seg000:2BA6                 mov     cl, 2
seg000:2BA8                 jmp     short loc_2BB9
seg000:2BAA ; ---------------------------------------------------------------------------
seg000:2BAA
seg000:2BAA loc_2BAA:                               ; CODE XREF: sub_2B47+5Dj
seg000:2BAA                 test    byte ptr ds:aProtocole+3, 2 ; DS:0F44
seg000:2BAF                 mov     dh, dl
seg000:2BB1                 mov     dl, 4Fh ; 'O'
seg000:2BB3                 jnz     short loc_2BB7  ;
seg000:2BB3                                         ;
seg000:2BB5                 mov     dl, 5Bh ; '['
seg000:2BB7
seg000:2BB7 loc_2BB7:                               ; CODE XREF: sub_2B47+6Cj
seg000:2BB7                 mov     cl, 3
seg000:2BB9
seg000:2BB9 loc_2BB9:                               ; CODE XREF: sub_2B47+61j
seg000:2BB9                 call    sub_2C37
seg000:2BBC                 retn
seg000:2BBD ; ---------------------------------------------------------------------------
seg000:2BBD
seg000:2BBD loc_2BBD:                               ; CODE XREF: sub_2B47+1Ej
seg000:2BBD                 cmp     al, 0D8h ; 'Ï'
seg000:2BBF                 ja      short loc_2C0E
seg000:2BC1                 jb      short loc_2BEE
seg000:2BC3                 test    byte ptr ds:loc_1FF9, 1
seg000:2BC8                 jnz     short loc_2BDE
seg000:2BC8 sub_2B47        endp
seg000:2BC8
seg000:2BCA
seg000:2BCA ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2BCA
seg000:2BCA
seg000:2BCA sub_2BCA        proc near               ; CODE XREF: sub_2B47+9p
seg000:2BCA                 mov     ch, 0Dh
seg000:2BCC                 test    byte ptr es:TXT_GRAFIX_8084+0Ah, 1 ; ES:8E - 0x8e NEW LINE MODE (0=LF 1=NL)
seg000:2BD2                 jnz     short loc_2BD8  ;
seg000:2BD2                                         ;
seg000:2BD4                 mov     cl, 1
seg000:2BD6                 jmp     short loc_2BEA
seg000:2BD8 ; ---------------------------------------------------------------------------
seg000:2BD8
seg000:2BD8 loc_2BD8:                               ; CODE XREF: sub_2BCA+8j
seg000:2BD8                 mov     dl, 0Ah
seg000:2BDA                 mov     cl, 2
seg000:2BDC                 jmp     short loc_2BEA
seg000:2BDE ; ---------------------------------------------------------------------------
seg000:2BDE
seg000:2BDE loc_2BDE:                               ; CODE XREF: sub_2B47+81j
seg000:2BDE                 mov     cl, 3
seg000:2BE0                 test    byte ptr es:TXT_GRAFIX_8084+4, 1 ; ES:88 :EMULATION (0=VT52 1=ANSI)
seg000:2BE6                 jnz     short loc_2BEA  ;
seg000:2BE6                                         ;
seg000:2BE8                 mov     dl, 3Fh ; '?'
seg000:2BEA
seg000:2BEA loc_2BEA:                               ; CODE XREF: sub_2BCA+Cj
seg000:2BEA                                         ; sub_2BCA+12j ...
seg000:2BEA                 call    sub_2C37
seg000:2BED                 retn
seg000:2BED sub_2BCA        endp
seg000:2BED
seg000:2BEE ; ---------------------------------------------------------------------------
seg000:2BEE ; START OF FUNCTION CHUNK FOR sub_2B47
seg000:2BEE
seg000:2BEE loc_2BEE:                               ; CODE XREF: sub_2B47+7Aj
seg000:2BEE                 test    byte ptr ds:loc_1FF9, 1
seg000:2BF3                 jnz     short loc_2BFE  ;
seg000:2BF3                                         ;
seg000:2BF5                 mov     ch, dh
seg000:2BF7                 and     ch, 3Fh
seg000:2BFA                 mov     cl, 1
seg000:2BFC                 jmp     short loc_2C0A
seg000:2BFE ; ---------------------------------------------------------------------------
seg000:2BFE
seg000:2BFE loc_2BFE:                               ; CODE XREF: sub_2B47+ACj
seg000:2BFE                 test    byte ptr es:TXT_GRAFIX_8084+4, 1 ; ES:88 :EMULATION (0=VT52 1=ANSI)
seg000:2C04                 jnz     short loc_2C08
seg000:2C06                 mov     dl, 3Fh ; '?'
seg000:2C08
seg000:2C08 loc_2C08:                               ; CODE XREF: sub_2B47+BDj
seg000:2C08                 mov     cl, 3
seg000:2C0A
seg000:2C0A loc_2C0A:                               ; CODE XREF: sub_2B47+B5j
seg000:2C0A                 call    sub_2C37
seg000:2C0D                 retn
seg000:2C0E ; ---------------------------------------------------------------------------
seg000:2C0E
seg000:2C0E loc_2C0E:                               ; CODE XREF: sub_2B47+78j
seg000:2C0E                 test    byte ptr es:TXT_GRAFIX_8084+4, 1 ; ES:88 :EMULATION (0=VT52 1=ANSI)
seg000:2C14                 jnz     short loc_2C1C
seg000:2C16                 mov     dl, dh
seg000:2C18                 mov     cl, 2
seg000:2C1A                 jmp     short loc_2C1E
seg000:2C1C ; ---------------------------------------------------------------------------
seg000:2C1C
seg000:2C1C loc_2C1C:                               ; CODE XREF: sub_2B47+CDj
seg000:2C1C                 mov     cl, 3
seg000:2C1E
seg000:2C1E loc_2C1E:                               ; CODE XREF: sub_2B47+D3j
seg000:2C1E                 call    sub_2C37
seg000:2C21                 retn
seg000:2C21 ; END OF FUNCTION CHUNK FOR sub_2B47
seg000:2C22
seg000:2C22 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2C22
seg000:2C22
seg000:2C22 sub_2C22        proc near               ; CODE XREF: sub_2B47+19p
seg000:2C22                 mov     si, cs:0A759h
seg000:2C27                 xor     ah, ah
seg000:2C29                 add     si, ax
seg000:2C29 sub_2C22        endp
seg000:2C29
seg000:2C2B
seg000:2C2B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2C2B
seg000:2C2B
seg000:2C2B sub_2C2B        proc near               ; CODE XREF: sub_2B47+46p
seg000:2C2B                 mov     ch, cs:[si]
seg000:2C2E                 mov     dx, cs:[si+1]
seg000:2C32                 mov     di, cs:[si+3]
seg000:2C36                 retn
seg000:2C36 sub_2C2B        endp
seg000:2C36
seg000:2C37
seg000:2C37 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2C37
seg000:2C37
seg000:2C37 sub_2C37        proc near               ; CODE XREF: sub_2B47+11p
seg000:2C37                                         ; sub_2B47+49p ...
seg000:2C37                 mov     [bx], cx
seg000:2C39                 mov     [bx+2], dx
seg000:2C3C                 mov     [bx+4], di
seg000:2C3F                 retn
seg000:2C3F sub_2C37        endp
seg000:2C3F
seg000:2C40
seg000:2C40 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2C40
seg000:2C40
seg000:2C40 SET_UP_PREPARE__sub_2C40 proc near      ; CODE XREF: KBD_ISR__sub_2930+6Ap
seg000:2C40                 push    es
seg000:2C41                 mov     ax, 0ED00h
seg000:2C44                 mov     es, ax
seg000:2C46                 assume es:nothing
seg000:2C46                 call    KBD_CLR_WAIT__sub_2C69 ;
seg000:2C46                                         ;
seg000:2C49                 mov     ax, word ptr ds:aBildlauf ; DS:1004 => EF004 (attribute RAM + 4)
seg000:2C4C                 mov     word ptr ds:aAutoBoot+1, ax ; DS:0EBF => EEebf (save attribute)
seg000:2C4C                                         ;
seg000:2C4F                 mov     word ptr ds:loc_3+1, 6 ; ee004 <= 0x06 (disable video)
seg000:2C4F                                         ;
seg000:2C55                 call    SET_UP_MAIN__sub_2CB2 ; display SETUP layout @ EED41 (+ change pointer ee004 / eee005 to 41|0d )
seg000:2C55                                         ;
seg000:2C58                 mov     ax, word ptr ds:aAutoBoot+1 ; DS:0EBF (get saved attribute)
seg000:2C5B                 mov     word ptr ds:aBildlauf, ax ; DS:1004 (poke attribute => EF004)
seg000:2C5B                                         ;
seg000:2C5E                 mov     ax, word ptr ds:aAutoStartVon+0Ah ; DS:0EF4 = EEEF4 (list of pointers beginning with line 1)
seg000:2C61                 and     ah, 0Fh
seg000:2C64                 mov     word ptr ds:loc_3+1, ax ; restore ee004 / ee005 (video RAM)
seg000:2C67                 pop     es
seg000:2C68                 assume es:nothing
seg000:2C68                 retn
seg000:2C68 SET_UP_PREPARE__sub_2C40 endp
seg000:2C68
seg000:2C69
seg000:2C69 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2C69
seg000:2C69
seg000:2C69 KBD_CLR_WAIT__sub_2C69 proc near        ; CODE XREF: SET_UP_PREPARE__sub_2C40+6p
seg000:2C69                 sub     ax, ax
seg000:2C6B                 mov     ds:word_1EC8, ax
seg000:2C6E                 mov     byte ptr ds:unk_1EF9, al
seg000:2C71                 or      word ptr ds:loc_1FFB+3, 4 ; DS:1FFE
seg000:2C77                 or      byte ptr ds:unk_1EF8, 40h
seg000:2C7C                 and     byte ptr ds:aVolBip+7, 7Fh ; DS:0F90 - CLEAR BIT 7
seg000:2C81                 mov     ax, 8111h       ; ; clear WAIT led on keyboard?
seg000:2C84                 jmp     j_KBD_CMD_AL__sub_2846
seg000:2C84 KBD_CLR_WAIT__sub_2C69 endp
seg000:2C84
seg000:2C84 ; ---------------------------------------------------------------------------
seg000:2C87                 db  3Ch ; <
seg000:2C88                 db    0
seg000:2C89                 db  42h ; B
seg000:2C8A                 db    0
seg000:2C8B                 db  3Fh ; ?
seg000:2C8C                 db    0
seg000:2C8D ; ---------------------------------------------------------------------------
seg000:2C8D
seg000:2C8D LEAVE_SET_UP_PROPERLY__loc_2C8D:        ; CODE XREF: seg000:31E3j
seg000:2C8D                 mov     al, byte ptr ds:unk_1EF9
seg000:2C90                 mov     cx, 3
seg000:2C93
seg000:2C93 loc_2C93:                               ; CODE XREF: seg000:loc_2CA4j
seg000:2C93                 sar     al, 1
seg000:2C95                 jnb     short loc_2CA4  ;
seg000:2C95                                         ;
seg000:2C97                 mov     bx, cx
seg000:2C99                 shl     bx, 1
seg000:2C9B                 push    ax
seg000:2C9C                 push    cx
seg000:2C9D                 call    word ptr cs:[bx-537Bh]
seg000:2CA2                 pop     cx
seg000:2CA3                 pop     ax
seg000:2CA4
seg000:2CA4 loc_2CA4:                               ; CODE XREF: seg000:2C95j
seg000:2CA4                 loop    loc_2C93
seg000:2CA6                 and     word ptr ds:loc_1FFB+3, 0FFFBh ; DS:1FFE
seg000:2CAC                 and     byte ptr ds:aVolBip+7, 0FBh ; DS:0F90 => EEF90 (mask value 11111011) = MASK BIT 2
seg000:2CB1                 retn
seg000:2CB2
seg000:2CB2 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2CB2
seg000:2CB2
seg000:2CB2 SET_UP_MAIN__sub_2CB2 proc near         ; CODE XREF: SET_UP_PREPARE__sub_2C40+15p
seg000:2CB2                                         ; seg000:2DF8j
seg000:2CB2                 clc
seg000:2CB3                 call    SET_UP_UPPER_DISPLAY__sub_3067
seg000:2CB6                 mov     word ptr ds:unk_1EDB, bx
seg000:2CBA                 mov     word ptr ds:unk_1EDD, di
seg000:2CBE
seg000:2CBE SET_UP__loc_2CBE:                       ; CODE XREF: seg000:2E60j
seg000:2CBE                                         ; seg000:2EABj ...
seg000:2CBE                 call    SET_UP_LOWER_DISPLAY__sub_304D
seg000:2CC1                 call    SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603
seg000:2CC4                 call    SET_UP__sub_3118
seg000:2CC7                 call    SET_UP_CHANGE_HALFBYTE__sub_3138
seg000:2CCA
seg000:2CCA SET_UP__loc_2CCA:                       ; CODE XREF: seg000:2DB6j
seg000:2CCA                                         ; seg000:2E19j ...
seg000:2CCA                 call    SET_UP__sub_2CDA
seg000:2CCD                 jmp     dx
seg000:2CCD SET_UP_MAIN__sub_2CB2 endp
seg000:2CCD
seg000:2CCF
seg000:2CCF ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2CCF
seg000:2CCF
seg000:2CCF GET_KEY__sub_2CCF proc near             ; CODE XREF: SET_UP__sub_2CDAp
seg000:2CCF                                         ; seg000:2E33p ...
seg000:2CCF                 push    dx
seg000:2CD0
seg000:2CD0 WAIT_FOR_KEY__loc_2CD0:                 ; CODE XREF: GET_KEY__sub_2CCF+4j
seg000:2CD0                 call    j_ConsoleLev1In__sub_1F6F
seg000:2CD3                 jnb     short WAIT_FOR_KEY__loc_2CD0
seg000:2CD5                 pop     dx
seg000:2CD6                 and     ah, 7
seg000:2CD9                 retn
seg000:2CD9 GET_KEY__sub_2CCF endp
seg000:2CD9
seg000:2CDA
seg000:2CDA ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2CDA
seg000:2CDA
seg000:2CDA SET_UP__sub_2CDA proc near              ; CODE XREF: SET_UP_MAIN__sub_2CB2:SET_UP__loc_2CCAp
seg000:2CDA                 call    GET_KEY__sub_2CCF
seg000:2CDD                 push    es
seg000:2CDE                 push    cs
seg000:2CDF                 pop     es
seg000:2CE0                 mov     di, 0AD13h
seg000:2CE3                 push    di
seg000:2CE4                 push    ax
seg000:2CE5                 sub     ax, ax
seg000:2CE7                 sub     dx, dx
seg000:2CE9                 inc     dx
seg000:2CEA                 call    SET_UP__sub_35A8
seg000:2CED                 pop     ax
seg000:2CEE                 call    sub_35D9
seg000:2CF1                 jb      short loc_2D07  ;
seg000:2CF1                                         ;
seg000:2CF3                 mov     dl, byte ptr ds:word_1EC8
seg000:2CF7                 inc     dx
seg000:2CF8                 inc     dx
seg000:2CF9                 push    ax
seg000:2CFA                 sub     ax, ax
seg000:2CFC                 call    SET_UP__sub_35A8
seg000:2CFF                 pop     ax
seg000:2D00                 call    sub_35D9
seg000:2D03                 jb      short loc_2D07  ;
seg000:2D03                                         ;
seg000:2D05                 inc     di
seg000:2D06                 inc     di
seg000:2D07
seg000:2D07 loc_2D07:                               ; CODE XREF: SET_UP__sub_2CDA+17j
seg000:2D07                                         ; SET_UP__sub_2CDA+29j
seg000:2D07                 pop     si
seg000:2D08                 sub     di, si
seg000:2D0A                 dec     di
seg000:2D0B                 dec     di
seg000:2D0C                 mov     dx, cs:[di-529Dh] ; see JUMP TABLE below!
seg000:2D11                 pop     es
seg000:2D12                 retn
seg000:2D12 SET_UP__sub_2CDA endp
seg000:2D12
seg000:2D12 ; ---------------------------------------------------------------------------
seg000:2D13                 db  81h ; ü             ; NO CODE.
seg000:2D14                 db    1
seg000:2D15                 db  81h ; ü
seg000:2D16                 db    5
seg000:2D17                 db  82h ; é
seg000:2D18                 db    1
seg000:2D19                 db  53h ; S
seg000:2D1A                 db    2
seg000:2D1B                 db  44h ; D
seg000:2D1C                 db    2
seg000:2D1D                 db  52h ; R
seg000:2D1E                 db    2
seg000:2D1F                 db  41h ; A
seg000:2D20                 db    2
seg000:2D21                 db 0A7h ; º
seg000:2D22                 db    1
seg000:2D23                 db 0A5h ; Ñ
seg000:2D24                 db    1
seg000:2D25                 db  4Ch ; L
seg000:2D26                 db    0
seg000:2D27                 db  4Ch ; L
seg000:2D28                 db    2
seg000:2D29                 db 0A9h ; ®
seg000:2D2A                 db    1
seg000:2D2B                 db 0ABh ; ½
seg000:2D2C                 db    1
seg000:2D2D                 db    0
seg000:2D2E                 db    0
seg000:2D2F                 db  54h ; T
seg000:2D30                 db    0
seg000:2D31                 db  54h ; T
seg000:2D32                 db    2
seg000:2D33                 db 0AFh ; »
seg000:2D34                 db    1
seg000:2D35                 db 0ADh ; ¡
seg000:2D36                 db    1
seg000:2D37                 db  0Dh
seg000:2D38                 db    0
seg000:2D39                 db    9
seg000:2D3A                 db    2
seg000:2D3B                 db    9
seg000:2D3C                 db    4
seg000:2D3D                 db  20h
seg000:2D3E                 db    0
seg000:2D3F                 db    9
seg000:2D40                 db    0
seg000:2D41                 db    0
seg000:2D42                 db    0
seg000:2D43                 db 0AFh ; »
seg000:2D44                 db    1
seg000:2D45                 db 0ADh ; ¡
seg000:2D46                 db    1
seg000:2D47                 db  0Dh
seg000:2D48                 db    0
seg000:2D49                 db  20h
seg000:2D4A                 db    0
seg000:2D4B                 db    0
seg000:2D4C                 db    0
seg000:2D4D                 db 0AFh ; »
seg000:2D4E                 db    1
seg000:2D4F                 db 0ADh ; ¡
seg000:2D50                 db    1
seg000:2D51                 db    0
seg000:2D52                 db    0
seg000:2D53                 db 0AFh ; »
seg000:2D54                 db    1
seg000:2D55                 db 0ADh ; ¡
seg000:2D56                 db    1
seg000:2D57                 db    0
seg000:2D58                 db    0
seg000:2D59                 db 0AFh ; »
seg000:2D5A                 db    1
seg000:2D5B                 db 0ADh ; ¡
seg000:2D5C                 db    1
seg000:2D5D                 db    0
seg000:2D5E                 db    0
seg000:2D5F                 db    0
seg000:2D60                 db    0
seg000:2D61                 db    0
seg000:2D62                 db    0
seg000:2D63                 dw 0AC8Dh               ; 40 entries used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2D63                                         ; -----------------------------------------------------------
seg000:2D63                                         ; <= LEAVE SETUP SCREEN / ROUTINE  - seg000:2C8D
seg000:2D63                                         ;
seg000:2D65                 dw 3                    ; <= SOFT REBOOT
seg000:2D67                 dw 0B16Eh               ; <= HELP = (DX= $b16e => JMP dx)
seg000:2D69                 dw 0ADB3h               ; seg000:2DB3
seg000:2D6B                 dw 0ADFBh               ; seg000:2DFB
seg000:2D6D                 dw 0ADB9h               ; seg000:2DB9
seg000:2D6F                 dw 0AE1Ch               ; seg000:2E1C
seg000:2D71                 dw 0AEAEh               ; seg000:2EAE
seg000:2D73                 dw 0AE9Dh               ; seg000:2E9D
seg000:2D75                 dw 0AE00h               ; seg000:2E00
seg000:2D77                 dw 0AE00h               ; seg000:2E00
seg000:2D79                 dw 0AEF7h               ; seg000:2EF7
seg000:2D7B                 dw 0AEEAh               ; seg000:2EEA
seg000:2D7D                 dw 0ACCAh               ; seg000:2CCA
seg000:2D7F                 dw 0AEF7h               ; seg000:2EF7
seg000:2D81                 dw 0AEF7h               ; seg000:2EF7
seg000:2D83                 dw 0B105h
seg000:2D85                 dw 0B0E9h
seg000:2D87                 dw 0B078h
seg000:2D89                 dw 0B0B5h
seg000:2D8B                 dw 0B0A4h
seg000:2D8D                 dw 0B0E9h
seg000:2D8F                 dw 0B086h
seg000:2D91                 dw 0ACCAh               ; seg000:2CCA
seg000:2D93                 dw 0B0FCh
seg000:2D95                 dw 0B0E4h
seg000:2D97                 dw 0B0DFh
seg000:2D99                 dw 0B0E4h
seg000:2D9B                 dw 0ACCAh               ; seg000:2CCA
seg000:2D9D                 dw 0B105h
seg000:2D9F                 dw 0B0E9h
seg000:2DA1                 dw 0ACCAh               ; seg000:2CCA
seg000:2DA3                 dw 0B105h
seg000:2DA5                 dw 0B0E9h
seg000:2DA7                 dw 0ACCAh               ; seg000:2CCA
seg000:2DA9                 dw 0B105h
seg000:2DAB                 dw 0B0E9h
seg000:2DAD                 dw 0ACCAh               ; seg000:2CCA
seg000:2DAF                 dw 0ACCAh               ; seg000:2CCA
seg000:2DB1                 dw 0ACCAh               ; seg000:2CCA
seg000:2DB3 ; ---------------------------------------------------------------------------
seg000:2DB3
seg000:2DB3 SET_UP_NVM_WRITE__2DB3:                 ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2DB3                 call    near ptr 806Ch  ; ------------------------------------------------
seg000:2DB3                                         ; F406C
seg000:2DB3                                         ; NVM_WRITABLE
seg000:2DB6                 jmp     SET_UP__loc_2CCA
seg000:2DB9 ; ---------------------------------------------------------------------------
seg000:2DB9
seg000:2DB9 SET_UP_NVM_DEFAULTS__2DB9:              ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2DB9                 call    near ptr 806Fh  ; ------------------------------------------------
seg000:2DB9                                         ; F406F
seg000:2DB9                                         ; NVM_WRITEPROTECT_READABLE
seg000:2DBC                 jnb     short loc_2DD9  ;
seg000:2DBC                                         ;
seg000:2DBE                 push    ds:word_1EC8
seg000:2DC2                 mov     byte ptr ds:word_1EC8, 8
seg000:2DC7                 call    SET_UP_LOWER_DISPLAY__sub_304D
seg000:2DCA                 mov     ch, 0FFh
seg000:2DCC
seg000:2DCC LOOP__loc_2DCC:                         ; CODE XREF: seg000:2DD0j
seg000:2DCC                 mul     cl
seg000:2DCE                 mul     cl
seg000:2DD0                 loop    LOOP__loc_2DCC
seg000:2DD2                 call    near ptr 807Eh  ; F407E
seg000:2DD2                                         ; NVM_DEFAULTS
seg000:2DD2                                         ;
seg000:2DD5                 pop     ds:word_1EC8
seg000:2DD9
seg000:2DD9 loc_2DD9:                               ; CODE XREF: seg000:2DBCj
seg000:2DD9                                         ; seg000:2DFEj
seg000:2DD9                 or      byte ptr ds:aBildlaufRate+5, 80h
seg000:2DDE                 mov     word ptr ds:loc_3+1, 6
seg000:2DE4                 call    sub_3143
seg000:2DE7                 call    SET_UP_INITVIDEO__sub_30CA ;  (+ internal housekeeping)...
seg000:2DEA                 call    ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A
seg000:2DED                 call    ENABLE_BELL_ES_A8__sub_2835
seg000:2DF0                 or      byte ptr ds:unk_1EF9, 6
seg000:2DF5                 call    SET_UP__sub_307E
seg000:2DF8                 jmp     SET_UP_MAIN__sub_2CB2
seg000:2DFB ; ---------------------------------------------------------------------------
seg000:2DFB
seg000:2DFB SET_UP_NVM_DEFAULTS2__2DFB:             ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2DFB                 call    near ptr 807Eh  ; ------------------------------------------------
seg000:2DFB                                         ; F407E
seg000:2DFB                                         ; NVM_DEFAULTS
seg000:2DFE                 jmp     short loc_2DD9
seg000:2E00 ; ---------------------------------------------------------------------------
seg000:2E00
seg000:2E00 SET_UP_SUB__2E00:                       ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2E00                 mov     si, 9Fh ; 'ƒ'   ; ------------------------------------------------
seg000:2E03                 not     byte ptr es:[si]
seg000:2E06                 and     byte ptr es:[si], 1
seg000:2E0A                 mov     dl, 0FEh ; '¦'
seg000:2E0C                 mov     di, word ptr ds:unk_1ED9
seg000:2E10                 mov     bx, word ptr ds:unk_1ED7
seg000:2E14                 sub     si, si
seg000:2E16                 call    SET_UP__sub_3215
seg000:2E19                 jmp     SET_UP__loc_2CCA
seg000:2E1C ; ---------------------------------------------------------------------------
seg000:2E1C
seg000:2E1C SET_UP_SUB:                             ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2E1C                 push    ds:word_1EC8    ; ------------------------------------------------
seg000:2E20                 mov     byte ptr ds:word_1EC8, 7
seg000:2E25                 call    SET_UP_LOWER_DISPLAY__sub_304D
seg000:2E28                 mov     di, ds:word_1EE3
seg000:2E2C                 mov     al, ds:byte_1ED5
seg000:2E2F                 mov     [di+1000h], al
seg000:2E33                 call    GET_KEY__sub_2CCF
seg000:2E36                 mov     dx, ax
seg000:2E38                 mov     cx, 14h
seg000:2E3B                 mov     bp, 0
seg000:2E3E                 mov     al, dl
seg000:2E40                 call    sub_2E63
seg000:2E43                 call    sub_2E7C
seg000:2E46
seg000:2E46 loc_2E46:                               ; CODE XREF: seg000:2E55j
seg000:2E46                 push    cx
seg000:2E47                 call    GET_KEY__sub_2CCF
seg000:2E4A                 pop     cx
seg000:2E4B                 cmp     al, dl
seg000:2E4D                 jz      short loc_2E57
seg000:2E4F                 call    sub_2E63
seg000:2E52                 call    sub_2E7C
seg000:2E55                 loop    loc_2E46
seg000:2E57
seg000:2E57 loc_2E57:                               ; CODE XREF: seg000:2E4Dj
seg000:2E57                 mov     al, dl
seg000:2E59                 call    sub_2E63
seg000:2E5C                 pop     ds:word_1EC8
seg000:2E60                 jmp     SET_UP__loc_2CBE
seg000:2E63
seg000:2E63 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2E63
seg000:2E63
seg000:2E63 sub_2E63        proc near               ; CODE XREF: seg000:2E40p
seg000:2E63                                         ; seg000:2E4Fp ...
seg000:2E63                 mov     si, bp
seg000:2E65                 shl     si, 1
seg000:2E67                 push    ax
seg000:2E68                 push    cx
seg000:2E69                 db      26h
seg000:2E69                 lea     si, [si+0AEh]
seg000:2E6E                 mov     es:[si], al
seg000:2E71                 mov     cl, 4
seg000:2E73                 shr     al, cl
seg000:2E75                 inc     si
seg000:2E76                 mov     es:[si], al
seg000:2E79                 pop     cx
seg000:2E7A                 pop     ax
seg000:2E7B                 retn
seg000:2E7B sub_2E63        endp
seg000:2E7B
seg000:2E7C
seg000:2E7C ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2E7C
seg000:2E7C
seg000:2E7C sub_2E7C        proc near               ; CODE XREF: seg000:2E43p
seg000:2E7C                                         ; seg000:2E52p
seg000:2E7C                 mov     ah, 0Eh
seg000:2E7E                 cmp     al, 7Fh ; ''
seg000:2E80                 jb      short loc_2E84
seg000:2E82                 mov     al, 1
seg000:2E84
seg000:2E84 loc_2E84:                               ; CODE XREF: sub_2E7C+4j
seg000:2E84                 cmp     al, 20h ; ' '
seg000:2E86                 jnb     short loc_2E8C
seg000:2E88                 add     al, 40h ; '@'
seg000:2E8A                 mov     ah, 0Fh
seg000:2E8C
seg000:2E8C loc_2E8C:                               ; CODE XREF: sub_2E7C+Aj
seg000:2E8C                 mov     [bp+di], al
seg000:2E8E                 mov     [bp+di+1000h], ah
seg000:2E92                 inc     bp
seg000:2E93                 push    ax
seg000:2E94                 mov     al, ds:byte_1ED5
seg000:2E97                 mov     [bp+di+1000h], al
seg000:2E9B                 pop     ax
seg000:2E9C                 retn
seg000:2E9C sub_2E7C        endp
seg000:2E9C
seg000:2E9D ; ---------------------------------------------------------------------------
seg000:2E9D
seg000:2E9D SET_UP_SUB__2E9D:                       ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2E9D                 mov     ax, ds:word_1EC8 ; ------------------------------------------------
seg000:2EA0                 sub     ah, ah
seg000:2EA2                 dec     al
seg000:2EA4                 jns     short loc_2EA8
seg000:2EA6                 mov     al, 5
seg000:2EA8
seg000:2EA8 loc_2EA8:                               ; CODE XREF: seg000:2EA4j
seg000:2EA8                                         ; seg000:2EB6j ...
seg000:2EA8                 mov     ds:word_1EC8, ax
seg000:2EAB                 jmp     SET_UP__loc_2CBE
seg000:2EAE ; ---------------------------------------------------------------------------
seg000:2EAE
seg000:2EAE SET_UP_SUB__2EAE:                       ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2EAE                 mov     ax, ds:word_1EC8 ; ------------------------------------------------
seg000:2EB1                 sub     ah, ah
seg000:2EB3                 inc     ax
seg000:2EB4                 cmp     al, 6
seg000:2EB6                 jnz     short loc_2EA8  ;
seg000:2EB6                                         ;
seg000:2EB8                 mov     al, ah
seg000:2EBA                 jmp     short loc_2EA8
seg000:2EBC
seg000:2EBC ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2EBC
seg000:2EBC
seg000:2EBC sub_2EBC        proc near               ; CODE XREF: seg000:SET_UP_SUB__2EEAp
seg000:2EBC                                         ; seg000:SET_UP_SUB__loc_2EF7p
seg000:2EBC                 mov     bp, word ptr ds:unk_1ECA
seg000:2EC0                 mov     al, es:[bp+0]
seg000:2EC4                 mov     ah, byte ptr ds:unk_1ED1
seg000:2EC8                 sub     cx, cx
seg000:2ECA
seg000:2ECA loc_2ECA:                               ; CODE XREF: sub_2EBC+11j
seg000:2ECA                 shl     ah, 1
seg000:2ECC                 inc     cx
seg000:2ECD                 jnb     short loc_2ECA
seg000:2ECF                 mov     ah, 0FFh
seg000:2ED1                 dec     cx
seg000:2ED2
seg000:2ED2 loc_2ED2:                               ; CODE XREF: sub_2EBC+19j
seg000:2ED2                 clc
seg000:2ED3                 rcr     ah, 1
seg000:2ED5                 loop    loc_2ED2
seg000:2ED7                 and     al, ah
seg000:2ED9                 mov     di, word ptr ds:unk_1ECF
seg000:2EDD                 mov     cl, byte ptr ds:unk_1ED2
seg000:2EE1                 mov     si, word ptr ds:unk_1ED3
seg000:2EE5                 mov     ah, byte ptr ds:unk_1ED1
seg000:2EE9                 retn
seg000:2EE9 sub_2EBC        endp
seg000:2EE9
seg000:2EEA ; ---------------------------------------------------------------------------
seg000:2EEA
seg000:2EEA SET_UP_SUB__2EEA:                       ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2EEA                 call    sub_2EBC        ; ------------------------------------------------
seg000:2EED                 dec     al
seg000:2EEF                 cmp     al, 0FFh
seg000:2EF1                 jnz     short loc_2F01  ;
seg000:2EF1                                         ;
seg000:2EF3                 mov     al, ah
seg000:2EF5                 jmp     short loc_2F01
seg000:2EF7 ; ---------------------------------------------------------------------------
seg000:2EF7
seg000:2EF7 SET_UP_SUB__loc_2EF7:                   ; DATA XREF: ConsoleLev2Stat__sub_36E3+4Br
seg000:2EF7                                         ; ConsoleLev2Stat__sub_36E3+53w ...
seg000:2EF7                 call    sub_2EBC        ; ------------------------------------------------
seg000:2EF7                                         ; Used in the JUMP TABLE (jmp dx ...) within SETUP
seg000:2EF7                                         ; ------------------------------------------------
seg000:2EFA                 inc     ax
seg000:2EFB                 cmp     al, ah
seg000:2EFD                 jbe     short loc_2F01  ;
seg000:2EFD                                         ;
seg000:2EFF                 sub     al, al
seg000:2F01
seg000:2F01 loc_2F01:                               ; CODE XREF: seg000:2EF1j
seg000:2F01                                         ; seg000:2EF5j ...
seg000:2F01                 mov     es:[bp+0], al
seg000:2F05                 mul     cl
seg000:2F07                 mov     bx, ax
seg000:2F09
seg000:2F09 loc_2F09:                               ; CODE XREF: seg000:2F10j
seg000:2F09                 mov     al, cs:[bx+si]
seg000:2F0C                 mov     [di], al
seg000:2F0E                 inc     di
seg000:2F0F                 inc     si
seg000:2F10                 loop    loc_2F09
seg000:2F12                 call    SET_UP_PROCESS_n_JUMP__sub_2F18
seg000:2F15                 jmp     SET_UP__loc_2CCA
seg000:2F18
seg000:2F18 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2F18
seg000:2F18
seg000:2F18 SET_UP_PROCESS_n_JUMP__sub_2F18 proc near ; CODE XREF: seg000:2F12p
seg000:2F18                                         ; sub_3143+16p
seg000:2F18                 push    es              ; Processing which involves EFEC8, EFEC9 and EFECA (variables in scratch area)
seg000:2F18                                         ; Then, does a jump via a JUMP TABLE (offset 2F45).
seg000:2F18                                         ; DI acts as an offset (-> 2 byte increments).
seg000:2F19                 push    cs
seg000:2F1A                 pop     es              ; F400 (low ROM offset)
seg000:2F1B                 mov     di, 0AF45h
seg000:2F1E                 mov     bp, di
seg000:2F20                 mov     al, 0FFh        ; 255 - 256 Bytes?
seg000:2F22                 mov     dl, byte ptr ds:word_1EC8 ; EFEC8 (scratch area)
seg000:2F26                 inc     dl
seg000:2F28                 call    sub_35C0
seg000:2F2B                 jcxz    short loc_2F43  ;
seg000:2F2B                                         ;
seg000:2F2D                 mov     di, si
seg000:2F2F                 mov     al, byte ptr ds:word_1EC8+1 ; EFEC9 (scratch area)
seg000:2F32                 repne scasb
seg000:2F34                 pop     es
seg000:2F35                 sub     di, bp
seg000:2F37                 dec     di
seg000:2F38                 shl     di, 1           ; DI is an offset into a (2 byte) JUMP TABLE
seg000:2F3A                 mov     si, word ptr ds:unk_1ECA ; EFECA
seg000:2F3E                 jmp     word ptr cs:[di-50A5h] ; Example: when DI=2 then jump to FF0BB (IP = $b0bb from table below @ 2f5d)
seg000:2F43 ; ---------------------------------------------------------------------------
seg000:2F43
seg000:2F43 loc_2F43:                               ; CODE XREF: SET_UP_PROCESS_n_JUMP__sub_2F18+13j
seg000:2F43                 pop     es
seg000:2F44                 retn
seg000:2F44 SET_UP_PROCESS_n_JUMP__sub_2F18 endp
seg000:2F44
seg000:2F44 ; ---------------------------------------------------------------------------
seg000:2F45                 db 0FFh
seg000:2F46                 db    2
seg000:2F47                 db    3
seg000:2F48                 db    8
seg000:2F49                 db  0Bh
seg000:2F4A                 db  0Dh
seg000:2F4B                 db  13h
seg000:2F4C                 db  14h
seg000:2F4D                 db    6
seg000:2F4E                 db  0Ch
seg000:2F4F                 db 0FFh
seg000:2F50                 db    0
seg000:2F51                 db    1
seg000:2F52                 db    2
seg000:2F53                 db 0FFh
seg000:2F54                 db    0
seg000:2F55                 db    1
seg000:2F56                 db 0FFh
seg000:2F57                 db    1
seg000:2F58                 db    2
seg000:2F59                 db 0FFh
seg000:2F5A                 db 0FFh
seg000:2F5B                 dw 0AFB0h               ; DI = 0
seg000:2F5D                 dw 0B0BBh               ; DI = 2  => JMP TO FF0BB
seg000:2F5F                 dw 0AF87h               ; ...
seg000:2F61                 dw 0B001h               ; etc.
seg000:2F63                 dw 0AFDCh
seg000:2F65                 dw 0B009h
seg000:2F67                 dw 0AFCAh
seg000:2F69                 dw 0AFCAh
seg000:2F6B                 dw 0B039h
seg000:2F6D                 dw 0AFB1h
seg000:2F6F                 dw 0AFB0h
seg000:2F71                 dw 0AFCAh
seg000:2F73                 dw 0AFD0h
seg000:2F75                 dw 0AFD0h
seg000:2F77                 dw 0AFB0h
seg000:2F79                 dw 0AFD6h
seg000:2F7B                 dw 0AFD0h
seg000:2F7D                 dw 0AFB0h
seg000:2F7F                 dw 0AFF9h
seg000:2F81                 dw 0B001h
seg000:2F83                 dw 0AFB0h
seg000:2F85                 dw 0AFB0h
seg000:2F87
seg000:2F87 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2F87
seg000:2F87
seg000:2F87 ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87 proc near ; CODE XREF: seg000:303Cj
seg000:2F87                                         ; SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+74p
seg000:2F87                 mov     ax, 10Dh
seg000:2F8A                 test    byte ptr es:TXT_GRAFIX_8084+3, 1 ; ES:87 - CURSOR (0=UNDERLINE 1=BLOCK)
seg000:2F90                 jnz     short loc_2F95
seg000:2F92                 mov     ax, 806h
seg000:2F95
seg000:2F95 loc_2F95:                               ; CODE XREF: ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87+9j
seg000:2F95                 mov     byte ptr ds:aBaudEmpf_+2, ah
seg000:2F99                 test    byte ptr es:TXT_GRAFIX_8084+6, 1 ; ES:8A - SCREEN (0=DARK 1=LIGHT/REVERSE)
seg000:2F9F                 jz      short loc_2FA3
seg000:2FA1                 and     al, 0FEh
seg000:2FA3
seg000:2FA3 loc_2FA3:                               ; CODE XREF: ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87+18j
seg000:2FA3                 mov     ds:byte_1ED5, al
seg000:2FA6                 cmp     byte ptr ds:word_1EC8, 1
seg000:2FAB                 jnz     short locret_2FB0
seg000:2FAD                 call    sub_3126
seg000:2FB0
seg000:2FB0 locret_2FB0:                            ; CODE XREF: ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87+24j
seg000:2FB0                 retn
seg000:2FB0 ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87 endp
seg000:2FB0
seg000:2FB1
seg000:2FB1 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2FB1
seg000:2FB1
seg000:2FB1 SCREEN_BLANK__NVM_90__sub_2FB1 proc near ; CODE XREF: seg000:31D0p
seg000:2FB1                 test    byte ptr es:TXT_GRAFIX_8084+0Ch, 1 ; 0x90 AUTO SCREEN BLANK (0=OFF 1=ON)
seg000:2FB7                 jz      short loc_2FBC
seg000:2FB9                 jmp     near ptr 804Bh  ; F404B - VIDEO: unknown subroutine.
seg000:2FBC ; ---------------------------------------------------------------------------
seg000:2FBC
seg000:2FBC loc_2FBC:                               ; CODE XREF: SCREEN_BLANK__NVM_90__sub_2FB1+6j
seg000:2FBC                 cli
seg000:2FBD                 mov     word ptr ds:aAutoBoot+7, 25E0h ; DS:0EC5
seg000:2FC3                 mov     byte ptr ds:aLancementAutomati+0Dh, 0Bh ; DS:0ED5
seg000:2FC8                 sti
seg000:2FC9                 retn
seg000:2FC9 SCREEN_BLANK__NVM_90__sub_2FB1 endp
seg000:2FC9
seg000:2FCA ; ---------------------------------------------------------------------------
seg000:2FCA                 or      byte ptr ds:unk_1EF9, 4
seg000:2FCF                 retn
seg000:2FD0 ; ---------------------------------------------------------------------------
seg000:2FD0                 or      byte ptr ds:unk_1EF9, 2
seg000:2FD5                 retn
seg000:2FD6 ; ---------------------------------------------------------------------------
seg000:2FD6                 or      byte ptr ds:unk_1EF9, 1
seg000:2FDB                 retn
seg000:2FDC
seg000:2FDC ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:2FDC
seg000:2FDC
seg000:2FDC CHARSET__NVM_8F__sub_2FDC proc near     ; CODE XREF: seg000:004Bj
seg000:2FDC                                         ; seg000:ENABLE_KEYCLICK_BELL__loc_31CDp
seg000:2FDC                 mov     al, 0
seg000:2FDE                 test    byte ptr es:TXT_GRAFIX_8084+0Bh, 1 ; ES:8F  DEFAULT CHAR SET (0=USASCII 1=UK)
seg000:2FE4                 jz      short loc_2FE8
seg000:2FE6                 mov     al, 1
seg000:2FE8
seg000:2FE8 loc_2FE8:                               ; CODE XREF: CHARSET__NVM_8F__sub_2FDC+8j
seg000:2FE8                 mov     byte ptr ds:aProtocol+2, al ; DS:0F39
seg000:2FEB                 mov     byte ptr ds:aProtocol+3, al ; DS:0F3A
seg000:2FEE                 sub     ah, ah
seg000:2FF0                 shl     ax, 1
seg000:2FF2                 mov     word ptr ds:aProtocol+7, ax ; DS:0F3E
seg000:2FF5                 mov     word ptr ds:aProtocol+5, ax ; DS:0F3C
seg000:2FF8                 retn
seg000:2FF8 CHARSET__NVM_8F__sub_2FDC endp
seg000:2FF8
seg000:2FF9 ; ---------------------------------------------------------------------------
seg000:2FF9                 call    ENABLE_BELL_ES_A8__sub_2835
seg000:2FFC                 mov     al, 0A7h ; 'º'  ;  0xa7    /* emit a bell */
seg000:2FFE                 jmp     j_KBD_CMD_AL__sub_2846
seg000:3001 ; ---------------------------------------------------------------------------
seg000:3001                 call    ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A
seg000:3004                 mov     al, 9Fh ; 'ƒ'   ; 0x9f    /* emit a keyclick */
seg000:3006                 jmp     j_KBD_CMD_AL__sub_2846
seg000:3009 ; ---------------------------------------------------------------------------
seg000:3009                 or      byte ptr ds:unk_1EF5, 10h
seg000:300E                 push    word ptr ds:loc_3+1
seg000:3012                 mov     word ptr ds:loc_3+1, 6
seg000:3018                 mov     ax, 3
seg000:301B                 test    byte ptr es:[si], 1
seg000:301F                 jz      short SETUP_VIDEO_HARDWARE__loc_3024
seg000:3021                 mov     ax, 9
seg000:3024
seg000:3024 SETUP_VIDEO_HARDWARE__loc_3024:         ; CODE XREF: seg000:301Fj
seg000:3024                 mov     word ptr ds:loc_0+1, ax
seg000:3027                 mov     cx, 2000h
seg000:302A
seg000:302A DELAY_VIDEO_HARDWARE__loc_302A:         ; CODE XREF: seg000:DELAY_VIDEO_HARDWARE__loc_302Aj
seg000:302A                 loop    DELAY_VIDEO_HARDWARE__loc_302A
seg000:302C                 call    near ptr 8012h  ; F4012
seg000:302C                                         ; SETUP_VIDEO_HW
seg000:302F                 pop     word ptr ds:loc_3+1
seg000:3033                 mov     byte ptr ds:unk_1EF5, 0
seg000:3038                 retn
seg000:3039 ; ---------------------------------------------------------------------------
seg000:3039                 call    near ptr 8015h  ; F4015
seg000:3039                                         ; DC012_REVERSE_FIELD_ON
seg000:303C                 jmp     ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87
seg000:303F
seg000:303F ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:303F
seg000:303F
seg000:303F SET_UP__sub_303F proc near              ; CODE XREF: seg000:SET_UP__loc_30FFp
seg000:303F                 mov     bx, word ptr ds:unk_1EDF
seg000:3043                 mov     di, word ptr ds:unk_1EE1
seg000:3047                 mov     bp, 0Ch
seg000:304A                 jmp     SET_UP__sub_31E6
seg000:304A SET_UP__sub_303F endp
seg000:304A
seg000:304D
seg000:304D ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:304D
seg000:304D
seg000:304D SET_UP_LOWER_DISPLAY__sub_304D proc near
seg000:304D                                         ; CODE XREF: SET_UP_MAIN__sub_2CB2:SET_UP__loc_2CBEp
seg000:304D                                         ; seg000:2DC7p ...
seg000:304D                 mov     bx, word ptr ds:unk_1EDB
seg000:3051                 mov     di, word ptr ds:unk_1EDD
seg000:3055                 push    di
seg000:3056                 mov     bp, 4
seg000:3059                 call    SET_UP__sub_31E6
seg000:305C                 pop     di
seg000:305D                 mov     dl, 2
seg000:305F                 call    SET_UP__sub_35E6
seg000:3062                 mov     word ptr ds:unk_1ECD, di
seg000:3066                 retn
seg000:3066 SET_UP_LOWER_DISPLAY__sub_304D endp
seg000:3066
seg000:3067
seg000:3067 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3067
seg000:3067
seg000:3067 SET_UP_UPPER_DISPLAY__sub_3067 proc near ; CODE XREF: SET_UP_MAIN__sub_2CB2+1p
seg000:3067                                         ; seg000:30BEp
seg000:3067                 mov     di, 0D41h
seg000:306A                 mov     bx, 4
seg000:306D                 mov     bp, 1
seg000:3070                 jb      short loc_3075
seg000:3072                 jmp     SET_UP__sub_31E6
seg000:3075 ; ---------------------------------------------------------------------------
seg000:3075
seg000:3075 loc_3075:                               ; CODE XREF: SET_UP_UPPER_DISPLAY__sub_3067+9j
seg000:3075                 jmp     SET_UP__sub_31FC
seg000:3075 SET_UP_UPPER_DISPLAY__sub_3067 endp
seg000:3075
seg000:3078 ; ---------------------------------------------------------------------------
seg000:3078                 call    SET_UP__sub_307E
seg000:307B                 jmp     SET_UP__loc_2CCA
seg000:307E
seg000:307E ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:307E
seg000:307E
seg000:307E SET_UP__sub_307E proc near              ; CODE XREF: seg000:2DF5p
seg000:307E                                         ; seg000:3078p ...
seg000:307E                 call    SET_UP__sub_3118
seg000:3081                 sub     al, al
seg000:3083                 jmp     SET_UP_CHANGE_HALFBYTE__sub_3138
seg000:3083 SET_UP__sub_307E endp
seg000:3083
seg000:3086 ; ---------------------------------------------------------------------------
seg000:3086                 call    SET_UP__sub_3118
seg000:3089                 mov     si, word ptr ds:unk_1ECA
seg000:308D                 inc     ah
seg000:308F
seg000:308F SET_UP__loc_308F:                       ; CODE XREF: seg000:309Cj
seg000:308F                 inc     ax
seg000:3090                 inc     si
seg000:3091                 cmp     ah, al
seg000:3093                 jnz     short SET_UP__loc_3098
seg000:3095                 dec     ax
seg000:3096                 jmp     short SET_UP__loc_309E
seg000:3098 ; ---------------------------------------------------------------------------
seg000:3098
seg000:3098 SET_UP__loc_3098:                       ; CODE XREF: seg000:3093j
seg000:3098                 test    byte ptr es:[si], 1
seg000:309C                 jz      short SET_UP__loc_308F
seg000:309E
seg000:309E SET_UP__loc_309E:                       ; CODE XREF: seg000:3096j
seg000:309E                 call    SET_UP_CHANGE_HALFBYTE__sub_3138
seg000:30A1                 jmp     SET_UP__loc_2CCA
seg000:30A4 ; ---------------------------------------------------------------------------
seg000:30A4                 mov     si, 0
seg000:30A7                 mov     cx, 84h ; 'ä'
seg000:30AA                 sub     ax, ax
seg000:30AC
seg000:30AC SET_UP__loc_30AC:                       ; CODE XREF: seg000:30B0j
seg000:30AC                 mov     es:[si], al
seg000:30AF                 inc     si
seg000:30B0                 loop    SET_UP__loc_30AC
seg000:30B2                 jmp     SET_UP__loc_2CBE
seg000:30B5 ; ---------------------------------------------------------------------------
seg000:30B5                 call    near ptr 8081h  ; F4081
seg000:30B5                                         ; PREPARE_NVM
seg000:30B8                 jmp     SET_UP__loc_2CBE
seg000:30BB ; ---------------------------------------------------------------------------
seg000:30BB                 call    SET_UP_INITVIDEO__sub_30CA ;  (+ internal housekeeping)...
seg000:30BE                 call    SET_UP_UPPER_DISPLAY__sub_3067
seg000:30C1                 call    SET_UP_LOWER_DISPLAY__sub_304D
seg000:30C4                 call    SET_UP__sub_3118
seg000:30C7                 jmp     SET_UP_CHANGE_HALFBYTE__sub_3138
seg000:30CA
seg000:30CA ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:30CA
seg000:30CA
seg000:30CA SET_UP_INITVIDEO__sub_30CA proc near    ; CODE XREF: seg000:2DE7p
seg000:30CA                                         ; seg000:30BBp ...
seg000:30CA                 call    near ptr 801Eh  ; F401E - ROM_DisableCursor    0x08
seg000:30CD                 call    near ptr 8066h  ; F4066 - INITIALIZE VIDEO (+ internal housekeeping)
seg000:30D0                 mov     ax, word ptr ds:aBildlauf ; EF004
seg000:30D3                 mov     word ptr ds:aAutoBoot+1, ax ; EEEBF
seg000:30D6                 mov     word ptr ds:loc_3+1, 6 ; EE004
seg000:30DC                 jmp     near ptr 8021h  ; F4021 - ROM_EnableCursor     0x0a
seg000:30DC SET_UP_INITVIDEO__sub_30CA endp
seg000:30DC
seg000:30DF ; ---------------------------------------------------------------------------
seg000:30DF                 call    SET_UP__sub_307E
seg000:30E2                 jmp     short SET_UP__loc_30FF
seg000:30E4 ; ---------------------------------------------------------------------------
seg000:30E4                 call    SET_UP__sub_30EF
seg000:30E7                 jmp     short SET_UP__loc_30FF
seg000:30E9 ; ---------------------------------------------------------------------------
seg000:30E9                 call    SET_UP__sub_30EF
seg000:30EC                 jmp     SET_UP__loc_2CCA
seg000:30EF
seg000:30EF ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:30EF
seg000:30EF
seg000:30EF SET_UP__sub_30EF proc near              ; CODE XREF: seg000:30E4p
seg000:30EF                                         ; seg000:30E9p
seg000:30EF                 call    SET_UP__sub_3118
seg000:30F2                 inc     ax
seg000:30F3                 cmp     al, ah
seg000:30F5                 jbe     short loc_30F9
seg000:30F7                 mov     al, 0
seg000:30F9
seg000:30F9 loc_30F9:                               ; CODE XREF: SET_UP__sub_30EF+6j
seg000:30F9                                         ; SET_UP__sub_310B+7j ...
seg000:30F9                 jmp     SET_UP_CHANGE_HALFBYTE__sub_3138
seg000:30F9 SET_UP__sub_30EF endp
seg000:30F9
seg000:30FC ; ---------------------------------------------------------------------------
seg000:30FC                 call    SET_UP__sub_310B
seg000:30FF
seg000:30FF SET_UP__loc_30FF:                       ; CODE XREF: seg000:30E2j
seg000:30FF                                         ; seg000:30E7j
seg000:30FF                 call    SET_UP__sub_303F
seg000:3102                 jmp     SET_UP__loc_2CCA
seg000:3105 ; ---------------------------------------------------------------------------
seg000:3105                 call    SET_UP__sub_310B
seg000:3108                 jmp     SET_UP__loc_2CCA
seg000:310B
seg000:310B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:310B
seg000:310B
seg000:310B SET_UP__sub_310B proc near              ; CODE XREF: seg000:30FCp
seg000:310B                                         ; seg000:3105p
seg000:310B                 call    SET_UP__sub_3118
seg000:310E                 dec     al
seg000:3110                 cmp     al, 0FFh
seg000:3112                 jnz     short loc_30F9
seg000:3114                 mov     al, ah
seg000:3116                 jmp     short loc_30F9
seg000:3116 SET_UP__sub_310B endp
seg000:3116
seg000:3118
seg000:3118 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3118
seg000:3118
seg000:3118 SET_UP__sub_3118 proc near              ; CODE XREF: SET_UP_MAIN__sub_2CB2+12p
seg000:3118                                         ; SET_UP__sub_307Ep ...
seg000:3118                 mov     al, byte ptr ds:unk_1ED6
seg000:311B                 call    sub_3126
seg000:311E                 mov     al, byte ptr ds:word_1EC8+1
seg000:3121                 mov     ah, byte ptr ds:unk_1ECC
seg000:3125                 retn
seg000:3125 SET_UP__sub_3118 endp
seg000:3125
seg000:3126
seg000:3126 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3126
seg000:3126
seg000:3126 sub_3126        proc near               ; CODE XREF: ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87+26p
seg000:3126                                         ; SET_UP__sub_3118+3p ...
seg000:3126                 mov     cl, byte ptr ds:unk_1ED2
seg000:312A                 mov     ch, 0
seg000:312C                 mov     di, word ptr ds:unk_1ECF
seg000:3130
seg000:3130 loc_3130:                               ; CODE XREF: sub_3126+Fj
seg000:3130                 mov     [di+1000h], al
seg000:3134                 inc     di
seg000:3135                 loop    loc_3130
seg000:3137                 retn
seg000:3137 sub_3126        endp
seg000:3137
seg000:3138
seg000:3138 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3138
seg000:3138
seg000:3138 SET_UP_CHANGE_HALFBYTE__sub_3138 proc near
seg000:3138                                         ; CODE XREF: SET_UP_MAIN__sub_2CB2+15p
seg000:3138                                         ; SET_UP__sub_307E+5j ...
seg000:3138                 mov     byte ptr ds:word_1EC8+1, al ; EFEC9 (half byte, for example $E = 1110)
seg000:313B                 call    SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603 ; display / change (?) half byte
seg000:313E                 mov     al, ds:byte_1ED5 ; EFED5 (half byte -afterwards- for example $D = 1101)
seg000:3141                 jmp     short sub_3126
seg000:3141 SET_UP_CHANGE_HALFBYTE__sub_3138 endp
seg000:3141
seg000:3143
seg000:3143 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3143
seg000:3143
seg000:3143 sub_3143        proc near               ; CODE XREF: seg000:2DE4p
seg000:3143                 push    ds:word_1EC8
seg000:3147                 mov     al, 5
seg000:3149
seg000:3149 loc_3149:                               ; CODE XREF: sub_3143+22j
seg000:3149                 mov     bh, 0
seg000:314B                 mov     bl, al
seg000:314D                 mov     ah, cs:[bx-496Dh]
seg000:3152                 mov     ds:word_1EC8, ax
seg000:3155                 push    ax
seg000:3156
seg000:3156 loc_3156:                               ; CODE XREF: sub_3143+1Dj
seg000:3156                 call    SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603
seg000:3159                 call    SET_UP_PROCESS_n_JUMP__sub_2F18
seg000:315C                 dec     byte ptr ds:word_1EC8+1
seg000:3160                 jns     short loc_3156
seg000:3162                 pop     ax
seg000:3163                 dec     al
seg000:3165                 jz      short loc_3149  ;
seg000:3165                                         ;
seg000:3167                 pop     ds:word_1EC8
seg000:316B                 jmp     SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603
seg000:316B sub_3143        endp
seg000:316B
seg000:316E ; ---------------------------------------------------------------------------
seg000:316E                 call    SET_UP__sub_3118
seg000:3171                 push    ds:word_1EC8
seg000:3175                 mov     ds:word_1EC8, 6
seg000:317B                 call    SET_UP_LOWER_DISPLAY__sub_304D
seg000:317E
seg000:317E loc_317E:                               ; CODE XREF: seg000:3184j
seg000:317E                 call    GET_KEY__sub_2CCF
seg000:3181                 cmp     ax, 182h
seg000:3184                 jnz     short loc_317E  ;
seg000:3184                                         ;
seg000:3186                 pop     ds:word_1EC8
seg000:318A                 jmp     SET_UP__loc_2CBE
seg000:318D ; ---------------------------------------------------------------------------
seg000:318D
seg000:318D CHECK_NVM__loc_318D:                    ; CODE XREF: seg000:0033j
seg000:318D                 call    near ptr 806Fh  ; F406F - NVM_WRITEPROTECT_READABLE
seg000:3190                 pushf
seg000:3191                 jnb     short loc_319A  ;
seg000:3191                                         ;
seg000:3193                 call    near ptr 807Eh  ; F407E - NVM_DEFAULTS
seg000:3196                 jmp     short loc_319A
seg000:3198 ; ---------------------------------------------------------------------------
seg000:3198
seg000:3198 FROM_NVM_CHAR_SCREEN_BELL_etc__loc_3198: ; CODE XREF: seg000:0048j
seg000:3198                 clc                     ; FROM NVM:
seg000:3198                                         ; - keyclick (settings / and or volume)
seg000:3198                                         ; - bell (settings / and or volume)
seg000:3199                 pushf
seg000:319A
seg000:319A loc_319A:                               ; CODE XREF: seg000:3191j
seg000:319A                                         ; seg000:3196j
seg000:319A                 mov     ah, 1
seg000:319C                 test    byte ptr es:TXT_GRAFIX_8084+3, 1 ; 0x87 :CURSOR (0=UNDERLINE 1=BLOCK)
seg000:31A2                 jnz     short loc_31A6  ;
seg000:31A2                                         ;
seg000:31A4                 mov     ah, 8
seg000:31A6
seg000:31A6 loc_31A6:                               ; CODE XREF: seg000:31A2j
seg000:31A6                 mov     byte ptr ds:aBaudEmpf_+2, ah
seg000:31AA                 mov     byte ptr ds:aProtocol+9, 0Eh
seg000:31AF                 call    SET_UP_INITVIDEO__sub_30CA
seg000:31B2                 mov     ax, 12h
seg000:31B5                 mov     word ptr ds:loc_3+1, ax
seg000:31B8                 mov     al, 0Eh
seg000:31BA                 mov     byte ptr ds:aSmooth+5, al
seg000:31BD                 popf
seg000:31BE                 jnb     short ENABLE_KEYCLICK_BELL__loc_31CD ;
seg000:31BE                                         ;
seg000:31C0                 mov     dl, 24h ; '$'
seg000:31C2                 mov     cx, 0F400h
seg000:31C5                 mov     si, 8151h       ; 830c : "14 - "
seg000:31C5                                         ; 8a42 : "Main Board"  [nvm data]  ??
seg000:31C8                 push    ds
seg000:31C9                 call    near ptr 8009h  ; F4009
seg000:31C9                                         ; SYS_MESSAGE_SIT_n_WAIT__sub_9
seg000:31CC                 pop     ds
seg000:31CD
seg000:31CD ENABLE_KEYCLICK_BELL__loc_31CD:         ; CODE XREF: seg000:31BEj
seg000:31CD                 call    CHARSET__NVM_8F__sub_2FDC
seg000:31D0                 call    SCREEN_BLANK__NVM_90__sub_2FB1
seg000:31D3                 call    ENABLE_KEYCLICK_ES_8C_n_A9__sub_281A
seg000:31D6                 call    ENABLE_BELL_ES_A8__sub_2835
seg000:31D9                 or      byte ptr ds:aBildlaufRate+2, 80h ; DS:0FE5
seg000:31DE                 mov     byte ptr ds:unk_1EF9, 7
seg000:31E3                 jmp     LEAVE_SET_UP_PROPERLY__loc_2C8D
seg000:31E6
seg000:31E6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:31E6
seg000:31E6
seg000:31E6 SET_UP__sub_31E6 proc near              ; CODE XREF: SET_UP__sub_303F+Bj
seg000:31E6                                         ; SET_UP_LOWER_DISPLAY__sub_304D+Cp ...
seg000:31E6                 mov     word ptr [bx], 6
seg000:31EA                 push    di
seg000:31EB                 push    bx
seg000:31EC                 call    SET_UP__sub_31FC
seg000:31EF                 mov     word ptr [bx], 6
seg000:31F3                 pop     dx
seg000:31F4                 pop     ax
seg000:31F5                 mov     bp, dx
seg000:31F7                 mov     ds:[bp+0], ax
seg000:31FB                 retn
seg000:31FB SET_UP__sub_31E6 endp
seg000:31FB
seg000:31FC
seg000:31FC ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:31FC
seg000:31FC
seg000:31FC SET_UP__sub_31FC proc near              ; CODE XREF: SET_UP_UPPER_DISPLAY__sub_3067:loc_3075j
seg000:31FC                                         ; SET_UP__sub_31E6+6p
seg000:31FC                 dec     bp
seg000:31FD                 shl     bp, 1
seg000:31FF                 mov     bp, cs:[bp-735Eh]
seg000:3204                 sub     si, si
seg000:3206
seg000:3206 loc_3206:                               ; CODE XREF: SET_UP__sub_31FC+16j
seg000:3206                 mov     dl, cs:[bp+si]
seg000:3209                 cmp     dl, 0FFh
seg000:320C                 jz      short locret_3214 ; retn
seg000:320E                 call    SET_UP__sub_3215
seg000:3211                 inc     si
seg000:3212                 jmp     short loc_3206
seg000:3214 ; ---------------------------------------------------------------------------
seg000:3214
seg000:3214 locret_3214:                            ; CODE XREF: SET_UP__sub_31FC+10j
seg000:3214                 retn
seg000:3214 SET_UP__sub_31FC endp
seg000:3214
seg000:3215
seg000:3215 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3215
seg000:3215
seg000:3215 SET_UP__sub_3215 proc near              ; CODE XREF: seg000:2E16p
seg000:3215                                         ; SET_UP__sub_31FC+12p
seg000:3215                 push    bp
seg000:3216                 push    si
seg000:3217                 test    si, si
seg000:3219                 jz      short loc_321D
seg000:321B                 mov     [bx], di
seg000:321D
seg000:321D loc_321D:                               ; CODE XREF: SET_UP__sub_3215+4j
seg000:321D                 mov     word ptr [bx+1000h], 0E06h
seg000:3223                 call    SET_UP__sub_32EA
seg000:3226                 mov     ah, [bx+1001h]
seg000:322A                 cmp     dl, 0FFh
seg000:322D                 jz      short loc_3244  ;
seg000:322D                                         ;
seg000:322F                 test    dl, dl
seg000:3231                 jz      short loc_3236
seg000:3233                 call    SET_UP__sub_3256
seg000:3236
seg000:3236 loc_3236:                               ; CODE XREF: SET_UP__sub_3215+1Cj
seg000:3236                 cmp     di, 0D41h
seg000:323A                 jz      short loc_3244  ;
seg000:323A                                         ;
seg000:323C                 mov     byte ptr [di], 0FFh
seg000:323F                 inc     di
seg000:3240                 mov     bx, di
seg000:3242                 inc     di
seg000:3243                 inc     di
seg000:3244
seg000:3244 loc_3244:                               ; CODE XREF: SET_UP__sub_3215+18j
seg000:3244                                         ; SET_UP__sub_3215+25j
seg000:3244                 pop     si
seg000:3245                 pop     bp
seg000:3246                 retn
seg000:3246 SET_UP__sub_3215 endp
seg000:3246
seg000:3246 ; ---------------------------------------------------------------------------
seg000:3247                 db    0
seg000:3248                 db    1
seg000:3249                 db    0
seg000:324A                 db    0
seg000:324B                 db    0
seg000:324C                 db    0
seg000:324D                 db    0
seg000:324E                 db    0
seg000:324F                 db    2
seg000:3250                 db    1
seg000:3251                 db    2
seg000:3252                 db    0
seg000:3253                 db    0
seg000:3254                 db    1
seg000:3255                 db    0
seg000:3256
seg000:3256 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3256
seg000:3256
seg000:3256 SET_UP__sub_3256 proc near              ; CODE XREF: SET_UP__sub_3215+1Ep
seg000:3256                                         ; seg000:3319p ...
seg000:3256                 push    di
seg000:3257                 push    es
seg000:3258                 sub     al, al
seg000:325A                 push    dx
seg000:325B                 mov     di, 8CBAh       ; SET-UP (?)
seg000:325E                 cmp     dl, 6Eh ; 'n'
seg000:3261                 jb      short SET_UP__loc_326D ;
seg000:3261                                         ;
seg000:3263                 mov     di, 98CAh       ; PARTIAL STRINGS - USED BY SETUP: 60/50 Hz.  VT52/ANSI  etc. (??)
seg000:3266                 sub     dh, dh
seg000:3268                 sub     dl, 6Dh ; 'm'
seg000:326B                 jmp     short loc_3291
seg000:326D ; ---------------------------------------------------------------------------
seg000:326D
seg000:326D SET_UP__loc_326D:                       ; CODE XREF: SET_UP__sub_3256+Bj
seg000:326D                 push    bx
seg000:326E                 push    ax
seg000:326F                 dec     dl
seg000:3271                 mov     cl, 3
seg000:3273                 mov     al, dl
seg000:3275                 mul     cl
seg000:3277
seg000:3277 loc_3277:                               ; DATA XREF: seg000:34F3r
seg000:3277                 mov     dx, ax
seg000:3279                 mov     bx, 0B247h
seg000:327C                 mov     ax, word ptr es:TXT_GRAFIX_80a4+8 ; ES:AC
seg000:3280                 and     al, 0Fh
seg000:3282                 mov     cl, 4
seg000:3284                 shl     ah, cl
seg000:3286                 or      al, ah
seg000:3288                 xlat    byte ptr cs:[bx]
seg000:328A                 sub     ah, ah
seg000:328C                 add     dx, ax
seg000:328E                 inc     dx
seg000:328F                 pop     ax
seg000:3290                 pop     bx
seg000:3291
seg000:3291 loc_3291:                               ; CODE XREF: SET_UP__sub_3256+15j
seg000:3291                 push    cs
seg000:3292                 pop     es
seg000:3293                 cld
seg000:3294                 call    sub_35C9
seg000:3297                 pop     dx
seg000:3298                 pop     es
seg000:3299                 pop     di
seg000:329A
seg000:329A loc_329A:                               ; CODE XREF: seg000:3488p
seg000:329A                                         ; seg000:3588p
seg000:329A                 jcxz    short locret_32A9
seg000:329C
seg000:329C LOOP__loc_329C:                         ; CODE XREF: SET_UP__sub_3256+51j
seg000:329C                 mov     [di+1000h], ah
seg000:32A0                 mov     al, cs:[si]
seg000:32A3                 mov     [di], al
seg000:32A5                 inc     si
seg000:32A6                 inc     di
seg000:32A7                 loop    LOOP__loc_329C
seg000:32A9
seg000:32A9 locret_32A9:                            ; CODE XREF: SET_UP__sub_3256:loc_329Aj
seg000:32A9                 retn
seg000:32A9 SET_UP__sub_3256 endp
seg000:32A9
seg000:32A9 ; ---------------------------------------------------------------------------
seg000:32AA                 db 0D7h,0B3h, 9Eh,0B4h, 10h,0B3h, 44h,0B3h, 45h,0B4h
seg000:32AA                 db 0EAh,0B3h,   4,0B3h, 18h,0B5h, 39h,0B5h, 2Fh,0B5h
seg000:32AA                 db  8Fh,0B5h, 43h,0B5h, 6Dh,0B5h,   0,   2,   4,   6
seg000:32AA                 db    8,   8,   8,   8,   8,   8, 0Ah, 0Eh, 12h, 10h
seg000:32AA                 db  0Ah, 16h, 0Ch, 0Ah, 0Ah, 0Ah, 0Ah,   8,   8, 0Ah
seg000:32AA                 db  0Ah, 0Ah, 0Ah, 0Ah,   8, 0Ah,   8, 0Ah, 0Ah, 0Ah
seg000:32AA                 db  14h,   8, 0Ah, 18h
seg000:32EA
seg000:32EA ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:32EA
seg000:32EA
seg000:32EA SET_UP__sub_32EA proc near              ; CODE XREF: SET_UP__sub_3215+Ep
seg000:32EA                 cmp     dl, 0D9h ; '+'
seg000:32ED                 jb      short locret_3303 ;
seg000:32ED                                         ;
seg000:32EF                 push    dx
seg000:32F0                 not     dl
seg000:32F2                 mov     dh, 0
seg000:32F4                 mov     bp, dx
seg000:32F6                 mov     dl, cs:[bp-4D3Dh]
seg000:32FB                 mov     bp, dx
seg000:32FD                 pop     dx
seg000:32FE                 call    word ptr cs:[bp-4D56h]
seg000:3303
seg000:3303 locret_3303:                            ; CODE XREF: SET_UP__sub_32EA+3j
seg000:3303                 retn
seg000:3303 SET_UP__sub_32EA endp
seg000:3303
seg000:3304 ; ---------------------------------------------------------------------------
seg000:3304                 mov     dl, 75h ; 'u'
seg000:3306                 push    di
seg000:3307                 inc     di
seg000:3308                 inc     di
seg000:3309                 inc     di
seg000:330A                 mov     ds:word_1EE3, di
seg000:330E                 pop     di
seg000:330F                 retn
seg000:3310 ; ---------------------------------------------------------------------------
seg000:3310                 mov     di, word ptr ds:aBaudEmpf_+6
seg000:3314                 push    di
seg000:3315                 mov     [bx], di
seg000:3317                 mov     dl, 72h ; 'r'
seg000:3319                 call    SET_UP__sub_3256
seg000:331C                 pop     si
seg000:331D                 push    si
seg000:331E                 push    es
seg000:331F                 push    ds
seg000:3320                 pop     es
seg000:3321                 mov     cl, byte ptr ds:aVRscep+4
seg000:3325                 sub     ch, ch
seg000:3327                 push    cx
seg000:3328                 sub     cl, 0Ah
seg000:332B                 rep movsb
seg000:332D                 pop     cx
seg000:332E                 pop     es
seg000:332F                 pop     di
seg000:3330                 mov     ax, 0F0Eh
seg000:3333
seg000:3333 loc_3333:                               ; CODE XREF: seg000:333Fj
seg000:3333                 mov     [di+1000h], al
seg000:3337                 cmp     byte ptr [di], 30h ; '0'
seg000:333A                 jnz     short loc_333E
seg000:333C                 xchg    ah, al
seg000:333E
seg000:333E loc_333E:                               ; CODE XREF: seg000:333Aj
seg000:333E                 inc     di
seg000:333F                 loop    loc_3333
seg000:3341                 sub     dl, dl
seg000:3343                 retn
seg000:3344
seg000:3344 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3344
seg000:3344
seg000:3344 SET_UP__sub_3344 proc near              ; CODE XREF: seg000:3590p
seg000:3344                 push    ds:word_1EC8
seg000:3348                 mov     byte ptr ds:word_1EC8+1, 0
seg000:334D                 mov     word ptr ds:unk_1ECD, di
seg000:3351                 call    SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603
seg000:3354                 mov     si, word ptr ds:unk_1ED3
seg000:3358                 mov     ax, cs:[si]
seg000:335B                 mov     cl, byte ptr ds:unk_1ECC
seg000:335F                 mov     ch, 0
seg000:3361                 inc     cx
seg000:3362                 mov     si, word ptr ds:unk_1ECA
seg000:3366                 sub     bp, bp
seg000:3368
seg000:3368 loc_3368:                               ; CODE XREF: SET_UP__sub_3344+34j
seg000:3368                 mov     [bp+di], ah
seg000:336A                 test    byte ptr es:[bp+si], 1
seg000:336E                 jnz     short loc_3372
seg000:3370                 mov     [bp+di], al
seg000:3372
seg000:3372 loc_3372:                               ; CODE XREF: SET_UP__sub_3344+2Aj
seg000:3372                 mov     byte ptr [bp+di+1000h], 0Eh
seg000:3377                 inc     bp
seg000:3378                 loop    loc_3368
seg000:337A                 add     di, bp
seg000:337C                 sub     dl, dl
seg000:337E                 pop     ds:word_1EC8
seg000:3382                 retn
seg000:3382 SET_UP__sub_3344 endp
seg000:3382
seg000:3382 ; ---------------------------------------------------------------------------
seg000:3383                 db    3
seg000:3384                 db    0
seg000:3385                 db  0Ah
seg000:3386                 db 0FFh
seg000:3387                 db    3
seg000:3388                 db    1
seg000:3389                 db  0Bh
seg000:338A                 db 0FFh
seg000:338B                 db    2
seg000:338C                 db    0
seg000:338D                 db  0Ah
seg000:338E                 db 0FFh
seg000:338F                 db    2
seg000:3390                 db    1
seg000:3391                 db  10h
seg000:3392                 db 0FFh
seg000:3393                 db    2
seg000:3394                 db    2
seg000:3395                 db  11h
seg000:3396                 db 0FFh
seg000:3397                 db    2
seg000:3398                 db    3
seg000:3399                 db  12h
seg000:339A                 db 0FFh
seg000:339B                 db    2
seg000:339C                 db    4
seg000:339D                 db  13h
seg000:339E                 db 0FFh
seg000:339F                 db    4
seg000:33A0                 db    1
seg000:33A1                 db  15h
seg000:33A2                 db 0FFh
seg000:33A3                 db    4
seg000:33A4                 db    2
seg000:33A5                 db  14h
seg000:33A6                 db 0FFh
seg000:33A7                 db    4
seg000:33A8                 db    0
seg000:33A9                 db  16h
seg000:33AA                 db 0FFh
seg000:33AB                 db    5
seg000:33AC                 db    0
seg000:33AD ; ---------------------------------------------------------------------------
seg000:33AD                 xor     ax, 0E2FFh
seg000:33B0                 stc
seg000:33B1                 cli
seg000:33B2                 idiv    ax
seg000:33B4                 div     ch
seg000:33B6                 jmp     loc_1C99
seg000:33B9 ; ---------------------------------------------------------------------------
seg000:33B9
seg000:33B9 loc_33B9:                               ; CODE XREF: seg000:loc_3450p
seg000:33B9                 fld     tbyte ptr [bx+di]
seg000:33BB                 in      ax, dx
seg000:33BC
seg000:33BC loc_33BC:                               ; CODE XREF: seg000:33C2j
seg000:33BC                 inc     bp
seg000:33BD                 cmp     dl, cs:[bp-4C52h]
seg000:33C2                 jnz     short loc_33BC
seg000:33C4                 mov     dx, bp
seg000:33C6                 push    es
seg000:33C7                 push    di
seg000:33C8                 push    cs
seg000:33C9                 pop     es
seg000:33CA                 mov     di, 0B383h
seg000:33CD                 mov     al, 0FFh
seg000:33CF                 call    sub_35C0
seg000:33D2                 pop     di
seg000:33D3                 pop     es
seg000:33D4                 mov     bp, si
seg000:33D6                 retn
seg000:33D7 ; ---------------------------------------------------------------------------
seg000:33D7                 mov     word ptr ds:unk_1ED7, bx
seg000:33DB                 mov     word ptr ds:unk_1ED9, di
seg000:33DF                 mov     dl, 0E7h ; 'þ'
seg000:33E1                 test    byte ptr es:TXT_GRAFIX_8094+0Bh, 1
seg000:33E7                 jz      short loc_33EA
seg000:33E9                 dec     dx
seg000:33EA
seg000:33EA loc_33EA:                               ; CODE XREF: seg000:33E7j
seg000:33EA                 sub     si, si
seg000:33EC
seg000:33EC loc_33EC:                               ; CODE XREF: seg000:33F2j
seg000:33EC                 inc     si
seg000:33ED
seg000:33ED loc_33ED:
seg000:33ED                 cmp     dl, cs:[si-4BFCh]
seg000:33F2                 jnz     short loc_33EC
seg000:33F4                 mov     dl, cs:[si-4BCCh]
seg000:33F9                 shl     si, 1
seg000:33FB                 mov     si, cs:[si-4BEDh]
seg000:3400                 mov     [bx+1000h], si
seg000:3404                 retn
seg000:3404 ; ---------------------------------------------------------------------------
seg000:3405                 db 0EDh ; Ý
seg000:3406                 db 0ECh ; ý
seg000:3407                 db 0EBh ; Ù
seg000:3408                 db 0E7h ; þ
seg000:3409                 db 0E6h ; µ
seg000:340A                 db 0E5h ; Õ
seg000:340B                 db 0E3h ; Ò
seg000:340C                 db 0E4h ; õ
seg000:340D                 db 0E1h ; ß
seg000:340E                 db 0EAh ; Û
seg000:340F                 db 0F4h ; ¶
seg000:3410                 db 0F0h ; ­
seg000:3411                 db 0DFh ; ¯
seg000:3412                 db 0DEh ; Ì
seg000:3413                 db 0DDh ; ¦
seg000:3414                 db 0DAh ; +
seg000:3415                 db    4
seg000:3416                 db    8
seg000:3417                 db    0
seg000:3418                 db    8
seg000:3419                 db    2
seg000:341A                 db    6
seg000:341B                 db    6
seg000:341C                 db  0Fh
seg000:341D                 db    6
seg000:341E                 db  0Fh
seg000:341F                 db    6
seg000:3420                 db    6
seg000:3421                 db    6
seg000:3422                 db    6
seg000:3423                 db    6
seg000:3424                 db    6
seg000:3425                 db    6
seg000:3426                 db    6
seg000:3427                 db    6
seg000:3428                 db    6
seg000:3429                 db    2
seg000:342A                 db    6
seg000:342B                 db    6
seg000:342C                 db    6
seg000:342D                 db    6
seg000:342E                 db    6
seg000:342F                 db    6
seg000:3430                 db    6
seg000:3431                 db    6
seg000:3432                 db  0Fh
seg000:3433                 db    2
seg000:3434                 db    6
seg000:3435                 db    1
seg000:3436                 db    1
seg000:3437                 db    3
seg000:3438                 db    7
seg000:3439                 db    8
seg000:343A                 db    9
seg000:343B ; ---------------------------------------------------------------------------
seg000:343B                 or      ax, 60Ch
seg000:343E                 push    si
seg000:343F                 add     cl, byte ptr ds:aVSmiss+2
seg000:3443                 add     al, 36h ; '6'
seg000:3445                 cmp     dl, 0F7h ; '¸'
seg000:3448                 jnz     short loc_3450
seg000:344A                 mov     di, word ptr ds:aBaudEmpf_+6
seg000:344E                 mov     [bx], di
seg000:3450
seg000:3450 loc_3450:                               ; CODE XREF: seg000:3448j
seg000:3450                 call    near ptr loc_33B9+1
seg000:3453                 push    ds:word_1EC8
seg000:3457                 mov     ax, cs:[bp+0]
seg000:345B                 mov     ds:word_1EC8, ax
seg000:345E                 push    bp
seg000:345F                 call    SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603
seg000:3462                 cmp     byte ptr ds:word_1EC8+1, 0
seg000:3467                 jnz     short loc_346D
seg000:3469                 mov     word ptr ds:unk_1ECD, di
seg000:346D
seg000:346D loc_346D:                               ; CODE XREF: seg000:3467j
seg000:346D                 mov     si, word ptr ds:unk_1ECA
seg000:3471                 mov     al, es:[si]
seg000:3474                 and     al, 0Fh
seg000:3476                 mov     ah, 0
seg000:3478                 mov     ch, ah
seg000:347A                 mov     cl, byte ptr ds:unk_1ED2
seg000:347E                 mul     cl
seg000:3480                 mov     si, ax
seg000:3482                 add     si, word ptr ds:unk_1ED3
seg000:3486                 mov     ah, 0Eh
seg000:3488                 call    loc_329A
seg000:348B                 pop     bp
seg000:348C                 mov     dl, cs:[bp+2]
seg000:3490                 pop     ds:word_1EC8
seg000:3494                 retn
seg000:3494 ; ---------------------------------------------------------------------------
seg000:3495                 db    2
seg000:3496                 db    6
seg000:3497                 db    5
seg000:3498                 db    3
seg000:3499                 db  0Ah
seg000:349A                 db    8
seg000:349B                 db    7
seg000:349C                 db    9
seg000:349D ; ---------------------------------------------------------------------------
seg000:349D                 or      cx, [bx+di-24E2h]
seg000:34A1                 push    ds
seg000:34A2
seg000:34A2 loc_34A2:                               ; CODE XREF: seg000:3517j
seg000:34A2                 mov     word ptr ds:unk_1EDD, di
seg000:34A6                 mov     dl, 0
seg000:34A8                 push    bp
seg000:34A9                 push    si
seg000:34AA                 push    ax
seg000:34AB                 push    cx
seg000:34AC                 push    dx
seg000:34AD                 mov     ch, 0
seg000:34AF                 mov     cl, byte ptr ds:word_1EC8
seg000:34B3                 mov     si, cx
seg000:34B5                 mov     cl, cs:[si-4B6Bh]
seg000:34BA                 mov     bp, cx
seg000:34BC                 call    SET_UP__sub_31E6
seg000:34BF                 pop     dx
seg000:34C0                 pop     cx
seg000:34C1                 pop     ax
seg000:34C2                 pop     si
seg000:34C3                 pop     bp
seg000:34C4                 mov     dl, 0FFh
seg000:34C6                 retn
seg000:34C7 ; ---------------------------------------------------------------------------
seg000:34C7                 pop     ss
seg000:34C8                 push    ax
seg000:34C9                 push    bx
seg000:34CA                 and     [di], ah
seg000:34CC                 sbb     bl, [di]
seg000:34CE                 and     sp, [si]
seg000:34D0                 sub     al, 2Dh ; '-'
seg000:34D2                 sub     [bp+4Bh], cx
seg000:34D5                 cmp     dh, [bx]
seg000:34D7                 sub     [bx+si], dh
seg000:34D9                 inc     sp
seg000:34DA                 xor     al, 31h
seg000:34DC                 cmp     ax, 4043h
seg000:34DF                 inc     bp
seg000:34E0                 dec     ax
seg000:34E1                 push    di
seg000:34E2                 sbb     [bx+di+73h], dx
seg000:34E5                 and     [bp+si+1Bh], di
seg000:34E8                 push    ds
seg000:34E9                 sbb     bx, [bp+di]
seg000:34EB                 sbb     bp, word ptr ds:CON__loc_1B29+1
seg000:34EF                 jbe     short near ptr loc_352B+1
seg000:34F1                 cmp     [bp+di], bl
seg000:34F3                 sbb     di, word ptr ds:loc_3277+1
seg000:34F7                 db      3Eh, 3Eh
seg000:34F7                 inc     cx
seg000:34FA                 inc     si
seg000:34FB                 dec     cx
seg000:34FC                 jo      short loc_3516
seg000:34FE                 push    dx
seg000:34FF                 jz      short loc_3523
seg000:3501                 jnp     short near ptr loc_351E+1
seg000:3503                 pop     ds
seg000:3504                 sbb     al, 1Ch
seg000:3506                 sbb     al, 2Fh ; '/'
seg000:3508                 sub     bx, [si]
seg000:350A                 ja      short near ptr loc_3547+1
seg000:350C                 cmp     [si], bx
seg000:350E                 sbb     al, 3Fh ; '?'
seg000:3510                 jns     short loc_3545
seg000:3512                 aas
seg000:3513                 aas
seg000:3514                 inc     dx
seg000:3515                 inc     di
seg000:3516
seg000:3516 loc_3516:                               ; CODE XREF: seg000:34FCj
seg000:3516                 dec     dx
seg000:3517                 jno     short loc_34A2
seg000:3519                 push    ds
seg000:351A                 fistp   ds:word_3E89
seg000:351E
seg000:351E loc_351E:                               ; CODE XREF: seg000:3501j
seg000:351E                 loope   loc_353E
seg000:3520                 mov     si, 0B4C7h
seg000:3523
seg000:3523 loc_3523:                               ; CODE XREF: seg000:34FFj
seg000:3523                                         ; seg000:3537j ...
seg000:3523                 sub     ch, ch
seg000:3525                 mov     cl, byte ptr ds:word_1EC8+1
seg000:3529                 mov     bp, cx
seg000:352B
seg000:352B loc_352B:                               ; CODE XREF: seg000:34EFj
seg000:352B                 mov     dl, cs:[bp+si]
seg000:352E                 retn
seg000:352F ; ---------------------------------------------------------------------------
seg000:352F                 mov     dl, 6Eh ; 'n'
seg000:3531                 call    SET_UP__sub_3256
seg000:3534                 mov     si, 0B4E2h
seg000:3537                 jmp     short loc_3523
seg000:3539 ; ---------------------------------------------------------------------------
seg000:3539                 mov     dl, 6Fh ; 'o'
seg000:353B                 call    SET_UP__sub_3256
seg000:353E
seg000:353E loc_353E:                               ; CODE XREF: seg000:loc_351Ej
seg000:353E                 mov     si, 0B4FDh
seg000:3541                 jmp     short loc_3523
seg000:3543 ; ---------------------------------------------------------------------------
seg000:3543                 push    es
seg000:3544                 push    ax
seg000:3545
seg000:3545 loc_3545:                               ; CODE XREF: seg000:3510j
seg000:3545                 push    bx
seg000:3546                 push    ds
seg000:3547
seg000:3547 loc_3547:                               ; CODE XREF: seg000:350Aj
seg000:3547                 mov     bp, 0EE00h
seg000:354A                 mov     dx, di
seg000:354C                 call    near ptr 805Dh  ; F405D - ROM_RomVersion
seg000:354F                 mov     di, dx
seg000:3551                 mov     al, 0Eh
seg000:3553                 mov     cx, 6
seg000:3556                 add     di, 1000h
seg000:355A                 cld
seg000:355B                 rep stosb
seg000:355D                 pop     ds
seg000:355E                 sub     di, 1000h
seg000:3562                 mov     dl, [di]
seg000:3564                 mov     [di-1], dl
seg000:3567                 sub     dl, dl
seg000:3569                 pop     bx
seg000:356A                 pop     ax
seg000:356B                 pop     es
seg000:356C                 retn
seg000:356D ; ---------------------------------------------------------------------------
seg000:356D                 push    es
seg000:356E                 mov     dl, byte ptr es:unk_DB
seg000:3573                 and     dl, 0Fh
seg000:3576                 add     dl, 3
seg000:3579                 push    cs
seg000:357A                 pop     es
seg000:357B                 mov     si, 827Ch
seg000:357E                 push    di
seg000:357F                 mov     di, si
seg000:3581                 mov     ax, 0E00h
seg000:3584                 call    sub_35C0
seg000:3587                 pop     di
seg000:3588                 call    loc_329A
seg000:358B                 sub     dl, dl
seg000:358D                 pop     es
seg000:358E                 retn
seg000:358F ; ---------------------------------------------------------------------------
seg000:358F                 push    di
seg000:3590                 call    SET_UP__sub_3344
seg000:3593                 pop     di
seg000:3594                 sub     cx, cx
seg000:3596
seg000:3596 loc_3596:                               ; CODE XREF: seg000:35A5j
seg000:3596                 test    cl, 4
seg000:3599                 jz      short loc_35A0
seg000:359B                 mov     byte ptr [di+1000h], 0Fh
seg000:35A0
seg000:35A0 loc_35A0:                               ; CODE XREF: seg000:3599j
seg000:35A0                 inc     cx
seg000:35A1                 inc     di
seg000:35A2                 cmp     cl, 1Bh
seg000:35A5                 jnz     short loc_3596
seg000:35A7                 retn
seg000:35A8
seg000:35A8 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:35A8
seg000:35A8
seg000:35A8 SET_UP__sub_35A8 proc near              ; CODE XREF: SET_UP__sub_2CDA+10p
seg000:35A8                                         ; SET_UP__sub_2CDA+22p
seg000:35A8                 push    dx
seg000:35A9                 cld
seg000:35AA                 sub     dh, dh
seg000:35AC
seg000:35AC loc_35AC:                               ; CODE XREF: SET_UP__sub_35A8+Cj
seg000:35AC                 sub     cx, cx
seg000:35AE                 dec     cx
seg000:35AF                 mov     si, di
seg000:35B1                 repne scasw
seg000:35B3                 dec     dx
seg000:35B4                 jnz     short loc_35AC
seg000:35B6                 dec     di
seg000:35B7                 dec     di
seg000:35B8                 mov     cx, di
seg000:35BA                 sub     cx, si
seg000:35BC                 shr     cx, 1
seg000:35BE                 pop     dx
seg000:35BF                 retn
seg000:35BF SET_UP__sub_35A8 endp
seg000:35BF
seg000:35C0
seg000:35C0 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:35C0
seg000:35C0
seg000:35C0 sub_35C0        proc near               ; CODE XREF: SET_UP_PROCESS_n_JUMP__sub_2F18+10p
seg000:35C0                                         ; seg000:33CFp ...
seg000:35C0                 push    dx
seg000:35C1                 cld
seg000:35C2                 sub     dh, dh
seg000:35C4                 call    sub_35C9
seg000:35C7                 pop     dx
seg000:35C8                 retn
seg000:35C8 sub_35C0        endp
seg000:35C8
seg000:35C9
seg000:35C9 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:35C9
seg000:35C9
seg000:35C9 sub_35C9        proc near               ; CODE XREF: SET_UP__sub_3256+3Ep
seg000:35C9                                         ; sub_35C0+4p ...
seg000:35C9                 sub     cx, cx
seg000:35CB                 dec     cx
seg000:35CC                 mov     si, di
seg000:35CE                 repne scasb
seg000:35D0                 dec     dx
seg000:35D1                 jnz     short sub_35C9
seg000:35D3                 dec     di
seg000:35D4                 mov     cx, di
seg000:35D6                 sub     cx, si
seg000:35D8                 retn
seg000:35D8 sub_35C9        endp
seg000:35D8
seg000:35D9
seg000:35D9 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:35D9
seg000:35D9
seg000:35D9 sub_35D9        proc near               ; CODE XREF: SET_UP__sub_2CDA+14p
seg000:35D9                                         ; SET_UP__sub_2CDA+26p
seg000:35D9                 mov     di, si
seg000:35DB                 repne scasw
seg000:35DD                 cmp     ax, es:[di-2]
seg000:35E1                 clc
seg000:35E2                 jnz     short locret_35E5
seg000:35E4                 cmc
seg000:35E5
seg000:35E5 locret_35E5:                            ; CODE XREF: sub_35D9+9j
seg000:35E5                 retn
seg000:35E5 sub_35D9        endp
seg000:35E5
seg000:35E6
seg000:35E6 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:35E6
seg000:35E6
seg000:35E6 SET_UP__sub_35E6 proc near              ; CODE XREF: SET_UP_LOWER_DISPLAY__sub_304D+12p
seg000:35E6                                         ; SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+41p
seg000:35E6                 push    bx
seg000:35E7                 cld
seg000:35E8                 test    dl, dl
seg000:35EA                 jz      short loc_3601
seg000:35EC                 push    es
seg000:35ED                 push    ss
seg000:35EE                 pop     es
seg000:35EF                 mov     al, 0FFh
seg000:35F1
seg000:35F1 loc_35F1:                               ; CODE XREF: SET_UP__sub_35E6+18j
seg000:35F1                 mov     si, di
seg000:35F3                 mov     ch, al
seg000:35F5                 repne scasb
seg000:35F7                 mov     bx, di
seg000:35F9                 mov     di, ss:[bx]
seg000:35FC                 dec     dl
seg000:35FE                 jnz     short loc_35F1
seg000:3600                 pop     es
seg000:3601
seg000:3601 loc_3601:                               ; CODE XREF: SET_UP__sub_35E6+4j
seg000:3601                 pop     bx
seg000:3602                 retn
seg000:3602 SET_UP__sub_35E6 endp
seg000:3602
seg000:3603
seg000:3603 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3603
seg000:3603
seg000:3603 SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603 proc near
seg000:3603                                         ; CODE XREF: SET_UP_MAIN__sub_2CB2+Fp
seg000:3603                                         ; SET_UP_CHANGE_HALFBYTE__sub_3138+3p ...
seg000:3603                 push    dx
seg000:3604                 push    bx
seg000:3605                 mov     bx, ds:word_1EC8
seg000:3609                 push    di
seg000:360A                 push    ds
seg000:360B                 push    es
seg000:360C                 push    cs
seg000:360D                 pop     es
seg000:360E                 push    cs
seg000:360F                 pop     ds
seg000:3610                 mov     si, 0B6AAh
seg000:3613                 mov     dh, bh
seg000:3615                 sub     bh, bh
seg000:3617                 mov     al, [bx+si]
seg000:3619                 add     al, dh
seg000:361B                 sub     ah, ah
seg000:361D                 mov     word ptr ss:unk_1ECA, ax
seg000:3621                 mov     al, byte ptr ss:aVRscep+4
seg000:3625                 dec     ax
seg000:3626                 test    bx, bx
seg000:3628                 jz      short loc_362E  ;
seg000:3628                                         ;
seg000:362A                 mov     al, [bx-496Dh]
seg000:362E
seg000:362E loc_362E:                               ; CODE XREF: SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+25j
seg000:362E                 mov     byte ptr ss:unk_1ECC, al
seg000:3632                 mov     di, word ptr ss:unk_1ECD
seg000:3637                 xchg    bl, dh
seg000:3639                 add     di, bx
seg000:363B                 cmp     dh, 1
seg000:363E                 jbe     short loc_3647  ;
seg000:363E                                         ;
seg000:3640                 mov     dl, bl
seg000:3642                 sub     di, bx
seg000:3644                 call    SET_UP__sub_35E6
seg000:3647
seg000:3647 loc_3647:                               ; CODE XREF: SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+3Bj
seg000:3647                 mov     word ptr ss:unk_1ECF, di
seg000:364C                 push    cs
seg000:364D                 pop     es
seg000:364E                 mov     di, 0B699h
seg000:3651                 mov     dl, dh
seg000:3653                 mov     al, 0FFh
seg000:3655                 inc     dx
seg000:3656                 call    sub_35C0
seg000:3659                 cmp     bl, cl
seg000:365B                 jb      short loc_365F  ;
seg000:365B                                         ;
seg000:365D                 sub     bl, bl
seg000:365F
seg000:365F loc_365F:                               ; CODE XREF: SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+58j
seg000:365F                 mov     dl, [bx+si]
seg000:3661                 mov     di, 8B90h
seg000:3664                 mov     al, 0FFh
seg000:3666                 inc     dx
seg000:3667                 call    sub_35C0
seg000:366A                 mov     ax, [si]
seg000:366C                 pop     es
seg000:366D                 pop     ds
seg000:366E                 mov     word ptr ds:unk_1ED1, ax
seg000:3671                 inc     si
seg000:3672                 inc     si
seg000:3673                 mov     word ptr ds:unk_1ED3, si
seg000:3677                 call    ASK_NVM_87_8A_CURSOR_SCREEN__sub_2F87
seg000:367A                 mov     al, 0Eh
seg000:367C                 cmp     byte ptr ds:word_1EC8, 1
seg000:3681                 jnz     short loc_368C  ;
seg000:3681                                         ;
seg000:3683                 test    byte ptr ds:word_1EC8+1, 4
seg000:3688                 jz      short loc_368C
seg000:368A                 mov     al, 0Fh
seg000:368C
seg000:368C loc_368C:                               ; CODE XREF: SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+7Ej
seg000:368C                                         ; SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603+85j
seg000:368C                 mov     byte ptr ds:unk_1ED6, al
seg000:368F                 pop     di
seg000:3690                 pop     bx
seg000:3691                 pop     dx
seg000:3692                 retn
seg000:3692 SET_UP_DISPLAY_EDIT_HALFBYTE__sub_3603 endp
seg000:3692
seg000:3692 ; ---------------------------------------------------------------------------
seg000:3693                 db  50h ; P
seg000:3694                 db  1Ah
seg000:3695                 db    3
seg000:3696                 db    1
seg000:3697                 db    2
seg000:3698                 db    0
seg000:3699                 db    0
seg000:369A                 db 0FFh
seg000:369B                 db    1
seg000:369C                 db 0FFh
seg000:369D                 db    4
seg000:369E                 db    2
seg000:369F                 db    2
seg000:36A0                 db    5
seg000:36A1                 db 0FFh
seg000:36A2                 db    4
seg000:36A3                 db    3
seg000:36A4                 db 0FFh
seg000:36A5                 db    8
seg000:36A6                 db    7
seg000:36A7                 db    7
seg000:36A8                 db 0FFh
seg000:36A9                 db    9
seg000:36AA                 db    0
seg000:36AB                 db  84h ; ä
seg000:36AC                 db 0A0h ; á
seg000:36AD                 db 0A5h ; Ñ
seg000:36AE                 db 0A7h ; º
seg000:36AF                 db 0ABh ; ½
seg000:36B0 ; ---------------------------------------------------------------------------
seg000:36B0
seg000:36B0                 public KBD_LOOP__loc_36B0
seg000:36B0 KBD_LOOP__loc_36B0:                     ; CODE XREF: seg000:003Cj
seg000:36B0                                         ; seg000:36E0j
seg000:36B0                 mov     bx, 0FB7h
seg000:36B3                 mov     cl, [bx]
seg000:36B5                 and     cl, cl
seg000:36B7                 jz      short loc_36CE  ;
seg000:36B7                                         ;
seg000:36B9                 dec     byte ptr [bx]
seg000:36BB                 inc     byte ptr ds:aScrollRate+2 ; DS:0FBC
seg000:36BF                 add     bl, byte ptr ds:aScrollRate+2
seg000:36C3                 adc     bh, 0
seg000:36C6                 mov     al, [bx]
seg000:36C8                 mov     dl, byte ptr ds:aBildlaufRate+0Ah ; DS:0FED
seg000:36CC                 stc
seg000:36CD                 retn
seg000:36CE ; ---------------------------------------------------------------------------
seg000:36CE
seg000:36CE loc_36CE:                               ; CODE XREF: seg000:36B7j
seg000:36CE                 mov     ax, word ptr ds:aScrollRate+3 ; DS:0FBD
seg000:36D1                 and     ax, ax
seg000:36D3                 jz      short loc_36DD  ;
seg000:36D3                                         ;
seg000:36D5                 sub     dx, dx
seg000:36D7                 mov     word ptr ds:aScrollRate+3, dx ; DS:0FBD
seg000:36DB                 stc
seg000:36DC                 retn
seg000:36DD ; ---------------------------------------------------------------------------
seg000:36DD
seg000:36DD loc_36DD:                               ; CODE XREF: seg000:36D3j
seg000:36DD                 call    ConsoleLev2Stat__sub_36E3
seg000:36E0                 jb      short KBD_LOOP__loc_36B0
seg000:36E2                 retn
seg000:36E3
seg000:36E3 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:36E3
seg000:36E3
seg000:36E3 ConsoleLev2Stat__sub_36E3 proc near     ; CODE XREF: seg000:0039j
seg000:36E3                                         ; seg000:loc_36DDp
seg000:36E3                 mov     cl, byte ptr ds:aVolAlarme+8 ; DS:0FB7
seg000:36E7                 and     cl, cl
seg000:36E9                 jz      short KBD__loc_36F1
seg000:36EB
seg000:36EB KBD__loc_36EB:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+13j
seg000:36EB                 mov     dl, byte ptr ds:aBildlaufRate+0Ah ; DS:0FED
seg000:36EF                 stc
seg000:36F0                 retn
seg000:36F1 ; ---------------------------------------------------------------------------
seg000:36F1
seg000:36F1 KBD__loc_36F1:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+6j
seg000:36F1                 cmp     word ptr ds:aScrollRate+3, 0 ; DS:0FCD
seg000:36F6                 jnz     short KBD__loc_36EB
seg000:36F8                 cmp     byte ptr ds:aScrollRate+5, 0 ; DS:0FCF
seg000:36FD                 jz      short KBD_call_ConsoleLev1I__loc_3744 ;
seg000:36FD                                         ;
seg000:36FF                 mov     si, 0FD0h
seg000:3702                 mov     di, 0FB7h
seg000:3705                 mov     cx, 15h
seg000:3708                 cld
seg000:3709                 mov     bx, es
seg000:370B                 mov     ax, ds
seg000:370D                 mov     es, ax
seg000:370F                 rep movsb
seg000:3711                 mov     es, bx
seg000:3713                 mov     byte ptr ds:aScrollRate+2, cl ; DS:0FCC
seg000:3717                 mov     byte ptr ds:aScrollRate+5, cl ; DS:0FCF
seg000:371B                 mov     byte ptr ds:aBildlaufRate+0Ah, cl ; DS:0FED
seg000:371F                 mov     cl, byte ptr ds:aVolAlarme+8 ; DS:0FB7
seg000:3723                 mov     byte ptr ds:aBildlaufRate+0Ah, cl ; DS:0FED
seg000:3727                 mov     dl, cl
seg000:3729                 mov     byte ptr ds:aScrollRate+2, 0 ; DS:0FCC
seg000:372E                 test    byte ptr es:SET_UP_SUB__loc_2EF7+1, 20h
seg000:3734                 jz      short KBD__loc_3742 ;
seg000:3734                                         ;
seg000:3736                 or      byte ptr es:SET_UP_SUB__loc_2EF7+1, 80h
seg000:373C                 and     byte ptr es:SET_UP_SUB__loc_2EF7+1, 0DFh
seg000:3742
seg000:3742 KBD__loc_3742:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+51j
seg000:3742                 stc
seg000:3743                 retn
seg000:3744 ; ---------------------------------------------------------------------------
seg000:3744
seg000:3744 KBD_call_ConsoleLev1I__loc_3744:        ; CODE XREF: ConsoleLev2Stat__sub_36E3+1Aj
seg000:3744                                         ; ConsoleLev2Stat__sub_36E3+AAj
seg000:3744                 mov     byte ptr ds:aBildlaufRate+0Ah, 0 ; DS:0FED
seg000:3749                 call    j_ConsoleLev1In__sub_1F6F
seg000:374C                 jb      short KBD__loc_374F ;
seg000:374C                                         ;
seg000:374E                 retn
seg000:374F ; ---------------------------------------------------------------------------
seg000:374F
seg000:374F KBD__loc_374F:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+69j
seg000:374F                 test    ah, 1
seg000:3752                 jz      short KBD__loc_3773
seg000:3754                 cmp     al, 0E7h ; 'þ'
seg000:3756                 jz      short KBD__loc_376A
seg000:3758                 cmp     al, 85h ; 'à'
seg000:375A                 jnz     short KBD__loc_3773 ;
seg000:375A                                         ;
seg000:375C                 or      word ptr ds:loc_1FFB+3, 80h ; DS:1FFE
seg000:3762                 test    word ptr ds:loc_1FFB+3, 1 ;  "
seg000:3768                 jz      short KBD__loc_3781
seg000:376A
seg000:376A KBD__loc_376A:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+73j
seg000:376A                 mov     word ptr ds:aScrollRate+3, ax ; DS:0FCD
seg000:376D                 sub     cl, cl
seg000:376F                 sub     dl, dl
seg000:3771                 stc
seg000:3772                 retn
seg000:3773 ; ---------------------------------------------------------------------------
seg000:3773
seg000:3773 KBD__loc_3773:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+6Fj
seg000:3773                                         ; ConsoleLev2Stat__sub_36E3+77j
seg000:3773                 call    sub_1E09
seg000:3776                 jb      short KBD__loc_3781 ;
seg000:3776                                         ;
seg000:3778                 push    ax
seg000:3779                 mov     al, 0A7h ; 'º'  ;  0xa7    /* emit a bell */
seg000:377B                 call    j_KBD_CMD_AL__sub_2846
seg000:377E                 pop     ax
seg000:377F                 clc
seg000:3780                 retn
seg000:3781 ; ---------------------------------------------------------------------------
seg000:3781
seg000:3781 KBD__loc_3781:                          ; CODE XREF: ConsoleLev2Stat__sub_36E3+85j
seg000:3781                                         ; ConsoleLev2Stat__sub_36E3+93j
seg000:3781                 mov     bx, 0FB7h
seg000:3784                 call    sub_2B47
seg000:3787                 mov     cl, byte ptr ds:aVolAlarme+8 ; DS:0FB7
seg000:378B                 and     cl, cl
seg000:378D                 jz      short KBD_call_ConsoleLev1I__loc_3744 ;
seg000:378D                                         ;
seg000:378F                 sub     dl, dl
seg000:3791                 mov     byte ptr ds:aScrollRate+2, dl ; DS:0FCC
seg000:3795                 stc
seg000:3796                 retn
seg000:3796 ConsoleLev2Stat__sub_36E3 endp
seg000:3796
seg000:3797 ; ---------------------------------------------------------------------------
seg000:3797
seg000:3797 INIT_KBD_VARS_loc_3797:                 ; CODE XREF: seg000:0036j
seg000:3797                 sub     ax, ax
seg000:3799                 mov     byte ptr ds:aVolAlarme+8, al ; DS:0FB7
seg000:379C                 mov     word ptr ds:aScrollRate+3, ax ; DS:0FCD
seg000:379F                 mov     byte ptr ds:aScrollRate+5, al ; DS:0FCF
seg000:37A2                 retn
seg000:37A3 ; ---------------------------------------------------------------------------
seg000:37A3
seg000:37A3 VIDEO_to_PRN1__loc_37A3:                ; CODE XREF: seg000:003Fj
seg000:37A3                 mov     al, byte ptr ds:aProtocol+2
seg000:37A6                 mov     byte ptr ds:aBaudEmpf_+0Bh, al
seg000:37A9                 test    byte ptr es:TXT_GRAFIX_8084+0Fh, 1 ; 0x93 PRINT EXTENT (0=SCROLL REGION / 1 = FULL SCREEN)
seg000:37AF                 jz      short PRINT_SCROLL_REGION__loc_37B7 ;
seg000:37AF                                         ;
seg000:37B1                 mov     dx, 118h
seg000:37B4                 jmp     loc_37BF
seg000:37B7 ; ---------------------------------------------------------------------------
seg000:37B7
seg000:37B7 PRINT_SCROLL_REGION__loc_37B7:          ; CODE XREF: seg000:37AFj
seg000:37B7                 mov     dl, byte ptr ds:aCharUse+2 ; DS:0F59
seg000:37BB                 mov     dh, byte ptr ds:aCharUse+1 ; DS:0F58
seg000:37BF
seg000:37BF loc_37BF:                               ; CODE XREF: seg000:37B4j
seg000:37BF                                         ; seg000:37DBj
seg000:37BF                 test    byte ptr ds:loc_1FFB+3, 1
seg000:37C4                 jz      short loc_37CD  ;
seg000:37C4                                         ;
seg000:37C6                 test    byte ptr ds:unk_1EF8, 40h
seg000:37CB                 jnz     short locret_37EC
seg000:37CD
seg000:37CD loc_37CD:                               ; CODE XREF: seg000:37C4j
seg000:37CD                 push    dx
seg000:37CE                 call    HANDLE_VIDEO_RAM__sub_380B
seg000:37D1                 mov     al, 0Ah
seg000:37D3                 call    SEND_TO_PRN2__sub_38E9
seg000:37D6                 pop     dx
seg000:37D7                 inc     dh
seg000:37D9                 cmp     dh, dl
seg000:37DB                 jle     short loc_37BF  ;
seg000:37DB                                         ;
seg000:37DD                 mov     al, byte ptr ds:aProtocol+2
seg000:37E0                 cmp     al, byte ptr ds:aBaudEmpf_+0Bh
seg000:37E4                 jz      short loc_37E9  ;
seg000:37E4                                         ;
seg000:37E6                 call    PRN1__sub_38CE
seg000:37E9
seg000:37E9 loc_37E9:                               ; CODE XREF: seg000:37E4j
seg000:37E9                 call    PRN_TERM_CHAR__sub_383B
seg000:37EC
seg000:37EC locret_37EC:                            ; CODE XREF: seg000:37CBj
seg000:37EC                 retn
seg000:37ED ; ---------------------------------------------------------------------------
seg000:37ED
seg000:37ED VIDEO_to_PRN2__loc_37ED:                ; CODE XREF: seg000:0042j
seg000:37ED                 push    ax
seg000:37EE                 push    bx
seg000:37EF                 push    cx
seg000:37F0                 push    dx
seg000:37F1                 mov     al, byte ptr ds:aProtocol+2
seg000:37F4                 mov     byte ptr ds:aBaudEmpf_+0Bh, al
seg000:37F7                 call    HANDLE_VIDEO_RAM__sub_380B
seg000:37FA                 mov     al, byte ptr ds:aProtocol+2
seg000:37FD                 cmp     al, byte ptr ds:aBaudEmpf_+0Bh
seg000:3801                 jz      short loc_3806  ;
seg000:3801                                         ;
seg000:3803                 call    PRN1__sub_38CE
seg000:3806
seg000:3806 loc_3806:                               ; CODE XREF: seg000:3801j
seg000:3806                 pop     dx
seg000:3807                 pop     cx
seg000:3808                 pop     bx
seg000:3809                 pop     ax
seg000:380A                 retn
seg000:380B
seg000:380B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:380B
seg000:380B
seg000:380B HANDLE_VIDEO_RAM__sub_380B proc near    ; CODE XREF: seg000:37CEp
seg000:380B                                         ; seg000:37F7p
seg000:380B                 call    near ptr 8036h  ; F4036 - ; GET VIDEO RAM *OFFSET* FOR BEGINNING OF LINE (= dh).
seg000:380B                                         ; PARAMETER = DH (line number; beginning with 1)
seg000:380B                                         ; => RESULT : BX  (Hi Lo)
seg000:380B                                         ;
seg000:380B                                         ; Example: DH = 01 / BX = 00 12
seg000:380E                 mov     bp, bx
seg000:3810                 dec     bp
seg000:3811
seg000:3811 loc_3811:                               ; CODE XREF: HANDLE_VIDEO_RAM__sub_380B+Cj
seg000:3811                 inc     bp
seg000:3812                 cmp     byte ptr ds:[bp+0], 0FFh ; increment / search for end of line character (FF)
seg000:3817                 jnz     short loc_3811
seg000:3819
seg000:3819 loc_3819:                               ; CODE XREF: HANDLE_VIDEO_RAM__sub_380B+14j
seg000:3819                                         ; HANDLE_VIDEO_RAM__sub_380B+1Bj
seg000:3819                 dec     bp
seg000:381A                 cmp     byte ptr ds:[bp+0], 0 ;         decrement / skip 00 bytes
seg000:381F                 jz      short loc_3819
seg000:3821                 cmp     byte ptr ds:[bp+0], 20h ; ' ' ; also skip spaces ($20)
seg000:3826                 jz      short loc_3819
seg000:3828
seg000:3828 loc_3828:                               ; CODE XREF: HANDLE_VIDEO_RAM__sub_380B+29j
seg000:3828                 cmp     bx, bp
seg000:382A                 ja      short loc_3836  ;
seg000:382A                                         ;
seg000:382C                 mov     al, [bx]
seg000:382E                 push    bx
seg000:382F                 call    sub_3849
seg000:3832                 pop     bx
seg000:3833                 inc     bx
seg000:3834                 jmp     short loc_3828
seg000:3836 ; ---------------------------------------------------------------------------
seg000:3836
seg000:3836 loc_3836:                               ; CODE XREF: HANDLE_VIDEO_RAM__sub_380B+1Fj
seg000:3836                 mov     al, 0Dh
seg000:3838                 jmp     SEND_TO_PRN2__sub_38E9
seg000:3838 HANDLE_VIDEO_RAM__sub_380B endp
seg000:3838
seg000:383B
seg000:383B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:383B
seg000:383B
seg000:383B PRN_TERM_CHAR__sub_383B proc near       ; CODE XREF: seg000:loc_37E9p
seg000:383B                 test    byte ptr es:TXT_GRAFIX_8084+0Eh, 1 ; 0x92 PRINT TERM CHAR (0=NONE 1=FF)
seg000:3841                 jz      short locret_3848 ;
seg000:3841                                         ;
seg000:3843                 mov     al, 0Ch
seg000:3845                 call    SEND_TO_PRN2__sub_38E9
seg000:3848
seg000:3848 locret_3848:                            ; CODE XREF: PRN_TERM_CHAR__sub_383B+6j
seg000:3848                 retn
seg000:3848 PRN_TERM_CHAR__sub_383B endp
seg000:3848
seg000:3849
seg000:3849 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:3849
seg000:3849
seg000:3849 sub_3849        proc near               ; CODE XREF: HANDLE_VIDEO_RAM__sub_380B+24p
seg000:3849                 call    sub_388B
seg000:384C                 push    ax
seg000:384D                 mov     cl, byte ptr ds:aBaudEmpf_+0Bh
seg000:3851                 mov     bl, 1
seg000:3853                 shl     bl, cl
seg000:3855                 test    bl, ah
seg000:3857                 jnz     short loc_3879  ;
seg000:3857                                         ;
seg000:3859                 mov     bl, 1
seg000:385B                 test    byte ptr es:TXT_GRAFIX_8084+0Bh, 1 ; 0x8f DEFAULT CHAR SET (0=USASCII 1=UK)
seg000:3861                 jz      short loc_3865  ;
seg000:3861                                         ;
seg000:3863                 shl     bl, 1
seg000:3865
seg000:3865 loc_3865:                               ; CODE XREF: sub_3849+18j
seg000:3865                 test    bl, ah
seg000:3867                 jnz     short loc_386B
seg000:3869                 mov     bl, ah
seg000:386B
seg000:386B loc_386B:                               ; CODE XREF: sub_3849+1Ej
seg000:386B                 mov     al, 0FFh
seg000:386D
seg000:386D loc_386D:                               ; CODE XREF: sub_3849+28j
seg000:386D                 inc     al
seg000:386F                 shr     bl, 1
seg000:3871                 jnb     short loc_386D  ;
seg000:3871                                         ;
seg000:3873                 mov     byte ptr ds:aBaudEmpf_+0Bh, al
seg000:3876                 call    PRN1__sub_38CE
seg000:3879
seg000:3879 loc_3879:                               ; CODE XREF: sub_3849+Ej
seg000:3879                 pop     ax
seg000:387A                 test    ah, 80h
seg000:387D                 jz      short loc_3888  ;
seg000:387D                                         ;
seg000:387F                 cmp     byte ptr ds:aBaudEmpf_+0Bh, 1
seg000:3884                 jz      short loc_3888  ;
seg000:3884                                         ;
seg000:3886                 mov     al, 7Dh ; '}'
seg000:3888
seg000:3888 loc_3888:                               ; CODE XREF: sub_3849+34j
seg000:3888                                         ; sub_3849+3Bj
seg000:3888                 jmp     SEND_TO_PRN2__sub_38E9
seg000:3888 sub_3849        endp
seg000:3888
seg000:388B
seg000:388B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:388B
seg000:388B
seg000:388B sub_388B        proc near               ; CODE XREF: sub_3849p
seg000:388B                 cmp     al, 0
seg000:388D                 jnz     short loc_3894  ;
seg000:388D                                         ;
seg000:388F                 mov     al, 20h ; ' '
seg000:3891                 mov     ah, 1Fh
seg000:3893                 retn
seg000:3894 ; ---------------------------------------------------------------------------
seg000:3894
seg000:3894 loc_3894:                               ; CODE XREF: sub_388B+2j
seg000:3894                 cmp     al, 1Dh
seg000:3896                 ja      short loc_389D  ;
seg000:3896                                         ;
seg000:3898                 add     al, 5Fh ; '_'
seg000:389A                 mov     ah, 4
seg000:389C                 retn
seg000:389D ; ---------------------------------------------------------------------------
seg000:389D
seg000:389D loc_389D:                               ; CODE XREF: sub_388B+Bj
seg000:389D                 cmp     al, 1Eh
seg000:389F                 jnz     short loc_38A6  ;
seg000:389F                                         ;
seg000:38A1                 mov     al, 23h ; '#'
seg000:38A3                 mov     ah, 86h ; 'å'
seg000:38A5                 retn
seg000:38A6 ; ---------------------------------------------------------------------------
seg000:38A6
seg000:38A6 loc_38A6:                               ; CODE XREF: sub_388B+14j
seg000:38A6                 cmp     al, 1Fh
seg000:38A8                 jnz     short loc_38AF  ;
seg000:38A8                                         ;
seg000:38AA                 mov     al, 7Eh ; '~'
seg000:38AC                 mov     ah, 4
seg000:38AE                 retn
seg000:38AF ; ---------------------------------------------------------------------------
seg000:38AF
seg000:38AF loc_38AF:                               ; CODE XREF: sub_388B+1Dj
seg000:38AF                 cmp     al, 22h ; '"'
seg000:38B1                 ja      short loc_38B6  ;
seg000:38B1                                         ;
seg000:38B3                 mov     ah, 7
seg000:38B5                 retn
seg000:38B6 ; ---------------------------------------------------------------------------
seg000:38B6
seg000:38B6 loc_38B6:                               ; CODE XREF: sub_388B+26j
seg000:38B6                 cmp     al, 23h ; '#'
seg000:38B8                 jnz     short loc_38BD  ;
seg000:38B8                                         ;
seg000:38BA                 mov     ah, 5
seg000:38BC                 retn
seg000:38BD ; ---------------------------------------------------------------------------
seg000:38BD
seg000:38BD loc_38BD:                               ; CODE XREF: sub_388B+2Dj
seg000:38BD                 cmp     al, 5Fh ; '_'
seg000:38BF                 ja      short loc_38C4  ;
seg000:38BF                                         ;
seg000:38C1                 mov     ah, 7
seg000:38C3                 retn
seg000:38C4 ; ---------------------------------------------------------------------------
seg000:38C4
seg000:38C4 loc_38C4:                               ; CODE XREF: sub_388B+34j
seg000:38C4                 cmp     al, 7Eh ; '~'
seg000:38C6                 ja      short loc_38CB  ;
seg000:38C6                                         ;
seg000:38C8                 mov     ah, 3
seg000:38CA                 retn
seg000:38CB ; ---------------------------------------------------------------------------
seg000:38CB
seg000:38CB loc_38CB:                               ; CODE XREF: sub_388B+3Bj
seg000:38CB                 mov     ah, 1Fh
seg000:38CD                 retn
seg000:38CD sub_388B        endp
seg000:38CD
seg000:38CE
seg000:38CE ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:38CE
seg000:38CE
seg000:38CE PRN1__sub_38CE  proc near               ; CODE XREF: seg000:37E6p
seg000:38CE                                         ; seg000:3803p ...
seg000:38CE                 mov     bl, al
seg000:38D0                 mov     al, 1Bh
seg000:38D2                 call    SEND_TO_PRN2__sub_38E9
seg000:38D5                 mov     al, 28h ; '('
seg000:38D7                 call    SEND_TO_PRN2__sub_38E9
seg000:38DA                 sub     bh, bh
seg000:38DC                 mov     al, cs:[bx-471Ch]
seg000:38E1                 jmp     SEND_TO_PRN2__sub_38E9
seg000:38E1 PRN1__sub_38CE  endp
seg000:38E1
seg000:38E1 ; ---------------------------------------------------------------------------
seg000:38E4                 db  42h ; B
seg000:38E5                 db  41h ; A
seg000:38E6                 db  30h ; 0
seg000:38E7                 db  31h ; 1
seg000:38E8                 db  32h ; 2
seg000:38E9
seg000:38E9 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
seg000:38E9
seg000:38E9
seg000:38E9 SEND_TO_PRN2__sub_38E9 proc near        ; CODE XREF: seg000:0045j
seg000:38E9                                         ; seg000:37D3p ...
seg000:38E9                 xchg    ah, al
seg000:38EB
seg000:38EB loc_38EB:                               ; CODE XREF: SEND_TO_PRN2__sub_38E9+13j
seg000:38EB                 test    byte ptr ds:loc_1FFB+3, 1
seg000:38F0                 jz      short loc_38F9  ;
seg000:38F0                                         ;
seg000:38F2                 test    byte ptr ds:unk_1EF8, 40h
seg000:38F7                 jnz     short locret_3903
seg000:38F9
seg000:38F9 loc_38F9:                               ; CODE XREF: SEND_TO_PRN2__sub_38E9+7j
seg000:38F9                 call    near ptr 807Bh  ; F407B - [PRINTER CONTROL / STATUS]
seg000:38F9                                         ; Gets data from port 43 (hex).
seg000:38F9                                         ; = PRINTER CONTROL / STATUS REGISTER (7201);   RO/WO.
seg000:38FC                 jnb     short loc_38EB  ;
seg000:38FC                                         ;
seg000:38FE                 xchg    ah, al
seg000:3900                 call    near ptr 8078h  ; F4078 - [PRINTER DATA]
seg000:3900                                         ; Writes to port 41 (hex).
seg000:3900                                         ; = PRINTER DATA REGISTER (7201);   RO/WO.
seg000:3903
seg000:3903 locret_3903:                            ; CODE XREF: SEND_TO_PRN2__sub_38E9+Ej
seg000:3903                 retn
seg000:3903 SEND_TO_PRN2__sub_38E9 endp
seg000:3903
seg000:3903 ; ---------------------------------------------------------------------------
seg000:3904                 db 77h dup(0FFh)
seg000:397B                 db 0FFh
seg000:397C                 db 0FFh
seg000:397D                 db 0F3h ; ¾
seg000:397E                 db  18h
seg000:397F                 db  66h ; f
seg000:3980                 db 0FFh                 ; *** Copied to Z80 memory by boot rom procedure LOAD_AX_CX_to_Z80 ***
seg000:3981                 db 0FFh
seg000:3982                 db 0FFh
seg000:3983                 db 0FFh
seg000:3984                 db 0FFh
seg000:3985                 db 0F3h ; ¾
seg000:3986                 db  18h
seg000:3987                 db  76h ; v
seg000:3988                 db 0FFh
seg000:3989                 db 0FFh
seg000:398A                 db 0FFh
seg000:398B                 db 0FFh
seg000:398C                 db 0FFh
seg000:398D                 db 0F3h ; ¾             ; Image of Z80A RAM space to be loaded
seg000:398E                 db  18h
seg000:398F                 db  6Eh ; n
seg000:3990                 db 0FFh
seg000:3991                 db 0FFh
seg000:3992                 db 0FFh
seg000:3993                 db 0FFh
seg000:3994                 db 0FFh
seg000:3995                 db 0F3h ; ¾
seg000:3996                 db  18h
seg000:3997                 db  66h ; f
seg000:3998                 db 0FFh
seg000:3999                 db 0FFh
seg000:399A                 db 0FFh
seg000:399B                 db 0FFh
seg000:399C                 db 0FFh
seg000:399D                 db 0F3h ; ¾
seg000:399E                 db  18h
seg000:399F                 db  5Eh ; ^
seg000:39A0                 db 0FFh
seg000:39A1                 db 0FFh
seg000:39A2                 db 0FFh
seg000:39A3                 db 0FFh
seg000:39A4                 db 0FFh
seg000:39A5                 db 0F3h ; ¾
seg000:39A6                 db  18h
seg000:39A7                 db  56h ; V
seg000:39A8                 db 0FFh
seg000:39A9                 db 0FFh
seg000:39AA                 db 0FFh
seg000:39AB                 db 0FFh
seg000:39AC                 db 0FFh
seg000:39AD                 db 0F3h ; ¾
seg000:39AE                 db  18h
seg000:39AF                 db  55h ; U
seg000:39B0                 db 0FFh
seg000:39B1                 db 0FFh
seg000:39B2                 db 0FFh
seg000:39B3                 db 0FFh
seg000:39B4                 db 0FFh
seg000:39B5                 db 0F3h ; ¾
seg000:39B6                 db  18h
seg000:39B7                 db  46h ; F
seg000:39B8                 db 0FFh
seg000:39B9                 db 0FFh
seg000:39BA                 db 0FFh
seg000:39BB                 db 0FFh
seg000:39BC                 db 0FFh
seg000:39BD                 db 0FFh
seg000:39BE                 db 0FFh
seg000:39BF                 db 0FFh
seg000:39C0                 db 0FFh
seg000:39C1                 db 0FFh
seg000:39C2                 db 0FFh
seg000:39C3                 db 0FFh
seg000:39C4                 db 0FFh
seg000:39C5                 db 0FFh
seg000:39C6                 db 0FFh
seg000:39C7                 db 0FFh
seg000:39C8                 db 0FFh
seg000:39C9                 db 0FFh
seg000:39CA                 db 0FFh
seg000:39CB                 db 0FFh
seg000:39CC                 db 0FFh
seg000:39CD                 db 0FFh
seg000:39CE                 db 0FFh
seg000:39CF                 db 0FFh
seg000:39D0                 db 0FFh
seg000:39D1                 db 0FFh
seg000:39D2                 db 0FFh
seg000:39D3                 db 0FFh
seg000:39D4                 db 0FFh
seg000:39D5                 db 0FFh
seg000:39D6                 db 0FFh
seg000:39D7                 db 0FFh
seg000:39D8                 db 0FFh
seg000:39D9                 db 0FFh
seg000:39DA                 db 0FFh
seg000:39DB                 db 0FFh
seg000:39DC                 db 0FFh
seg000:39DD                 db 0FFh
seg000:39DE                 db 0FFh
seg000:39DF                 db 0FFh
seg000:39E0                 db 0FFh
seg000:39E1                 db 0FFh
seg000:39E2                 db 0FFh
seg000:39E3                 db 0F3h ; ¾
seg000:39E4                 db  18h
seg000:39E5                 db  18h
seg000:39E6                 db  3Eh ; >
seg000:39E7                 db 0D0h ; ð
seg000:39E8                 db 0D3h ; Ë
seg000:39E9                 db  60h ; `
seg000:39EA                 db 0EDh ; Ý
seg000:39EB                 db  46h ; F
seg000:39EC                 db  3Ah ; :
seg000:39ED                 db 0F0h ; ­
seg000:39EE                 db 0FFh
seg000:39EF                 db 0CBh ; -
seg000:39F0                 db  77h ; w             ; Z80 boot loader to read track 0, sector 1 of a disk.
seg000:39F0                                         ;
seg000:39F0                                         ; The boot loader loads 512 bytes from the specified drive,
seg000:39F0                                         ;  track 0, sector 1 into shared RAM beginning at $1000 and
seg000:39F0                                         ;  jumps to it (secondary boot). The loaded data must be Z80
seg000:39F0                                         ;  instructions beginning with DI (f3).
seg000:39F0                                         ;
seg000:39F0                                         ; If not, a value of 4 appears in the semaphore location
seg000:39F0                                         ;  at 0:FFF (initially set to 0). A value of 2 indicates CRC
seg000:39F0                                         ;  errors, 6 means DRIVE NOT READY.
seg000:39F1                 db  20h
seg000:39F2                 db  0Bh
seg000:39F3                 db 0CBh ; -
seg000:39F4                 db 0F7h ; ¸
seg000:39F5                 db  32h ; 2
seg000:39F6                 db 0F0h ; ­
seg000:39F7                 db 0FFh
seg000:39F8                 db 0AFh ; »
seg000:39F9                 db  32h ; 2
seg000:39FA                 db 0F4h ; ¶
seg000:39FB                 db 0FFh
seg000:39FC                 db  18h
seg000:39FD                 db  0Fh
seg000:39FE                 db  3Eh ; >
seg000:39FF                 db 0E0h ; Ó
seg000:3A00                 db  32h ; 2
seg000:3A01                 db 0F0h ; ­
seg000:3A02                 db 0FFh
seg000:3A03                 db  18h
seg000:3A04                 db  35h ; 5
seg000:3A05                 db 0DBh ; ¦
seg000:3A06                 db  20h
seg000:3A07                 db 0CBh ; -
seg000:3A08                 db  4Fh ; O
seg000:3A09                 db  20h
seg000:3A0A                 db 0F3h ; ¾
seg000:3A0B                 db 0DBh ; ¦
seg000:3A0C                 db    0
seg000:3A0D                 db  31h ; 1
seg000:3A0E                 db    0
seg000:3A0F                 db 0FFh
seg000:3A10                 db  3Ah ; :
seg000:3A11                 db 0F2h ; =
seg000:3A12                 db 0FFh
seg000:3A13                 db 0CBh ; -
seg000:3A14                 db  57h ; W
seg000:3A15                 db  28h ; (
seg000:3A16                 db  0Ch
seg000:3A17                 db  3Ah ; :
seg000:3A18                 db 0F6h ; ÷
seg000:3A19                 db 0FFh
seg000:3A1A                 db 0D3h ; Ë
seg000:3A1B                 db  40h ; @
seg000:3A1C                 db  3Eh ; >
seg000:3A1D                 db  70h ; p
seg000:3A1E                 db 0D3h ; Ë
seg000:3A1F                 db  20h
seg000:3A20                 db 0C3h ; +
seg000:3A21                 db 0B2h ; ¦
seg000:3A22                 db    2
seg000:3A23                 db  3Eh ; >
seg000:3A24                 db    0
seg000:3A25                 db 0D3h ; Ë
seg000:3A26                 db  40h ; @
seg000:3A27                 db  32h ; 2
seg000:3A28                 db 0F6h ; ÷
seg000:3A29                 db 0FFh
seg000:3A2A                 db 0DBh ; ¦
seg000:3A2B                 db  60h ; `
seg000:3A2C                 db 0C3h ; +
seg000:3A2D                 db 0C5h ; +
seg000:3A2E                 db    1
seg000:3A2F                 db 0CDh ; -
seg000:3A30                 db 0C3h ; +
seg000:3A31                 db    0
seg000:3A32                 db  3Ah ; :
seg000:3A33                 db 0F0h ; ­
seg000:3A34                 db 0FFh
seg000:3A35                 db 0E6h ; µ
seg000:3A36                 db  50h ; P
seg000:3A37                 db  32h ; 2
seg000:3A38                 db 0F0h ; ­
seg000:3A39                 db 0FFh
seg000:3A3A                 db 0FBh ; ¹
seg000:3A3B                 db 0DBh ; ¦
seg000:3A3C                 db    0
seg000:3A3D                 db 0D3h ; Ë
seg000:3A3E                 db    0
seg000:3A3F                 db  76h ; v
seg000:3A40                 db  3Ah ; :
seg000:3A41                 db 0F4h ; ¶
seg000:3A42                 db 0FFh
seg000:3A43                 db  3Ch ; <
seg000:3A44                 db  32h ; 2
seg000:3A45                 db 0F4h ; ¶
seg000:3A46                 db 0FFh
seg000:3A47                 db 0CBh ; -
seg000:3A48                 db  27h ; '
seg000:3A49                 db 0CBh ; -
seg000:3A4A                 db  27h ; '
seg000:3A4B                 db 0CBh ; -
seg000:3A4C                 db  27h ; '
seg000:3A4D                 db 0CBh ; -
seg000:3A4E                 db  27h ; '
seg000:3A4F                 db 0D3h ; Ë
seg000:3A50                 db  20h
seg000:3A51                 db 0C9h ; +
seg000:3A52                 db 0DBh ; ¦
seg000:3A53                 db  60h ; `
seg000:3A54                 db 0CBh ; -
seg000:3A55                 db  67h ; g
seg000:3A56                 db  20h
seg000:3A57                 db  0Bh
seg000:3A58                 db 0CBh ; -
seg000:3A59                 db  5Fh ; _
seg000:3A5A                 db  20h
seg000:3A5B                 db    7
seg000:3A5C                 db 0CBh ; -
seg000:3A5D                 db  47h ; G
seg000:3A5E                 db  20h
seg000:3A5F                 db    3
seg000:3A60                 db 0CBh ; -
seg000:3A61                 db  7Fh ; 
seg000:3A62                 db 0C8h ; +
seg000:3A63                 db  3Eh ; >
seg000:3A64                 db 0FFh
seg000:3A65                 db 0C9h ; +
seg000:3A66                 db 0DBh ; ¦
seg000:3A67                 db  60h ; `
seg000:3A68                 db 0CBh ; -
seg000:3A69                 db  47h ; G
seg000:3A6A                 db  20h
seg000:3A6B                 db  26h ; &
seg000:3A6C                 db 0CBh ; -
seg000:3A6D                 db  7Fh ; 
seg000:3A6E                 db 0C8h ; +
seg000:3A6F                 db 0DBh ; ¦
seg000:3A70                 db  20h
seg000:3A71                 db 0CBh ; -
seg000:3A72                 db  5Fh ; _
seg000:3A73                 db  28h ; (
seg000:3A74                 db  1Dh
seg000:3A75                 db  3Ah ; :
seg000:3A76                 db 0F2h ; =
seg000:3A77                 db 0FFh
seg000:3A78                 db 0CBh ; -
seg000:3A79                 db  57h ; W
seg000:3A7A                 db  28h ; (
seg000:3A7B                 db    7
seg000:3A7C                 db  3Eh ; >
seg000:3A7D                 db    6
seg000:3A7E                 db  32h ; 2
seg000:3A7F                 db 0FFh
seg000:3A80                 db  8Fh ; Å
seg000:3A81                 db  18h
seg000:3A82                 db  0Fh
seg000:3A83                 db  21h ; !
seg000:3A84                 db 0F1h ; ±
seg000:3A85                 db 0FFh
seg000:3A86                 db  36h ; 6
seg000:3A87                 db  3Ch ; <
seg000:3A88                 db  3Eh ; >
seg000:3A89                 db    6
seg000:3A8A                 db  32h ; 2
seg000:3A8B                 db 0F4h ; ¶
seg000:3A8C                 db 0FFh
seg000:3A8D                 db 0CDh ; -
seg000:3A8E                 db 0C3h ; +
seg000:3A8F                 db    0
seg000:3A90                 db  18h
seg000:3A91                 db  2Eh ; .
seg000:3A92                 db  3Eh ; >
seg000:3A93                 db 0D0h ; ð
seg000:3A94                 db 0D3h ; Ë
seg000:3A95                 db  60h ; `
seg000:3A96                 db 0CDh ; -
seg000:3A97                 db  6Bh ; k
seg000:3A98                 db    1
seg000:3A99                 db 0AFh ; »
seg000:3A9A                 db 0D3h ; Ë
seg000:3A9B                 db  60h ; `
seg000:3A9C                 db  18h
seg000:3A9D                 db  9Ch ; £
seg000:3A9E                 db 0DBh ; ¦
seg000:3A9F                 db  20h
seg000:3AA0                 db 0CBh ; -
seg000:3AA1                 db  6Fh ; o
seg000:3AA2                 db  20h
seg000:3AA3                 db  96h ; û
seg000:3AA4                 db 0CBh ; -
seg000:3AA5                 db  67h ; g
seg000:3AA6                 db  20h
seg000:3AA7                 db  92h ; Æ
seg000:3AA8                 db  18h
seg000:3AA9                 db  0Ah
seg000:3AAA                 db 0DBh ; ¦
seg000:3AAB                 db  20h
seg000:3AAC                 db 0CBh ; -
seg000:3AAD                 db  6Fh ; o
seg000:3AAE                 db  28h ; (
seg000:3AAF                 db  8Ah ; è
seg000:3AB0                 db 0CBh ; -
seg000:3AB1                 db  67h ; g
seg000:3AB2                 db  28h ; (
seg000:3AB3                 db  86h ; å
seg000:3AB4                 db 0DBh ; ¦
seg000:3AB5                 db  40h ; @
seg000:3AB6                 db 0E6h ; µ
seg000:3AB7                 db    3
seg000:3AB8                 db  4Fh ; O
seg000:3AB9                 db  3Ah ; :
seg000:3ABA                 db 0F6h ; ÷
seg000:3ABB                 db 0FFh
seg000:3ABC                 db 0B9h ; ¦
seg000:3ABD                 db 0C2h ; -
seg000:3ABE                 db 0BDh ; ¢
seg000:3ABF                 db    0
seg000:3AC0                 db  3Ah ; :
seg000:3AC1                 db 0F6h ; ÷
seg000:3AC2                 db 0FFh
seg000:3AC3                 db 0FEh ; ¦
seg000:3AC4                 db    0
seg000:3AC5                 db  20h
seg000:3AC6                 db    4
seg000:3AC7                 db  3Eh ; >
seg000:3AC8                 db 0C6h ; ã
seg000:3AC9                 db  18h
seg000:3ACA                 db    2
seg000:3ACB                 db  3Eh ; >
seg000:3ACC                 db 0CAh ; -
seg000:3ACD                 db  32h ; 2
seg000:3ACE                 db 0F0h ; ­
seg000:3ACF                 db 0FFh
seg000:3AD0                 db 0AFh ; »
seg000:3AD1                 db 0D3h ; Ë
seg000:3AD2                 db  60h ; `
seg000:3AD3                 db 0C3h ; +
seg000:3AD4                 db 0BDh ; ¢
seg000:3AD5                 db    0
seg000:3AD6                 db  3Ah ; :
seg000:3AD7                 db 0F2h ; =
seg000:3AD8                 db 0FFh
seg000:3AD9                 db 0CBh ; -
seg000:3ADA                 db  47h ; G
seg000:3ADB                 db 0C8h ; +
seg000:3ADC                 db 0CDh ; -
seg000:3ADD                 db 0C3h ; +
seg000:3ADE                 db    0
seg000:3ADF                 db 0C9h ; +
seg000:3AE0                 db  3Eh ; >
seg000:3AE1                 db    8
seg000:3AE2                 db 0D3h ; Ë
seg000:3AE3                 db  60h ; `
seg000:3AE4                 db 0CDh ; -
seg000:3AE5                 db  72h ; r
seg000:3AE6                 db    1
seg000:3AE7                 db 0C9h ; +
seg000:3AE8                 db  17h
seg000:3AE9                 db  1Fh
seg000:3AEA                 db  17h
seg000:3AEB                 db  1Fh
seg000:3AEC                 db  17h
seg000:3AED                 db  1Fh
seg000:3AEE                 db 0C9h ; +
seg000:3AEF                 db 0DDh ; ¦
seg000:3AF0                 db 0E5h ; Õ
seg000:3AF1                 db 0D5h ; i
seg000:3AF2                 db 0DDh ; ¦
seg000:3AF3                 db  21h ; !
seg000:3AF4                 db  80h ; Ç
seg000:3AF5                 db 0FFh
seg000:3AF6                 db  16h
seg000:3AF7                 db    0
seg000:3AF8                 db 0DBh ; ¦
seg000:3AF9                 db  40h ; @
seg000:3AFA                 db 0CBh ; -
seg000:3AFB                 db  77h ; w
seg000:3AFC                 db  20h
seg000:3AFD                 db  1Ah
seg000:3AFE                 db 0DDh ; ¦
seg000:3AFF                 db 0CBh ; -
seg000:3B00                 db    2
seg000:3B01                 db 0CEh ; +
seg000:3B02                 db 0DDh ; ¦
seg000:3B03                 db 0CBh ; -
seg000:3B04                 db    2
seg000:3B05                 db 0CEh ; +
seg000:3B06                 db  15h
seg000:3B07                 db  20h
seg000:3B08                 db 0EFh ; ´
seg000:3B09                 db  3Eh ; >
seg000:3B0A                 db    0
seg000:3B0B                 db 0BDh ; ¢
seg000:3B0C                 db  28h ; (
seg000:3B0D                 db    3
seg000:3B0E                 db  2Dh ; -
seg000:3B0F                 db  20h
seg000:3B10                 db 0E7h ; þ
seg000:3B11                 db  2Dh ; -
seg000:3B12                 db 0BCh ; +
seg000:3B13                 db  28h ; (
seg000:3B14                 db    3
seg000:3B15                 db  25h ; %
seg000:3B16                 db  18h
seg000:3B17                 db 0E0h ; Ó
seg000:3B18                 db 0D1h ; Ð
seg000:3B19                 db 0DDh ; ¦
seg000:3B1A                 db 0E1h ; ß
seg000:3B1B                 db 0C9h ; +
seg000:3B1C                 db    0
seg000:3B1D                 db    1
seg000:3B1E                 db    2
seg000:3B1F                 db    4
seg000:3B20                 db    8
seg000:3B21                 db  10h
seg000:3B22                 db  20h
seg000:3B23                 db  40h ; @
seg000:3B24                 db  80h ; Ç
seg000:3B25                 db  55h ; U
seg000:3B26                 db 0AAh ; ¬
seg000:3B27                 db 0FFh
seg000:3B28                 db    0
seg000:3B29                 db  4Fh ; O
seg000:3B2A                 db  13h
seg000:3B2B                 db  36h ; 6
seg000:3B2C                 db  27h ; '
seg000:3B2D                 db    0
seg000:3B2E                 db  50h ; P
seg000:3B2F                 db  3Ch ; <
seg000:3B30                 db  28h ; (
seg000:3B31                 db  14h
seg000:3B32                 db    0
seg000:3B33                 db  31h ; 1
seg000:3B34                 db    1
seg000:3B35                 db  37h ; 7
seg000:3B36                 db  67h ; g
seg000:3B37                 db    5
seg000:3B38                 db  49h ; I
seg000:3B39                 db  42h ; B
seg000:3B3A                 db    9
seg000:3B3B                 db  17h
seg000:3B3C                 db  62h ; b
seg000:3B3D                 db    4
seg000:3B3E                 db    9
seg000:3B3F                 db  3Eh ; >
seg000:3B40                 db    8
seg000:3B41                 db    0
seg000:3B42                 db  3Eh ; >
seg000:3B43                 db 0C1h ; -
seg000:3B44                 db  32h ; 2
seg000:3B45                 db 0F0h ; ­
seg000:3B46                 db 0FFh
seg000:3B47                 db  3Eh ; >
seg000:3B48                 db    4
seg000:3B49                 db 0D3h ; Ë
seg000:3B4A                 db  40h ; @
seg000:3B4B                 db 0CDh ; -
seg000:3B4C                 db 0E9h ; Ú
seg000:3B4D                 db    0
seg000:3B4E                 db  0Eh
seg000:3B4F                 db  61h ; a
seg000:3B50                 db 0EDh ; Ý
seg000:3B51                 db  78h ; x
seg000:3B52                 db    6
seg000:3B53                 db  1Ah
seg000:3B54                 db 0DDh ; ¦
seg000:3B55                 db  21h ; !
seg000:3B56                 db  9Fh ; ƒ
seg000:3B57                 db    1
seg000:3B58                 db  21h ; !
seg000:3B59                 db  9Fh ; ƒ
seg000:3B5A                 db    1
seg000:3B5B                 db 0EDh ; Ý
seg000:3B5C                 db 0A3h ; ú
seg000:3B5D                 db 0CDh ; -
seg000:3B5E                 db  6Bh ; k
seg000:3B5F                 db    1
seg000:3B60                 db 0EDh ; Ý
seg000:3B61                 db  78h ; x
seg000:3B62                 db 0DDh ; ¦
seg000:3B63                 db 0BEh ; ¥
seg000:3B64                 db    0
seg000:3B65                 db 0C2h ; -
seg000:3B66                 db 0BDh ; ¢
seg000:3B67                 db    0
seg000:3B68                 db 0DDh ; ¦
seg000:3B69                 db  23h ; #
seg000:3B6A                 db 0AFh ; »
seg000:3B6B                 db  10h
seg000:3B6C                 db 0EEh ; ¯
seg000:3B6D                 db  0Ch
seg000:3B6E                 db  3Eh ; >
seg000:3B6F                 db  64h ; d
seg000:3B70                 db 0B9h ; ¦
seg000:3B71                 db  20h
seg000:3B72                 db 0DFh ; ¯
seg000:3B73                 db 0CDh ; -
seg000:3B74                 db  59h ; Y
seg000:3B75                 db    1
seg000:3B76                 db  3Eh ; >
seg000:3B77                 db  28h ; (
seg000:3B78                 db 0D3h ; Ë
seg000:3B79                 db  60h ; `
seg000:3B7A                 db  21h ; !
seg000:3B7B                 db    2
seg000:3B7C                 db    0
seg000:3B7D                 db 0CDh ; -
seg000:3B7E                 db  72h ; r
seg000:3B7F                 db    1
seg000:3B80                 db 0DBh ; ¦
seg000:3B81                 db  60h ; `
seg000:3B82                 db 0CBh ; -
seg000:3B83                 db  6Fh ; o
seg000:3B84                 db 0C2h ; -
seg000:3B85                 db 0BDh ; ¢
seg000:3B86                 db    0
seg000:3B87                 db  2Eh ; .
seg000:3B88                 db  4Ah ; J
seg000:3B89                 db 0CDh ; -
seg000:3B8A                 db  72h ; r
seg000:3B8B                 db    1
seg000:3B8C                 db 0DBh ; ¦
seg000:3B8D                 db  60h ; `
seg000:3B8E                 db 0CBh ; -
seg000:3B8F                 db  6Fh ; o
seg000:3B90                 db 0C2h ; -
seg000:3B91                 db 0BDh ; ¢
seg000:3B92                 db    0
seg000:3B93                 db  2Eh ; .
seg000:3B94                 db  78h ; x
seg000:3B95                 db 0CDh ; -
seg000:3B96                 db  72h ; r
seg000:3B97                 db    1
seg000:3B98                 db 0DBh ; ¦
seg000:3B99                 db  60h ; `
seg000:3B9A                 db 0CBh ; -
seg000:3B9B                 db  6Fh ; o
seg000:3B9C                 db 0CAh ; -
seg000:3B9D                 db 0BDh ; ¢
seg000:3B9E                 db    0
seg000:3B9F                 db 0CDh ; -
seg000:3BA0                 db  59h ; Y
seg000:3BA1                 db    1
seg000:3BA2                 db 0C3h ; +
seg000:3BA3                 db 0B5h ; Á
seg000:3BA4                 db    0
seg000:3BA5                 db  3Eh ; >
seg000:3BA6                 db 0C1h ; -
seg000:3BA7                 db  32h ; 2
seg000:3BA8                 db 0F0h ; ­
seg000:3BA9                 db 0FFh
seg000:3BAA                 db  3Eh ; >
seg000:3BAB                 db    4
seg000:3BAC                 db 0D3h ; Ë
seg000:3BAD                 db  40h ; @
seg000:3BAE                 db    1
seg000:3BAF                 db    2
seg000:3BB0                 db    0
seg000:3BB1                 db  21h ; !
seg000:3BB2                 db    0
seg000:3BB3                 db  90h ; É
seg000:3BB4                 db 0AFh ; »
seg000:3BB5                 db  77h ; w
seg000:3BB6                 db  23h ; #
seg000:3BB7                 db  10h
seg000:3BB8                 db 0FCh ; ³
seg000:3BB9                 db  0Dh
seg000:3BBA                 db  20h
seg000:3BBB                 db 0F9h ; ¨
seg000:3BBC                 db  3Eh ; >
seg000:3BBD                 db    5
seg000:3BBE                 db 0D3h ; Ë
seg000:3BBF                 db  61h ; a
seg000:3BC0                 db  3Eh ; >
seg000:3BC1                 db    6
seg000:3BC2                 db 0D3h ; Ë
seg000:3BC3                 db  62h ; b
seg000:3BC4                 db  0Eh
seg000:3BC5                 db  63h ; c
seg000:3BC6                 db  21h ; !
seg000:3BC7                 db    0
seg000:3BC8                 db  90h ; É
seg000:3BC9                 db  3Eh ; >
seg000:3BCA                 db  80h ; Ç
seg000:3BCB                 db 0D3h ; Ë
seg000:3BCC                 db  60h ; `
seg000:3BCD                 db 0DBh ; ¦
seg000:3BCE                 db  40h ; @
seg000:3BCF                 db  87h ; ç
seg000:3BD0                 db 0FAh ; ·
seg000:3BD1                 db 0F9h ; ¨
seg000:3BD2                 db    1
seg000:3BD3                 db  30h ; 0
seg000:3BD4                 db 0F8h ; °
seg000:3BD5                 db 0EDh ; Ý
seg000:3BD6                 db 0A2h ; ó
seg000:3BD7                 db  18h
seg000:3BD8                 db 0F4h ; ¶
seg000:3BD9                 db 0DBh ; ¦
seg000:3BDA                 db  60h ; `
seg000:3BDB                 db 0CBh ; -
seg000:3BDC                 db  67h ; g
seg000:3BDD                 db 0C2h ; -
seg000:3BDE                 db 0BDh ; ¢
seg000:3BDF                 db    0
seg000:3BE0                 db 0CBh ; -
seg000:3BE1                 db  5Fh ; _
seg000:3BE2                 db 0C2h ; -
seg000:3BE3                 db 0BDh ; ¢
seg000:3BE4                 db    0
seg000:3BE5                 db 0CBh ; -
seg000:3BE6                 db  57h ; W
seg000:3BE7                 db 0C2h ; -
seg000:3BE8                 db 0BDh ; ¢
seg000:3BE9                 db    0
seg000:3BEA                 db    1
seg000:3BEB                 db    0
seg000:3BEC                 db    2
seg000:3BED                 db  21h ; !
seg000:3BEE                 db    0
seg000:3BEF                 db  90h ; É
seg000:3BF0                 db  3Eh ; >
seg000:3BF1                 db 0E5h ; Õ
seg000:3BF2                 db 0EDh ; Ý
seg000:3BF3                 db 0A1h ; í
seg000:3BF4                 db 0C2h ; -
seg000:3BF5                 db 0BDh ; ¢
seg000:3BF6                 db    0
seg000:3BF7                 db 0EAh ; Û
seg000:3BF8                 db  12h
seg000:3BF9                 db    2
seg000:3BFA                 db 0C3h ; +
seg000:3BFB                 db 0B2h ; ¦
seg000:3BFC                 db    0
seg000:3BFD                 db  3Ah ; :
seg000:3BFE                 db 0F2h ; =
seg000:3BFF                 db 0FFh
seg000:3C00                 db 0CBh ; -
seg000:3C01                 db  4Fh ; O
seg000:3C02                 db 0C2h ; -
seg000:3C03                 db  57h ; W
seg000:3C04                 db    2
seg000:3C05                 db  11h
seg000:3C06                 db    0
seg000:3C07                 db    8
seg000:3C08                 db  0Eh
seg000:3C09                 db 0FFh
seg000:3C0A                 db 0A8h ; ¿
seg000:3C0B                 db  1Ch
seg000:3C0C                 db  78h ; x
seg000:3C0D                 db 0B2h ; ¦
seg000:3C0E                 db 0D3h ; Ë
seg000:3C0F                 db  40h ; @
seg000:3C10                 db  3Eh ; >
seg000:3C11                 db 0D4h ; È
seg000:3C12                 db 0D3h ; Ë
seg000:3C13                 db  60h ; `
seg000:3C14                 db  21h ; !
seg000:3C15                 db  25h ; %
seg000:3C16                 db    0
seg000:3C17                 db 0CDh ; -
seg000:3C18                 db  72h ; r
seg000:3C19                 db    1
seg000:3C1A                 db 0DBh ; ¦
seg000:3C1B                 db  60h ; `
seg000:3C1C                 db 0CBh ; -
seg000:3C1D                 db  4Fh ; O
seg000:3C1E                 db  28h ; (
seg000:3C1F                 db  49h ; I
seg000:3C20                 db    4
seg000:3C21                 db  3Eh ; >
seg000:3C22                 db    2
seg000:3C23                 db 0BBh ; +
seg000:3C24                 db  20h
seg000:3C25                 db 0E5h ; Õ
seg000:3C26                 db  7Ah ; z
seg000:3C27                 db 0FEh ; ¦
seg000:3C28                 db  10h
seg000:3C29                 db  28h ; (
seg000:3C2A                 db  15h
seg000:3C2B                 db  78h ; x
seg000:3C2C                 db 0D3h ; Ë
seg000:3C2D                 db  40h ; @
seg000:3C2E                 db  2Eh ; .
seg000:3C2F                 db 0FFh
seg000:3C30                 db 0CDh ; -
seg000:3C31                 db  63h ; c
seg000:3C32                 db    1
seg000:3C33                 db 0DBh ; ¦
seg000:3C34                 db  60h ; `
seg000:3C35                 db 0CBh ; -
seg000:3C36                 db  57h ; W
seg000:3C37                 db  28h ; (
seg000:3C38                 db    7
seg000:3C39                 db  0Eh
seg000:3C3A                 db    0
seg000:3C3B                 db  11h
seg000:3C3C                 db    0
seg000:3C3D                 db  10h
seg000:3C3E                 db  18h
seg000:3C3F                 db 0CBh ; -
seg000:3C40                 db  16h
seg000:3C41                 db 0FFh
seg000:3C42                 db 0AFh ; »
seg000:3C43                 db 0D3h ; Ë
seg000:3C44                 db  40h ; @
seg000:3C45                 db  2Eh ; .
seg000:3C46                 db  50h ; P
seg000:3C47                 db 0CDh ; -
seg000:3C48                 db  63h ; c
seg000:3C49                 db    1
seg000:3C4A                 db    6
seg000:3C4B                 db  18h
seg000:3C4C                 db  3Eh ; >
seg000:3C4D                 db  48h ; H
seg000:3C4E                 db 0D3h ; Ë
seg000:3C4F                 db  60h ; `
seg000:3C50                 db  2Eh ; .
seg000:3C51                 db    1
seg000:3C52                 db 0CDh ; -
seg000:3C53                 db  72h ; r
seg000:3C54                 db    1
seg000:3C55                 db  10h
seg000:3C56                 db 0F5h ; §
seg000:3C57                 db 0AFh ; »
seg000:3C58                 db 0B9h ; ¦
seg000:3C59                 db  20h
seg000:3C5A                 db  34h ; 4
seg000:3C5B                 db 0BAh ; ¦
seg000:3C5C                 db  16h
seg000:3C5D                 db    0
seg000:3C5E                 db  3Eh ; >
seg000:3C5F                 db    2
seg000:3C60                 db  20h
seg000:3C61                 db 0E1h ; ß
seg000:3C62                 db  2Eh ; .
seg000:3C63                 db  26h ; &
seg000:3C64                 db 0CDh ; -
seg000:3C65                 db  63h ; c
seg000:3C66                 db    1
seg000:3C67                 db  18h
seg000:3C68                 db  26h ; &
seg000:3C69                 db  78h ; x
seg000:3C6A                 db 0F6h ; ÷
seg000:3C6B                 db    4
seg000:3C6C                 db 0D3h ; Ë
seg000:3C6D                 db  40h ; @
seg000:3C6E                 db  3Eh ; >
seg000:3C6F                 db 0A0h ; á
seg000:3C70                 db 0D3h ; Ë
seg000:3C71                 db  60h ; `
seg000:3C72                 db  2Eh ; .
seg000:3C73                 db    1
seg000:3C74                 db 0CDh ; -
seg000:3C75                 db  72h ; r
seg000:3C76                 db    1
seg000:3C77                 db 0DBh ; ¦
seg000:3C78                 db  60h ; `
seg000:3C79                 db 0CBh ; -
seg000:3C7A                 db  77h ; w
seg000:3C7B                 db  28h ; (
seg000:3C7C                 db  0Ch
seg000:3C7D                 db  3Eh ; >
seg000:3C7E                 db  10h
seg000:3C7F                 db 0D3h ; Ë
seg000:3C80                 db  20h
seg000:3C81                 db  3Eh ; >
seg000:3C82                 db 0F0h ; ­
seg000:3C83                 db  32h ; 2
seg000:3C84                 db 0F0h ; ­
seg000:3C85                 db 0FFh
seg000:3C86                 db 0C3h ; +
seg000:3C87                 db  15h
seg000:3C88                 db    1
seg000:3C89                 db  3Eh ; >
seg000:3C8A                 db 0D0h ; ð
seg000:3C8B                 db 0D3h ; Ë
seg000:3C8C                 db  60h ; `
seg000:3C8D                 db  18h
seg000:3C8E                 db  91h ; æ
seg000:3C8F                 db  3Eh ; >
seg000:3C90                 db 0C1h ; -
seg000:3C91                 db  32h ; 2
seg000:3C92                 db 0F0h ; ­
seg000:3C93                 db 0FFh
seg000:3C94                 db 0AFh ; »
seg000:3C95                 db  32h ; 2
seg000:3C96                 db 0F1h ; ±
seg000:3C97                 db 0FFh
seg000:3C98                 db  3Ah ; :
seg000:3C99                 db 0F6h ; ÷
seg000:3C9A                 db 0FFh
seg000:3C9B                 db 0F6h ; ÷
seg000:3C9C                 db    4
seg000:3C9D                 db 0D3h ; Ë
seg000:3C9E                 db  40h ; @
seg000:3C9F                 db 0CDh ; -
seg000:3CA0                 db 0E9h ; Ú
seg000:3CA1                 db    0
seg000:3CA2                 db  21h ; !
seg000:3CA3                 db  50h ; P
seg000:3CA4                 db    0
seg000:3CA5                 db 0CDh ; -
seg000:3CA6                 db  63h ; c
seg000:3CA7                 db    1
seg000:3CA8                 db 0DBh ; ¦
seg000:3CA9                 db  60h ; `
seg000:3CAA                 db 0CBh ; -
seg000:3CAB                 db  57h ; W
seg000:3CAC                 db  28h ; (
seg000:3CAD                 db    9
seg000:3CAE                 db 0DBh ; ¦
seg000:3CAF                 db  61h ; a
seg000:3CB0                 db 0FEh ; ¦
seg000:3CB1                 db    0
seg000:3CB2                 db 0C2h ; -
seg000:3CB3                 db 0BDh ; ¢
seg000:3CB4                 db    0
seg000:3CB5                 db  18h
seg000:3CB6                 db  0Fh
seg000:3CB7                 db 0DBh ; ¦
seg000:3CB8                 db  20h
seg000:3CB9                 db 0CBh ; -
seg000:3CBA                 db  6Fh ; o
seg000:3CBB                 db 0CAh ; -
seg000:3CBC                 db 0BDh ; ¢
seg000:3CBD                 db    0
seg000:3CBE                 db 0CBh ; -
seg000:3CBF                 db  67h ; g
seg000:3CC0                 db 0CAh ; -
seg000:3CC1                 db 0BDh ; ¢
seg000:3CC2                 db    0
seg000:3CC3                 db 0C3h ; +
seg000:3CC4                 db  37h ; 7
seg000:3CC5                 db    1
seg000:3CC6                 db 0CDh ; -
seg000:3CC7                 db 0C3h ; +
seg000:3CC8                 db    0
seg000:3CC9                 db  21h ; !
seg000:3CCA                 db 0F1h ; ±
seg000:3CCB                 db 0FFh
seg000:3CCC                 db  36h ; 6
seg000:3CCD                 db  0Ah
seg000:3CCE                 db 0CDh ; -
seg000:3CCF                 db 0E9h ; Ú
seg000:3CD0                 db    0
seg000:3CD1                 db  3Eh ; >
seg000:3CD2                 db  58h ; X
seg000:3CD3                 db 0D3h ; Ë
seg000:3CD4                 db  60h ; `
seg000:3CD5                 db  21h ; !
seg000:3CD6                 db    1
seg000:3CD7                 db    0
seg000:3CD8                 db 0CDh ; -
seg000:3CD9                 db  72h ; r
seg000:3CDA                 db    1
seg000:3CDB                 db 0DBh ; ¦
seg000:3CDC                 db  60h ; `
seg000:3CDD                 db 0CBh ; -
seg000:3CDE                 db  57h ; W
seg000:3CDF                 db 0C2h ; -
seg000:3CE0                 db  21h ; !
seg000:3CE1                 db    1
seg000:3CE2                 db 0CDh ; -
seg000:3CE3                 db 0E9h ; Ú
seg000:3CE4                 db    0
seg000:3CE5                 db 0DBh ; ¦
seg000:3CE6                 db  61h ; a
seg000:3CE7                 db 0FEh ; ¦
seg000:3CE8                 db    1
seg000:3CE9                 db 0C2h ; -
seg000:3CEA                 db 0BDh ; ¢
seg000:3CEB                 db    0
seg000:3CEC                 db  3Eh ; >
seg000:3CED                 db  78h ; x
seg000:3CEE                 db 0D3h ; Ë
seg000:3CEF                 db  60h ; `
seg000:3CF0                 db  2Eh ; .
seg000:3CF1                 db    1
seg000:3CF2                 db 0CDh ; -
seg000:3CF3                 db  72h ; r
seg000:3CF4                 db    1
seg000:3CF5                 db 0DBh ; ¦
seg000:3CF6                 db  60h ; `
seg000:3CF7                 db 0CBh ; -
seg000:3CF8                 db  57h ; W
seg000:3CF9                 db 0CAh ; -
seg000:3CFA                 db  2Dh ; -
seg000:3CFB                 db    1
seg000:3CFC                 db 0CDh ; -
seg000:3CFD                 db 0E9h ; Ú
seg000:3CFE                 db    0
seg000:3CFF                 db 0DBh ; ¦
seg000:3D00                 db  61h ; a
seg000:3D01                 db 0FEh ; ¦
seg000:3D02                 db    0
seg000:3D03                 db 0C2h ; -
seg000:3D04                 db 0BDh ; ¢
seg000:3D05                 db    0
seg000:3D06                 db    6
seg000:3D07                 db  28h ; (
seg000:3D08                 db  3Eh ; >
seg000:3D09                 db  58h ; X
seg000:3D0A                 db 0D3h ; Ë
seg000:3D0B                 db  60h ; `
seg000:3D0C                 db  2Eh ; .
seg000:3D0D                 db    2
seg000:3D0E                 db 0CDh ; -
seg000:3D0F                 db  72h ; r
seg000:3D10                 db    1
seg000:3D11                 db  10h
seg000:3D12                 db 0F5h ; §
seg000:3D13                 db 0DBh ; ¦
seg000:3D14                 db  61h ; a
seg000:3D15                 db 0FEh ; ¦
seg000:3D16                 db  28h ; (
seg000:3D17                 db 0C2h ; -
seg000:3D18                 db 0BDh ; ¢
seg000:3D19                 db    0
seg000:3D1A                 db  2Eh ; .
seg000:3D1B                 db  24h ; $
seg000:3D1C                 db  3Eh ; >
seg000:3D1D                 db    8
seg000:3D1E                 db 0D3h ; Ë
seg000:3D1F                 db  60h ; `
seg000:3D20                 db 0CDh ; -
seg000:3D21                 db  72h ; r
seg000:3D22                 db    1
seg000:3D23                 db 0DBh ; ¦
seg000:3D24                 db  60h ; `
seg000:3D25                 db 0CBh ; -
seg000:3D26                 db  57h ; W
seg000:3D27                 db 0C2h ; -
seg000:3D28                 db  43h ; C
seg000:3D29                 db    1
seg000:3D2A                 db  2Eh ; .
seg000:3D2B                 db    3
seg000:3D2C                 db 0CDh ; -
seg000:3D2D                 db  72h ; r
seg000:3D2E                 db    1
seg000:3D2F                 db 0DBh ; ¦
seg000:3D30                 db  60h ; `
seg000:3D31                 db 0CBh ; -
seg000:3D32                 db  57h ; W
seg000:3D33                 db 0CAh ; -
seg000:3D34                 db  43h ; C
seg000:3D35                 db    1
seg000:3D36                 db 0CDh ; -
seg000:3D37                 db 0E9h ; Ú
seg000:3D38                 db    0
seg000:3D39                 db  3Ah ; :
seg000:3D3A                 db 0F6h ; ÷
seg000:3D3B                 db 0FFh
seg000:3D3C                 db 0FEh ; ¦
seg000:3D3D                 db    1
seg000:3D3E                 db  28h ; (
seg000:3D3F                 db  0Fh
seg000:3D40                 db  3Eh ; >
seg000:3D41                 db    1
seg000:3D42                 db  32h ; 2
seg000:3D43                 db 0F6h ; ÷
seg000:3D44                 db 0FFh
seg000:3D45                 db 0AFh ; »
seg000:3D46                 db  32h ; 2
seg000:3D47                 db 0F4h ; ¶
seg000:3D48                 db 0FFh
seg000:3D49                 db 0CDh ; -
seg000:3D4A                 db 0C3h ; +
seg000:3D4B                 db    0
seg000:3D4C                 db 0C3h ; +
seg000:3D4D                 db  57h ; W
seg000:3D4E                 db    2
seg000:3D4F                 db  3Ah ; :
seg000:3D50                 db 0F2h ; =
seg000:3D51                 db 0FFh
seg000:3D52                 db 0CBh ; -
seg000:3D53                 db  4Fh ; O
seg000:3D54                 db 0C2h ; -
seg000:3D55                 db 0B2h ; ¦
seg000:3D56                 db    0
seg000:3D57                 db  3Eh ; >
seg000:3D58                 db    6
seg000:3D59                 db  32h ; 2
seg000:3D5A                 db 0F4h ; ¶
seg000:3D5B                 db 0FFh
seg000:3D5C                 db 0AFh ; »
seg000:3D5D                 db 0D3h ; Ë
seg000:3D5E                 db  60h ; `
seg000:3D5F                 db 0C3h ; +
seg000:3D60                 db 0B2h ; ¦
seg000:3D61                 db    0
seg000:3D62                 db  3Eh ; >
seg000:3D63                 db 0C1h ; -
seg000:3D64                 db  32h ; 2
seg000:3D65                 db 0F0h ; ­
seg000:3D66                 db 0FFh
seg000:3D67                 db  3Eh ; >
seg000:3D68                 db  14h
seg000:3D69                 db  32h ; 2
seg000:3D6A                 db 0F1h ; ±
seg000:3D6B                 db 0FFh
seg000:3D6C                 db 0CDh ; -
seg000:3D6D                 db 0E9h ; Ú
seg000:3D6E                 db    0
seg000:3D6F                 db  3Ah ; :
seg000:3D70                 db 0F6h ; ÷
seg000:3D71                 db 0FFh
seg000:3D72                 db 0F6h ; ÷
seg000:3D73                 db    8
seg000:3D74                 db 0D3h ; Ë
seg000:3D75                 db  40h ; @
seg000:3D76                 db  21h ; !
seg000:3D77                 db  28h ; (
seg000:3D78                 db    0
seg000:3D79                 db 0CDh ; -
seg000:3D7A                 db  72h ; r
seg000:3D7B                 db    1
seg000:3D7C                 db 0DBh ; ¦
seg000:3D7D                 db  40h ; @
seg000:3D7E                 db 0CBh ; -
seg000:3D7F                 db  5Fh ; _
seg000:3D80                 db  20h
seg000:3D81                 db  22h ; "
seg000:3D82                 db    6
seg000:3D83                 db    0
seg000:3D84                 db  11h
seg000:3D85                 db 0BCh ; +
seg000:3D86                 db  20h
seg000:3D87                 db 0DDh ; ¦
seg000:3D88                 db  21h ; !
seg000:3D89                 db  80h ; Ç
seg000:3D8A                 db 0FFh
seg000:3D8B                 db  3Eh ; >
seg000:3D8C                 db 0D4h ; È
seg000:3D8D                 db 0D3h ; Ë
seg000:3D8E                 db  60h ; `
seg000:3D8F                 db  30h ; 0
seg000:3D90                 db    1
seg000:3D91                 db  3Fh ; ?
seg000:3D92                 db  21h ; !
seg000:3D93                 db    0
seg000:3D94                 db    0
seg000:3D95                 db 0DBh ; ¦
seg000:3D96                 db  40h ; @
seg000:3D97                 db 0CBh ; -
seg000:3D98                 db  77h ; w
seg000:3D99                 db  20h
seg000:3D9A                 db  22h ; "
seg000:3D9B                 db 0DDh ; ¦
seg000:3D9C                 db 0CBh ; -
seg000:3D9D                 db    2
seg000:3D9E                 db 0C6h ; ã
seg000:3D9F                 db  1Bh
seg000:3DA0                 db 0EDh ; Ý
seg000:3DA1                 db  5Ah ; Z
seg000:3DA2                 db  20h
seg000:3DA3                 db 0EEh ; ¯
seg000:3DA4                 db  3Ah ; :
seg000:3DA5                 db 0F6h ; ÷
seg000:3DA6                 db 0FFh
seg000:3DA7                 db 0D3h ; Ë
seg000:3DA8                 db  40h ; @
seg000:3DA9                 db 0FEh ; ¦
seg000:3DAA                 db    1
seg000:3DAB                 db  20h
seg000:3DAC                 db    8
seg000:3DAD                 db  3Eh ; >
seg000:3DAE                 db 0DAh ; +
seg000:3DAF                 db  32h ; 2
seg000:3DB0                 db 0F0h ; ­
seg000:3DB1                 db 0FFh
seg000:3DB2                 db 0C3h ; +
seg000:3DB3                 db  15h
seg000:3DB4                 db    1
seg000:3DB5                 db  3Eh ; >
seg000:3DB6                 db 0C6h ; ã
seg000:3DB7                 db  32h ; 2
seg000:3DB8                 db 0F0h ; ­
seg000:3DB9                 db 0FFh
seg000:3DBA                 db 0C3h ; +
seg000:3DBB                 db  15h
seg000:3DBC                 db    1
seg000:3DBD                 db 0CDh ; -
seg000:3DBE                 db 0C3h ; +
seg000:3DBF                 db    0
seg000:3DC0                 db 0DBh ; ¦
seg000:3DC1                 db  60h ; `
seg000:3DC2                 db  11h
seg000:3DC3                 db 0FDh ; ²
seg000:3DC4                 db 0DFh ; ¯
seg000:3DC5                 db  21h ; !
seg000:3DC6                 db    0
seg000:3DC7                 db    0
seg000:3DC8                 db 0DBh ; ¦
seg000:3DC9                 db  40h ; @
seg000:3DCA                 db 0CBh ; -
seg000:3DCB                 db  77h ; w
seg000:3DCC                 db  28h ; (
seg000:3DCD                 db    3
seg000:3DCE                 db    4
seg000:3DCF                 db 0DBh ; ¦
seg000:3DD0                 db  60h ; `
seg000:3DD1                 db 0DDh ; ¦
seg000:3DD2                 db 0CBh ; -
seg000:3DD3                 db    2
seg000:3DD4                 db 0C6h ; ã
seg000:3DD5                 db 0DDh ; ¦
seg000:3DD6                 db 0CBh ; -
seg000:3DD7                 db    2
seg000:3DD8                 db 0CEh ; +
seg000:3DD9                 db 0DDh ; ¦
seg000:3DDA                 db 0CBh ; -
seg000:3DDB                 db    2
seg000:3DDC                 db 0D6h ; Í
seg000:3DDD                 db 0DDh ; ¦
seg000:3DDE                 db 0CBh ; -
seg000:3DDF                 db    2
seg000:3DE0                 db 0DEh ; Ì
seg000:3DE1                 db 0DDh ; ¦
seg000:3DE2                 db 0CBh ; -
seg000:3DE3                 db    2
seg000:3DE4                 db 0E6h ; µ
seg000:3DE5                 db 0DDh ; ¦
seg000:3DE6                 db 0CBh ; -
seg000:3DE7                 db    2
seg000:3DE8                 db 0EEh ; ¯
seg000:3DE9                 db 0DDh ; ¦
seg000:3DEA                 db 0CBh ; -
seg000:3DEB                 db    2
seg000:3DEC                 db 0F6h ; ÷
seg000:3DED                 db 0DDh ; ¦
seg000:3DEE                 db 0CBh ; -
seg000:3DEF                 db    2
seg000:3DF0                 db 0FEh ; ¦
seg000:3DF1                 db  1Bh
seg000:3DF2                 db 0EDh ; Ý
seg000:3DF3                 db  5Ah ; Z
seg000:3DF4                 db  20h
seg000:3DF5                 db 0CFh ; ¤
seg000:3DF6                 db  78h ; x
seg000:3DF7                 db 0FEh ; ¦
seg000:3DF8                 db  14h
seg000:3DF9                 db  28h ; (
seg000:3DFA                 db  0Fh
seg000:3DFB                 db 0AFh ; »
seg000:3DFC                 db 0D3h ; Ë
seg000:3DFD                 db  40h ; @
seg000:3DFE                 db  21h ; !
seg000:3DFF                 db 0F1h ; ±
seg000:3E00                 db 0FFh
seg000:3E01                 db  36h ; 6
seg000:3E02                 db  1Eh
seg000:3E03                 db  3Eh ; >
seg000:3E04                 db 0D0h ; ð
seg000:3E05                 db 0D3h ; Ë
seg000:3E06                 db  60h ; `
seg000:3E07                 db 0C3h ; +
seg000:3E08                 db  43h ; C
seg000:3E09                 db    1
seg000:3E0A                 db  3Eh ; >
seg000:3E0B                 db 0D0h ; ð
seg000:3E0C                 db 0D3h ; Ë
seg000:3E0D                 db  60h ; `
seg000:3E0E                 db  3Ah ; :
seg000:3E0F                 db 0F6h ; ÷
seg000:3E10                 db 0FFh
seg000:3E11                 db 0D3h ; Ë
seg000:3E12                 db  40h ; @
seg000:3E13                 db 0CDh ; -
seg000:3E14                 db 0C3h ; +
seg000:3E15                 db    0
seg000:3E16                 db  21h ; !
seg000:3E17                 db 0F1h ; ±
seg000:3E18                 db 0FFh
seg000:3E19                 db  36h ; 6
seg000:3E1A                 db  28h ; (
seg000:3E1B                 db    6
seg000:3E1C                 db  28h ; (
seg000:3E1D                 db  1Eh
seg000:3E1E                 db    0
seg000:3E1F                 db  26h ; &
seg000:3E20                 db    0
seg000:3E21                 db  0Eh
seg000:3E22                 db  63h ; c
seg000:3E23                 db 0FDh ; ²
seg000:3E24                 db  21h ; !
seg000:3E25                 db 0B1h ; ¦
seg000:3E26                 db    1
seg000:3E27                 db 0DDh ; ¦
seg000:3E28                 db  21h ; !
seg000:3E29                 db 0ACh ; ¼
seg000:3E2A                 db    1
seg000:3E2B                 db 0DDh ; ¦
seg000:3E2C                 db  56h ; V
seg000:3E2D                 db    0
seg000:3E2E                 db 0EDh ; Ý
seg000:3E2F                 db  51h ; Q
seg000:3E30                 db  78h ; x
seg000:3E31                 db 0D3h ; Ë
seg000:3E32                 db  60h ; `
seg000:3E33                 db 0FDh ; ²
seg000:3E34                 db  6Eh ; n
seg000:3E35                 db    0
seg000:3E36                 db 0CDh ; -
seg000:3E37                 db  72h ; r
seg000:3E38                 db    1
seg000:3E39                 db 0CDh ; -
seg000:3E3A                 db 0D5h ; i
seg000:3E3B                 db    0
seg000:3E3C                 db 0FEh ; ¦
seg000:3E3D                 db 0FFh
seg000:3E3E                 db 0CAh ; -
seg000:3E3F                 db 0BDh ; ¢
seg000:3E40                 db    0
seg000:3E41                 db 0FDh ; ²
seg000:3E42                 db  23h ; #
seg000:3E43                 db 0DDh ; ¦
seg000:3E44                 db  23h ; #
seg000:3E45                 db 0DDh ; ¦
seg000:3E46                 db  7Eh ; ~
seg000:3E47                 db    0
seg000:3E48                 db 0FEh ; ¦
seg000:3E49                 db    0
seg000:3E4A                 db  20h
seg000:3E4B                 db 0DFh ; ¯
seg000:3E4C                 db 0CDh ; -
seg000:3E4D                 db 0C3h ; +
seg000:3E4E                 db    0
seg000:3E4F                 db  21h ; !
seg000:3E50                 db 0F1h ; ±
seg000:3E51                 db 0FFh
seg000:3E52                 db  36h ; 6
seg000:3E53                 db  32h ; 2
seg000:3E54                 db    6
seg000:3E55                 db    0
seg000:3E56                 db  3Eh ; >
seg000:3E57                 db  0Ch
seg000:3E58                 db 0D3h ; Ë
seg000:3E59                 db  60h ; `
seg000:3E5A                 db  21h ; !
seg000:3E5B                 db  50h ; P
seg000:3E5C                 db    0
seg000:3E5D                 db 0CDh ; -
seg000:3E5E                 db  72h ; r
seg000:3E5F                 db    1
seg000:3E60                 db 0DDh ; ¦
seg000:3E61                 db  21h ; !
seg000:3E62                 db 0B5h ; Á
seg000:3E63                 db    1
seg000:3E64                 db  11h
seg000:3E65                 db    0
seg000:3E66                 db  90h ; É
seg000:3E67                 db 0DDh ; ¦
seg000:3E68                 db  7Eh ; ~
seg000:3E69                 db    0
seg000:3E6A                 db 0D3h ; Ë
seg000:3E6B                 db  63h ; c
seg000:3E6C                 db  3Eh ; >
seg000:3E6D                 db  1Ch
seg000:3E6E                 db 0D3h ; Ë
seg000:3E6F                 db  60h ; `
seg000:3E70                 db  26h ; &
seg000:3E71                 db    0
seg000:3E72                 db 0DDh ; ¦
seg000:3E73                 db  23h ; #
seg000:3E74                 db 0DDh ; ¦
seg000:3E75                 db  6Eh ; n
seg000:3E76                 db    0
seg000:3E77                 db 0CDh ; -
seg000:3E78                 db  72h ; r
seg000:3E79                 db    1
seg000:3E7A                 db 0CDh ; -
seg000:3E7B                 db 0D5h ; i
seg000:3E7C                 db    0
seg000:3E7D                 db 0FEh ; ¦
seg000:3E7E                 db 0FFh
seg000:3E7F                 db  28h ; (
seg000:3E80                 db  66h ; f
seg000:3E81                 db 0DDh ; ¦
seg000:3E82                 db  23h ; #
seg000:3E83                 db 0DDh ; ¦
seg000:3E84                 db  7Eh ; ~
seg000:3E85                 db    0
seg000:3E86                 db 0D3h ; Ë
seg000:3E87                 db  62h ; b
seg000:3E88                 db 0DBh ; ¦
seg000:3E89 word_3E89       dw 2163h                ; DATA XREF: seg000:351Aw
seg000:3E8B                 db    0
seg000:3E8C                 db  90h ; É
seg000:3E8D                 db  0Eh
seg000:3E8E                 db  63h ; c
seg000:3E8F                 db  3Eh ; >
seg000:3E90                 db  80h ; Ç
seg000:3E91                 db 0D3h ; Ë
seg000:3E92                 db  60h ; `
seg000:3E93                 db 0DBh ; ¦
seg000:3E94                 db  40h ; @
seg000:3E95                 db  87h ; ç
seg000:3E96                 db 0FAh ; ·
seg000:3E97                 db    2
seg000:3E98                 db    3
seg000:3E99                 db  30h ; 0
seg000:3E9A                 db 0F8h ; °
seg000:3E9B                 db 0EDh ; Ý
seg000:3E9C                 db 0A2h ; ó
seg000:3E9D                 db  18h
seg000:3E9E                 db 0F4h ; ¶
seg000:3E9F                 db 0DBh ; ¦
seg000:3EA0                 db  60h ; `
seg000:3EA1                 db 0CBh ; -
seg000:3EA2                 db  67h ; g
seg000:3EA3                 db  20h
seg000:3EA4                 db  42h ; B
seg000:3EA5                 db 0CBh ; -
seg000:3EA6                 db  5Fh ; _
seg000:3EA7                 db  20h
seg000:3EA8                 db  3Eh ; >
seg000:3EA9                 db 0CBh ; -
seg000:3EAA                 db  57h ; W
seg000:3EAB                 db  20h
seg000:3EAC                 db  3Ah ; :
seg000:3EAD                 db  3Ah ; :
seg000:3EAE                 db 0F2h ; =
seg000:3EAF                 db 0FFh
seg000:3EB0                 db 0CBh ; -
seg000:3EB1                 db  57h ; W
seg000:3EB2                 db  20h
seg000:3EB3                 db  61h ; a
seg000:3EB4                 db 0EDh ; Ý
seg000:3EB5                 db  52h ; R
seg000:3EB6                 db 0AFh ; »
seg000:3EB7                 db 0BDh ; ¢
seg000:3EB8                 db 0C2h ; -
seg000:3EB9                 db 0BDh ; ¢
seg000:3EBA                 db    0
seg000:3EBB                 db  3Eh ; >
seg000:3EBC                 db    2
seg000:3EBD                 db 0BCh ; +
seg000:3EBE                 db 0C2h ; -
seg000:3EBF                 db 0BDh ; ¢
seg000:3EC0                 db    0
seg000:3EC1                 db 0DDh ; ¦
seg000:3EC2                 db  23h ; #
seg000:3EC3                 db 0DDh ; ¦
seg000:3EC4                 db  7Eh ; ~
seg000:3EC5                 db    0
seg000:3EC6                 db 0FEh ; ¦
seg000:3EC7                 db    0
seg000:3EC8                 db  20h
seg000:3EC9                 db  9Ah ; Ü
seg000:3ECA                 db  3Ah ; :
seg000:3ECB                 db 0F6h ; ÷
seg000:3ECC                 db 0FFh
seg000:3ECD                 db 0FEh ; ¦
seg000:3ECE                 db    1
seg000:3ECF                 db  28h ; (
seg000:3ED0                 db  10h
seg000:3ED1                 db  3Eh ; >
seg000:3ED2                 db    1
seg000:3ED3                 db  32h ; 2
seg000:3ED4                 db 0F6h ; ÷
seg000:3ED5                 db 0FFh
seg000:3ED6                 db  3Eh ; >
seg000:3ED7                 db    2
seg000:3ED8                 db  32h ; 2
seg000:3ED9                 db 0F4h ; ¶
seg000:3EDA                 db 0FFh
seg000:3EDB                 db 0CDh ; -
seg000:3EDC                 db 0C3h ; +
seg000:3EDD                 db    0
seg000:3EDE                 db 0C3h ; +
seg000:3EDF                 db 0C5h ; +
seg000:3EE0                 db    1
seg000:3EE1                 db 0AFh ; »
seg000:3EE2                 db 0D3h ; Ë
seg000:3EE3                 db  60h ; `
seg000:3EE4                 db 0C3h ; +
seg000:3EE5                 db 0B2h ; ¦
seg000:3EE6                 db    0
seg000:3EE7                 db  3Ah ; :
seg000:3EE8                 db 0F2h ; =
seg000:3EE9                 db 0FFh
seg000:3EEA                 db 0CBh ; -
seg000:3EEB                 db  57h ; W
seg000:3EEC                 db 0CAh ; -
seg000:3EED                 db  43h ; C
seg000:3EEE                 db    1
seg000:3EEF                 db 0DBh ; ¦
seg000:3EF0                 db  60h ; `
seg000:3EF1                 db 0CDh ; -
seg000:3EF2                 db 0EFh ; ´
seg000:3EF3                 db    0
seg000:3EF4                 db    4
seg000:3EF5                 db  3Eh ; >
seg000:3EF6                 db    4
seg000:3EF7                 db 0B8h ; ©
seg000:3EF8                 db  28h ; (
seg000:3EF9                 db  13h
seg000:3EFA                 db 0C5h ; +
seg000:3EFB                 db    6
seg000:3EFC                 db  25h ; %
seg000:3EFD                 db  3Eh ; >
seg000:3EFE                 db  58h ; X
seg000:3EFF                 db 0D3h ; Ë
seg000:3F00                 db  60h ; `
seg000:3F01                 db  21h ; !
seg000:3F02                 db    2
seg000:3F03                 db    0
seg000:3F04                 db 0CDh ; -
seg000:3F05                 db  72h ; r
seg000:3F06                 db    1
seg000:3F07                 db  10h
seg000:3F08                 db 0F4h ; ¶
seg000:3F09                 db 0C1h ; -
seg000:3F0A                 db 0C3h ; +
seg000:3F0B                 db 0B9h ; ¦
seg000:3F0C                 db    2
seg000:3F0D                 db  3Eh ; >
seg000:3F0E                 db    2
seg000:3F0F                 db  32h ; 2
seg000:3F10                 db 0FFh
seg000:3F11                 db  8Fh ; Å
seg000:3F12                 db 0C3h ; +
seg000:3F13                 db 0BDh ; ¢
seg000:3F14                 db    0
seg000:3F15                 db  3Ah ; :
seg000:3F16                 db    0
seg000:3F17                 db  90h ; É
seg000:3F18                 db 0FEh ; ¦
seg000:3F19                 db 0F3h ; ¾
seg000:3F1A                 db  28h ; (
seg000:3F1B                 db    8
seg000:3F1C                 db  3Eh ; >
seg000:3F1D                 db    4
seg000:3F1E                 db  32h ; 2
seg000:3F1F                 db 0FFh
seg000:3F20                 db  8Fh ; Å
seg000:3F21                 db 0C3h ; +
seg000:3F22                 db 0BDh ; ¢
seg000:3F23                 db    0
seg000:3F24                 db  11h
seg000:3F25                 db  94h ; ö
seg000:3F26                 db  83h ; â
seg000:3F27                 db  21h ; !
seg000:3F28                 db  94h ; ö
seg000:3F29                 db    3
seg000:3F2A                 db    1
seg000:3F2B                 db    3
seg000:3F2C                 db    0
seg000:3F2D                 db 0EDh ; Ý
seg000:3F2E                 db 0B0h ; ¦
seg000:3F2F                 db 0D3h ; Ë
seg000:3F30                 db  21h ; !
seg000:3F31                 db 0C3h ; +
seg000:3F32                 db    0
seg000:3F33                 db  10h
seg000:3F34                 db  11h
seg000:3F35                 db  22h ; "
seg000:3F36                 db    2
seg000:3F37                 db 0AFh ; »
seg000:3F38                 db  13h
seg000:3F39                 db  12h
seg000:3F3A                 db  3Eh ; >
seg000:3F3B                 db    8
seg000:3F3C                 db 0BAh ; ¦
seg000:3F3D                 db  20h
seg000:3F3E                 db 0F8h ; °
seg000:3F3F                 db  11h
seg000:3F40                 db    0
seg000:3F41                 db  80h ; Ç
seg000:3F42                 db  21h ; !
seg000:3F43                 db    0
seg000:3F44                 db    0
seg000:3F45                 db    1
seg000:3F46                 db    0
seg000:3F47                 db    8
seg000:3F48                 db 0EDh ; Ý
seg000:3F49                 db 0B0h ; ¦
seg000:3F4A                 db 0D3h ; Ë
seg000:3F4B                 db  21h ; !
seg000:3F4C                 db  31h ; 1
seg000:3F4D                 db 0F0h ; ­
seg000:3F4E                 db    7
seg000:3F4F                 db  11h
seg000:3F50                 db    0
seg000:3F51                 db    0
seg000:3F52                 db  21h ; !
seg000:3F53                 db    0
seg000:3F54                 db    0
seg000:3F55                 db  7Eh ; ~
seg000:3F56                 db 0ABh ; ½
seg000:3F57                 db  47h ; G
seg000:3F58                 db 0EAh ; Û
seg000:3F59                 db    2
seg000:3F5A                 db    2
seg000:3F5B                 db  7Ah ; z
seg000:3F5C                 db 0EEh ; ¯
seg000:3F5D                 db    1
seg000:3F5E                 db  5Fh ; _
seg000:3F5F                 db  78h ; x
seg000:3F60                 db  1Fh
seg000:3F61                 db 0A8h ; ¿
seg000:3F62                 db  1Fh
seg000:3F63                 db 0EEh ; ¯
seg000:3F64                 db 0C0h ; +
seg000:3F65                 db  57h ; W
seg000:3F66                 db  78h ; x
seg000:3F67                 db  17h
seg000:3F68                 db 0A8h ; ¿
seg000:3F69                 db  0Fh
seg000:3F6A                 db  0Fh
seg000:3F6B                 db 0E6h ; µ
seg000:3F6C                 db 0C0h ; +
seg000:3F6D                 db 0ABh ; ½
seg000:3F6E                 db  5Fh ; _
seg000:3F6F                 db  18h
seg000:3F70                 db    7
seg000:3F71                 db  5Ah ; Z
seg000:3F72                 db  1Fh
seg000:3F73                 db 0A8h ; ¿
seg000:3F74                 db  1Fh
seg000:3F75                 db 0B7h ; À
seg000:3F76                 db  18h
seg000:3F77                 db 0EDh ; Ý
seg000:3F78                 db  23h ; #
seg000:3F79                 db  3Eh ; >
seg000:3F7A                 db    8
seg000:3F7B                 db 0BCh ; +
seg000:3F7C                 db  20h
seg000:3F7D                 db 0D7h ; Î
seg000:3F7E                 db 0EDh ; Ý
seg000:3F7F                 db  53h ; S
seg000:3F80                 db    0
seg000:3F81                 db 0A0h ; á
seg000:3F82                 db  3Ah ; :
seg000:3F83                 db    0
seg000:3F84                 db 0B0h ; ¦
seg000:3F85                 db 0CBh ; -
seg000:3F86                 db  27h ; '
seg000:3F87                 db 0CBh ; -
seg000:3F88                 db  27h ; '
seg000:3F89                 db 0CBh ; -
seg000:3F8A                 db  27h ; '
seg000:3F8B                 db 0CBh ; -
seg000:3F8C                 db  27h ; '
seg000:3F8D                 db 0D3h ; Ë
seg000:3F8E                 db  21h ; !
seg000:3F8F                 db  18h
seg000:3F90                 db 0F1h ; ±
seg000:3F91                 db  0Eh
seg000:3F92                 db    0
seg000:3F93                 db    6
seg000:3F94                 db    0
seg000:3F95                 db  3Eh ; >
seg000:3F96                 db 0F0h ; ­
seg000:3F97                 db 0D3h ; Ë
seg000:3F98                 db  20h
seg000:3F99                 db  31h ; 1
seg000:3F9A                 db 0F0h ; ­
seg000:3F9B                 db  6Fh ; o
seg000:3F9C                 db 0FDh ; ²
seg000:3F9D                 db  21h ; !
seg000:3F9E                 db 0F0h ; ­
seg000:3F9F                 db 0FFh
seg000:3FA0                 db  0Ch
seg000:3FA1                 db  18h
seg000:3FA2                 db  2Ch ; ,
seg000:3FA3                 db  3Ch ; <
seg000:3FA4                 db  0Ch
seg000:3FA5                 db 0FDh ; ²
seg000:3FA6                 db  77h ; w
seg000:3FA7                 db    0
seg000:3FA8                 db  79h ; y
seg000:3FA9                 db 0FEh ; ¦
seg000:3FAA                 db    0
seg000:3FAB                 db  20h
seg000:3FAC                 db 0F3h ; ¾
seg000:3FAD                 db    4
seg000:3FAE                 db  3Eh ; >
seg000:3FAF                 db    2
seg000:3FB0                 db 0B8h ; ©
seg000:3FB1                 db  28h ; (
seg000:3FB2                 db 0E0h ; Ó
seg000:3FB3                 db 0C5h ; +
seg000:3FB4                 db  11h
seg000:3FB5                 db    0
seg000:3FB6                 db  80h ; Ç
seg000:3FB7                 db  21h ; !
seg000:3FB8                 db    0
seg000:3FB9                 db    0
seg000:3FBA                 db    1
seg000:3FBB                 db    0
seg000:3FBC                 db    8
seg000:3FBD                 db 0EDh ; Ý
seg000:3FBE                 db 0B0h ; ¦
seg000:3FBF                 db 0C1h ; -
seg000:3FC0                 db 0D3h ; Ë
seg000:3FC1                 db    0
seg000:3FC2                 db  3Eh ; >
seg000:3FC3                 db 0F0h ; ­
seg000:3FC4                 db 0D3h ; Ë
seg000:3FC5                 db  21h ; !
seg000:3FC6                 db  31h ; 1
seg000:3FC7                 db 0F0h ; ­
seg000:3FC8                 db    7
seg000:3FC9                 db 0FDh ; ²
seg000:3FCA                 db  21h ; !
seg000:3FCB                 db 0F0h ; ­
seg000:3FCC                 db  7Fh ; 
seg000:3FCD                 db  18h
seg000:3FCE                 db 0D1h ; Ð
seg000:3FCF                 db  16h
seg000:3FD0                 db  70h ; p
seg000:3FD1                 db 0FDh ; ²
seg000:3FD2                 db  7Eh ; ~
seg000:3FD3                 db    0
seg000:3FD4                 db 0B9h ; ¦
seg000:3FD5                 db  28h ; (
seg000:3FD6                 db 0CCh ; ¦
seg000:3FD7                 db  15h
seg000:3FD8                 db  20h
seg000:3FD9                 db 0F7h ; ¸
seg000:3FDA                 db  76h ; v
seg000:3FDB                 db 0FFh
seg000:3FDC                 db 0FFh
seg000:3FDD                 db 0C5h ; +
seg000:3FDE                 db    1
seg000:3FDF                 db  28h ; (
seg000:3FE0                 db    2
seg000:3FE1                 db  80h ; Ç
seg000:3FE2                 db    2
seg000:3FE3                 db 0E5h ; Õ
seg000:3FE4                 db    3
seg000:3FE5                 db 0B7h ; À
seg000:3FE6                 db    5
seg000:3FE7                 db 0B7h ; À
seg000:3FE8                 db    5
seg000:3FE9                 db  14h
seg000:3FEA                 db    6
seg000:3FEB                 db  14h
seg000:3FEC                 db    6
seg000:3FED                 db  5Eh ; ^
seg000:3FEE                 db    6
seg000:3FEF                 db 0FFh
seg000:3FF0                 db 0FAh ; ·
seg000:3FF1                 db 0EAh ; Û
seg000:3FF2                 db    0
seg000:3FF3                 db    0
seg000:3FF4                 db    0
seg000:3FF5                 db 0F4h ; ¶
seg000:3FF6                 db  1Ch
seg000:3FF7                 db  9Ah ; Ü
seg000:3FF8                 db    0
seg000:3FF9                 db    0
seg000:3FFA                 db    0
seg000:3FFB                 db    0
seg000:3FFC                 db    2
seg000:3FFD                 db    0
seg000:3FFE                 db  94h ; ö
seg000:3FFF                 db  97h ; ù
seg000:3FFF seg000          ends
seg000:3FFF
seg000:3FFF
seg000:3FFF                 end

