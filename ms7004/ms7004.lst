; Точка входа при старте
000:15		L_000	DIS	I	; Запретить прерывания
001:24 33		JMP	L_133	; На начальную инициализацию
; Точка входа при прерывании по входу INT (вход, данные от ЭВМ)
003:84 00	L_003	JMP	L_400	; На обработку прерывания
005:00			NOP
005:00			NOP
; Точка входа при прерывании по переполнению таймера
007:D5		L_007	SEL	RB1	; Выбрать банк регистров 1
008:05			EN	I	; Разрешить прерывания
009:B8 3A		MOV	R0,#3AH	; Сохранить A
00B:A0			MOV	@R0,A
00C:FA			MOV	A,R2	; Обрабатывается второй байт ?
00D:C6 17		JZ	L_017	; Нет
00F:EB 1B		DJNZ	R3,L_01B; Счетчик циклов ожидания не окончен
011:BA 00		MOV	R2,#0	; Не обрабатывать второй байт
013:BE B6		MOV	R6,#0B6H; Передать в ЭВМ код 0B6H
015:14 6C		CALL	L_06C	; (ошибка ожидания второго байта)
017:65		L_017	STOP	TCNT	; Остановить таймер
018:23 00		MOV	A,#0	; Занести 0 в счетчик таймера
01A:62 			MOV	T,A
01B:B8 3A	L_01B	MOV	R0,#3AH	; Восстановить A
01D:F0			MOV	A,@R0
01E:93 			RETR
; Подпрограмма очистки ОЗУ и регистров
01F:B9 20	L_01F	MOV	R1,#20H	; Объем ОЗУ - 32 байта
021:B8 20		MOV	R0,#20H	; Начальный адрес
023:B0 00	L_023	MOV	@R0,#0	; Очистка ячейки
025:18			INC	R0	; Перейти к следующему адресу
026:E9 23		DJNZ	R1,L_023 ; Цикл по R1
028:B8 00		MOV	R0,#0	; Очистить регистры банка 0
02A:B9 00		MOV	R1,#0
02C:BA 00		MOV	R2,#0
02D:BB 00		MOV	R3,#0
030:BC 00		MOV	R4,#0
032:BD 00		MOV	R5,#0
034:BE 00		MOV	R6,#0
036:BF 00		MOV	R7,#0
038:D5			SEL	RB1	; Выбрать банк регистров 1
039:B8 00		MOV	R0,#0	; Очистить регистры банка 1
03B:B9 00		MOV	R1,#0
03D:BA 00		MOV	R2,#0
03F:BB 00		MOV	R3,#0
041:BC 00		MOV	R4,#0
043:BD 00		MOV	R5,#0
045:BE 00		MOV	R6,#0
047:BF 00		MOV	R7,#0
049:C5			SEL	RB0	; Возврат к банку регистров 0
04A:93			RETR
                                       00 00 00 00 00
050:00 00 00 00 00 00 00 00 │ 00 00 00 00 00 00 00 00
060:00 00 00 00 00 00 00 00 │ 

; Подпрограмма передачи кода клавиши в ЭВМ, при входе в точку L_068 код
; содержится в ячейке с адресом 30H, при в точку L_06C - в R6
068:B8 30	L_068	MOV	R0,#30H	; Прочесть код клавиши из ячейки 30H
06A:F0			MOV	A,@R0
06B:AE			MOV	R6,A	; Занести в R6
06C:B8 25	L_06C	MOV	R0,#25
06E:F0			MOV	A,@R0
06F:72 94		JB3	L_094	; Вывод данных запрещен
071:B9 21		MOV	R1,#21H
073:F1			MOV	A,@R1	; Прочесть копию порта P1
074:53 7F		ANL	A,#7FH	; Сбросить старший бит (уст. старт-бит)
076:A1			MOV	@R1,A	; Сохранить копию порта
077:39			OUTL	P1,A	; Вывести старт-бит
078:BF 08		MOV	R7,#08H	; Количество выводимых бит данных
07A:BD 01	L_07A	MOV	R5,#01H ; Пауза на 46 маш.циклов (150 мкс)
07C:BC 15		MOV	R4,#15H
07E:14 C2		CALL	L_0C2
080:FE			MOV	A,R6	; Сдвинуть вправо код клавиши
081:77			RR	A	; Передача осуществляется с младшего
082:AE			MOV	R6,A	; бита
083:53 80		ANL	A,#80H	; Выделить старший бит
085:61			ADD	A,@R1	; Добавить значение бита в копию P1
086:39			OUTL	P1,A	; Вывести в порт P1
087:EF 7A		DJNZ	R7,L_07A; Цикл по кол-ву битов
089:BD 01		MOV	R5,#01H	; Пауза на50маш.циклов перед стоп-битом
08B:BC 17		MOV	R4,#17H
08D:14 C2		CALL	L_0C2
08F:23 80		MOV	A,#80H	; Вывести стоп-бит
091:61			ADD	A,@R1
092:39			OUTL	P1,A
093:A1			MOV	@R1,A
094:93		L_094	RETR
; Подпрограмма сброса триггера D11
095:89 10	L_095	ORL	P1,#10H	; Сбросить триггер через линию P14
097:99 EF		ANL	P1,#0EFH
099:93			RETR

                                    00 00 00 00 00 00
0A0:00 00 00 00 00 00 00 00 │ 00 00 00 00 00 00 00 00
0B0:00 00 00 00 00 00 00 00 │ 00 00 00 00 00 00 00 00
0C0:00 00 

; Подпрограмма реализации задержки (итого ((R5-1)*256+R4+R5+1)*2 маш.циклов)
0C2:EC C2	L_0C2	DJNZ	R4,L_0C2 ; Цикл по R4 (итого 2*R4 маш.циклов)
0C4:ED C2		DJNZ	R5,L_0C2 ; Цикл по R5 (R4 уже 256 циклов)
0C6:93			RETR
; Подпрограмма воспроизведения щелчка
0C7:B8 22	L_0C7	MOV	R0,#22	; Разрешен щелчок в байте параметров ?
0C9:F0			MOV	A,@R0
0CA:72 CE		JB3	L_0CE	; Да - разрешен
0CC:04 DC		JMP	L_0DC	; Иначе возврат
0CE:B9 21	L_0CE	MOV	R1,#21	; Прочесть копию порта P1 и установить
0D0:23 08		MOV	A,#08H	; 3-й бит (звук, высокий уровень)
0D2:61			ADD	A,@R1
0D3:39			OUTL	P1,A	; Вывести в порт P1
0D4:BC 7F		MOV	R4,#7FH	; Пауза
0D6:BD 01		MOV	R5,#01
0D8:14 C2		CALL	L_0C2
0DA:F1			MOV	A,@R1	; Сбросить в порту P1 3-й бит (звук,
0DB:39			OUTL	P1,A	; низкий уровень)
0DC:93		L_0DC	RETR
; Обработка действия - воспроизведение звука
0DD:B8 22	L_0DD	MOV	R0,#22H	; Разрешен звуковой сигнал ?
0DF:F0			MOV	A,@R0
0E0:92 E4		JB4	L_0E4	; Да - воспроизвести
0E2:04 F5		JMP	L_0F5	; Иначе возврат
; Подпрограмма выдачи звукового сигнала (1.97 кГц, 65 мс)
0E4:BE FE	L_0E4	MOV	R6,#0FEH ; Количество полупериодов (254)
0E6:B9 21		MOV	R1,#21H	; Адрес сохранения порта P1
0E8:F1		L_0E8	MOV	A,@R1
0E9:D3 08		XRL	A,#08H	; Переключить бит 3 (зуммер)
0EB:39			OUTL	P1,A	; Вывести в порт
0EC:BC 1E		MOV	R4,#1EH	; Длина задержки (30)
0EE:BD 01		MOV	R5,#01H	; Кол-во циклов задержки
0F0:14 C2		CALL	L_0C2	; Задержка
0F2:A1			MOV	@R1,A	; Сохранить значение порта P1 в 21H
0F3:EE E8		DJNZ	R6,L_0E8 ; Цикл по R6
0F5:93		L_0F5	RETR
; Подпрограмма сброса битов в байте параметров
0F6:B9 22	L_0F6	MOV	R1,#22H
0F8:F1			MOV	A,@R1	; Прочесть значение байта параметров
0F9:48			ORL	A,R0	; Установить нужный бит
0FA:D8			XRL	A,R0	; Сбросить нужный бит
0FB:A1			MOV	@R1,A	; Записать байт параметров
0FC:93			RETR

                                             00 00 00
100:00 00 00 00 00 00 00 00 │ 00 00 00 00 00 00 00 00
110:00 00 00 00 00 

; Подпрограмма чтения переданного кода с ЭВМ
115:BF 00	L_115	MOV	R7,#0	; Принимаемый байт равен нулю
117:FF			MOV	A,R7
118:B9 08		MOV	R1,#8H	; Кол-во принимаемых битов
11A:BC 15	L_11A	MOV	R4,#15	; Пауза
11C:BD 01		MOV	R5,#1H
11E:14 C2		CALL	L_0C2
120:86 2A		JNI	L_12A	; Низкий уровень на линии INT
122:FF			MOV	A,R7	; Установить бит 0 в принимаемом
123:43 01		ORL	A,#1H	; байте (высокий уровень INT)
125:77		L_125	RR	A	; Сдвинуть разряды в приним.байте
126:AF			MOV	R7,A
127:E9 1A		DJNZ	R1,L_11A; Цикл по кол-ву битов
129:93			RETR
12A:00		L_12A	NOP		; Ничено не делать (низк.уровень INT)
12B:24 25 		JMP	L_125
; Подпрограмма установки битов в байте параметров (R0 - устанавливаемые биты)
12D:B9 22	L_12D	MOV	R1,#22H
12F:F1			MOV	A,@R1	; Прочесть байт параметров
130:48			ORL	A,R0	; Установить заданные биты
131:A1			MOV	@R1,A	; Записать байт параметров
132:93			RETR
; Начальный запуск
133:C5		L_133	SEL	RB0	; Выбрать банк 0 регистров
134:75			ENT0	CLK	; Разрешить выдачу импульсов на T0
135:25			EN	TCNTI	; Разр.прер.от таймера по переполнению
136:89 10		ORL	P1,#10H	; Сбросить триггер D11, вход T1
138:99 EF		ANL	P1,#0EFH
13A:8A F0		ORL	P2,#0F0H ; Зажечь все светодиоды
13C:89 20		ORL	P1,#20H
13E:14 E4		CALL	L_0E4	; Издать звуковой сигнал (130 мс,2 кГц)
140:14 E4		CALL	L_0E4
142:9A 0F		ANL	P2,#0FH	; Погасить все светодиоды
144:99 DF		ANL	P1,#0DFH
146:14 1F		CALL	L_01F	; Очистка ОЗУ и регистров
148:B9 22		MOV	R1,#22H	; Установить параметры - разрешен авто-
14A:B1 38		MOV	@R1,#38H; повтор, звук, щелчок
14C:B8 21		MOV	R0,#21H	; Значение порта P1 - выход - стоп-бит
14E:B0 C0		MOV	@R0,#0C0H
150:86 53	L_150	JNI	L_153	; Нет прерываний
152:05			EN	I	; Разрешить прерывания
153:BB 08	L_153	MOV	R3,#08H	; Начать на мульплексоре с 7 (8-1)
155:B9 23	L_155	MOV	R1,#23H	; Начнем опрос с порта 7
157:B1 03		MOV	@R1,#03H
159:CB			DEC	R3	; Перейти к пред.каналу мульплексора
15A:B8 21		MOV	R0,#21H	; Прочесть копию P1
15C:F0			MOV	A,@R0
15D:53 F8		ANL	A,#0F8H	; Очистить три младших бита
15F:6B			ADD	A,R3	; Добавить номер канала мультиплексора
160:A0			MOV	@R0,A	; Сохранить в памяти копию P1
161:39			OUTL	P1,A	; Вывести в порт (выбрать канал)
162:BA 01	L_162	MOV	R2,#01H	; R2 - бегущая единица (биты с 0 по 3)
164:74 24	L_164	CALL	L_324	; Опрос клавиатуры и получ.адреса кода
166:46 FA		JNT1	1FA	; Триггер не установлен
168:89 10		ORL	P1,#10H	; Сброс триггера
16A:99 EF		ANL	P1,#0EFH
16C:BC 45		MOV	R4,#45H
16E:BD 02		MOV	R5,#02
170:14 C2		CALL	L_0C2	; Пауза на 656 маш.циклов (около 2 мс)
172:74 24		CALL	L_324	; Опрос клавиатуры и получ.адреса кода
174:46 FA		JNT1	L_1FA	; Триггер не установлен (дребезг)
176:89 10		ORL	P1,#10H	; Сброс триггера
178:99 EF		ANL	P1,#0EFH
17A:B8 2F		MOV	R0,#2FH
17C:F0			MOV	A,@R0
17D:D3 03		XRL	A,#03	; Уже нажато три клавиши ?
17F:C6 EF		JZ	L_1EF	; Да
181:00			NOP
182:00			NOP
183:00			NOP
184:00			NOP
185:00			NOP
186:FF			MOV	A,R7
187:E3			MOVP3	A,@A	; Чтение кода клавиши с таблицы
188:AE			MOV	R6,A	; Занести в R6
189:B8 30		MOV	R0,#30	; Сохранить код в ячейке 30H
18B:A0			MOV	@R0,A
18C:FE			MOV	A,R6	
18D:C6 E2		JZ	L_1E2	; Нажат правый ВР
18F:D3 AF		XRL	A,#0AFH
191:C6 CD		JZ	L_1CD	; Нажата СУ
193:FE			MOV	A,R6
194:D3 AE		XRL	A,#0AEH
196:C6 D5		JZ	L_1D5	; Нажат левый ВР
198:B9 28		MOV	R1,#28H
19A:FE			MOV	A,R6
19B:D1			XRL	A,@R1
19C:C6 EF		JZ	L_1EF	; Нажата третья сохран.клавиша
19E:B9 29		MOV	R1,#29H
1A0:FE			MOV	A,R6
1A1:D1			XRL	A,@R1
1A2:C6 F6		JZ	L_1F6	; Нажата вторая сохран.клавиша
1A4:B9 2A		MOV	R1,#2AH
1A6:FE			MOV	A,R6
1A7:D1			XRL	A,@R1
1A8:C6 F6		JZ	L_1F6	; Нажата первая сохран.клавиша
1AA:B8 27		MOV	R0,#27H
1AC:B0 0B		MOV	@R0,#0BH; Длительн. между нажатием и повтором
1AE:B9 29		MOV	R1,#29H	; Сдвиг сохраненных клавиш из 29H
1B0:B8 2A		MOV	R0,#2AH	; в 2AH, из 28H в 29H
1B2:F1			MOV	A,@R1	; (2AH) := (29H)
1B3:A0			MOV	@R0,A
1B4:B8 28		MOV	R0,#28
1B6:F0			MOV	A,@R0	; (29H) := (28H)
1B7:A1			MOV	@R1,A
1B8:FE			MOV	A,R6
1B9:A0			MOV	@R0,A	; Занести в 28H код нажатой клавиши
1BA:B9 2C		MOV	R1,#2CH	; Сдвиг сохр.адресов в табл. из 2CH
1BC:B8 2D		MOV	R0,#2DH	; в 2DH, из 2BH в 2CH
1BE:F1			MOV	A,@R1	; (2AH) := (29H)
1BF:A0			MOV	@R0,A
1C0:B8 2B		MOV	R0,#2BH
1C2:F0			MOV	A,@R0	; (29H) := (28H)
1C3:A1			MOV	@R1,A
1C4:FF			MOV	A,R7
1C5:A0			MOV	@R0,A	; Занести в 2BH адрес в таблице
1C6:B8 2F		MOV	R0,#2FH
1C8:10			INC	@R0	; Увеличить кол-во нажатых клавиш
1C9:14 68		CALL	L_068	; Передать код клавиши в ЭВМ
1CB:44 82		JMP	L_282	; На сканирование следующей клавиши
1CD:B8 36	L_1CD	MOV	R0,#36H	; Обработка нажатия СУ
1CF:F0			MOV	A,@R0
1D0:12 F6		JB0	L_1F6	; Клавиша СУ уже нажата
1D2:10			INC	@R0	; Установить признак нажатия СУ
1D3:24 DE		JMP	L_1DE	; На передачу кода в ЭВМ
1D5:B8 36	L_1D5	MOV	R0,#36H	; Обработка нажатия левого ВР
1D7:F0			MOV	A,@R0
1D8:52 F6		JB2	L_1F6	; Левый ВР нажат
1DA:F0			MOV	A,@R0
1DB:03 04		ADD	A,#04H	; Установить признак нажатия лев.ВР
1DD:A0			MOV	@R0,A
1DE:14 68	L_1DE	CALL	L_068	; Передать код клавиши в ЭВМ
1E0:44 82		JMP	L_282	; Дальше на сканирование
1E2:B8 36	L_1E2	MOV	R0,#36H	; Обработка нажатия правого ВР
1E4:F0			MOV	A,@R0
1E5:32 F6		JB1	L_1F6	; Правый ВР нажат
1E7:10			INC	@R0	; Установить признак нажатия пр.ВР
1E8:10			INC	@R0
1E9:BE AE		MOV	R6,#0AEH; В качестве кода клавиши исп. 0AEH
1EB:14 6C		CALL	L_06C	; Передать код клавиши в ЭВМ
1ED:44 82		JMP	L_282	; Дальше на сканирование
1EF:B8 27	L_1EF	MOV	R0,#27H	; Обработка послед.клавиши
1F1:F0			MOV	A,@R0	; Вычесть счетчик длит.нажатия
1F2:07			DEC	A
1F3:C6 F8		JZ	L_1F8	; Достиг нуля - на обработку
1F5:A0			MOV	@R0,A
1F6:44 82	L_1F6	JMP	L_282	; Дальше на сканирование
1F8:44 9B	L_1F8	JMP	L_29B	; На обработку автоповтора
1FA:89 10	L_1FA	ORL	P1,#10H	; Клавиша не нажата - сброс триггера
1FC:99 EF		ANL	P1,#0EFH
1FE:54 CA		CALL	L_2CA	; Обработка действий (звук, щелчок)
200:B8 36		MOV	R0,#36	; Прочесть состояние регистровых
202:F0			MOV	A,@R0	; клавиш
203:C6 37		JZ	L_237	; Ни одна не нажата
205:67			RRC	A	; Нажата СУ ?
206:E6 12		JNC	L_212	; Нет
208:FF			MOV	A,R7
209:D3 CF		XRL	A,#CF	; Сканировалась клавиша СУ ?
20B:96 12		JNZ	L_212	; Нет
20D:F0			MOV	A,@R0	; Сбросить бит 0 в байте состояния
20E:07			DEC	A	; регистровых клавиш (нажата СУ)
20F:A0			MOV	@R0,A
210:44 31		JMP	L_231	; На передачу кода отжатия
212:F0		L_212	MOV	A,@R0
213:67			RRC	A	; Нажат левый ВР ?
214:67			RRC	A
215:67			RRC	A
216:E6 23		JNC	L_223	; Нет
218:FF			MOV	A,R7
219:D3 CC		XRL	A,#0CCH	; Сканировался левый ВР ?
21B:96 23		JNZ	L_223	; Нет
21D:F0			MOV	A,@R0	; Сбросить бит 2 в байте состояния
21E:D3 04		XRL	A,#04H	; регистровых клавиш (левый ВР)
220:A0			MOV	@R0,A
221:44 31		JMP	L_231	; На передачу кода отжатия
223:F0		L_223	MOV	A,@R0
224:67			RRC	A	; Нажат правый ВР ?
225:67			RRC	A
226:E6 37		JNC	L_237	; Нет
228:FF			MOV	A,R7
229:D3 9E		XRL	A,#9EH	; Сканировался правый ВР ?
22B:96 37		JNZ	L_237	; Нет
22D:F0			MOV	A,@R0	; Сбросить бит 1 в байте состояния
22E:D3 02		XRL	A,#02H	; регистровых клавиш (правый ВР)
230:A0			MOV	@R0,A
231:BE B3	L_231	MOV	R6,#0B3H; Передать код отжатия в ЭВМ
233:14 6C		CALL	L_06C
235:44 82		JMP	L_282	; Дальше на сканирование
237:B8 2F	L_237	MOV	R0,#2FH	; Кол-во нажатых клавиш равно нулю ?
239:F0			MOV	A,@R0
23A:C6 82		JZ	L_282	; Да - дальше на сканирование
23C:B8 2B		MOV	R0,#2BH	; Обрабатываемая клавиша равна
23E:F0			MOV	A,@R0	; третьей нажатой ?
23F:DF			XRL	A,R7
240:96 5B		JNZ	L_25B	; Нет
242:B9 2C		MOV	R1,#2CH	; Копирование из 2CH в 2BH
244:F1			MOV	A,@R1
245:A0			MOV	@R0,A
246:B8 2D		MOV	R0,#2DH	; Копирование из 2DH в 2CH
248:F0			MOV	A,@R0
249:A1			MOV	@R1,A
24A:B0 00		MOV	@R0,#0	; Занести в 2DH ноль
24C:B8 29		MOV	R0,#29H	; Копирование из 29H в 28H
24E:B9 28		MOV	R1,#28H
250:F0			MOV	A,@R0
251:A1			MOV	@R1,A
252:B9 2A		MOV	R1,#2AH	; Копирование из 2AH в 29H
254:F1			MOV	A,@R1
255:A0			MOV	@R0,A
256:B1 00		MOV	@R1,#0	; Занести в 2AH ноль
258:44 7D		JMP	L_27D
25A:00			NOP
25B:B8 2C	L_25B	MOV	R0,#2CH	; Обрабатываемая клавиша равна
25D:F0			MOV	A,@R0	; второй нажатой ?
25E:DF			XRL	A,R7
25F:96 71		JNZ	L_271	; Нет
261:B9 2D		MOV	R1,#2DH	; Копирование из 2DH в 2CH
263:F1			MOV	A,@R1
264:A0			MOV	@R0,A
265:B1 00		MOV	@R1,#0	; Занести в 2DH ноль
267:B8 29		MOV	R0,#29H	; Копирование из 2AH в 29H
269:B9 2A		MOV	R1,#2AH
26B:F1			MOV	A,@R1
26C:A0			MOV	@R0,A
26D:B1 00		MOV	@R1,#0	; Занести в 2AH ноль
26F:44 7D		JMP	L_27D
271:B8 2D	L_271	MOV	R0,#2DH	; Обрабатываемая клавиша равна
273:F0			MOV	A,@R0	; первой нажатой ?
274:DF			XRL	A,R7
275:96 82		JNZ	l_282	; Нет - дальше на сканирование
277:B0 00		MOV	@R0,#0	; Занести в 2DH ноль
279:B8 2A		MOV	R0,#2A
27B:B0 00		MOV	@R0,#0	; Занести в 2AH ноль
27D:B8 2F	L_27D	MOV	R0,#2FH	; Уменьшить кол-во нажатых клавиш
27F:F0			MOV	A,@R0
280:07			DEC	A
281:A0			MOV	@R0,A
282:FA		L_282	MOV	A,R2	; Бегущая единица достигла 3-го бита ?
283:72 89		JB3	L_289	; Да - надо перейти к след.порту
285:E7			RL	A	; Передвинуть бег.единицу на след.бит
286:AA			MOV	R2,A
287:24 64		JMP	L_164	; Дальше на опрос клавиатуры
289:B9 23	L_289	MOV	R1,#23	; Достигли конечного порта (P4...P7) ?
28B:F1			MOV	A,@R1
28C:C6 93		JZ	L_293	; Да
28E:F1			MOV	A,@R1	; Перейти к след.порту (P4...P7)
28F:07			DEC	A
290:A1			MOV	@R1,A
291:24 62		JMP	L_162	; Дальше на опрос, бег.единица = 1
293:FB		L_293	MOV	A,R3	; Достигли конеч.линии мульплексора ?
294:C6 98		JZ	L_298	; Да
296:24 55		JMP	L_155	; Начать опрос со след.линии
298:24 50	L_298	JMP	L_150	; Начать опрос с начала
29A:00			NOP 
29B:FE		L_29B	MOV	A,R6	; Обрабатывается клавиша ВК ?
29C:D3 BD		XRL	A,#0BDH
29E:C6 82		JZ	L_282	; Да - нет автоповтора
2A0:FE			MOV	A,R6	; Обрабатывается верхний ряд ?
2A1:F2 A5		JB7	L_2A5	; Нет
2A3:44 82		JMP	L_282	; Да - нет автоповтора
2A5:53 70	L_2A5	ANL	A,#70	; Верхний ряд ?
2A7:C6 82		JZ	L_282	; Да - нет автоповтора
2A9:B8 22	L_2A9	MOV	R0,#22	; Автоповтор разрешен ?
2AB:F0			MOV	A,@R0
2AC:B2 B0		JB5	L_2B0	; Да - автоповтор разрешен
2AE:44 82		JMP	L_282	; Нет - дальше на сканирование
2B0:BE B4	L_2B0	MOV	R6,#B4	; Передать в ЭВМ код автоповтора
2B2:14 6C		CALL	L_06C
2B4:54 CA		CALL	L_2CA	; Обработка действий
2B6:14 C7		CALL	L_0C7	; Щелчок (если разрешен)
2B8:74 24		CALL	L_324	; Просканировать клавиатуру
2BA:46 C6		JNT1	L_2C6	; Клавиша уже отжата
2BC:14 95		CALL	L_095	; Сбросить триггер
2BE:BC FF		MOV	R4,#0FFH; Пауза
2C0:BD 0F		MOV	R5,#0FH
2C2:14 C2		CALL	L_0C2
2C4:44 A9		JMP	L_2A9	; Далее на автоповтор
2C6:14 95	L_2C6	CALL	L_095	; Сбросить триггер
2C8:44 82		JMP	L_282	; Дальше на сканирование
; Обработка действий (инициализация, звуковой сигнал, щелчок)
2CA:B8 25	L_2CA	MOV	R0,#25H
2CC:F0			MOV	A,@R0	; Прочесть байт действий
2CD:C6 D5		JZ	L_2D5	; Ничего не задано - возврат
2CF:12 FC		JB0	L_2FC	; Инициализация
2D1:32 D6		JB1	L_2D6	; Звуковой сигнал
2D3:92 E2		JB4	L_2E2	; Щелчок
2D5:93		L_2D5	RETR
; Обработка действия - звуковой сигнал
2D6:53 FD	L_2D6	ANL	A,#0FDH	; Сбросить в байте действий бит 1 - 
2D8:A0			MOV	@R0,A	; звуковой сигнал
2D9:14 DD		CALL	L_0DD	; Воспроизвести звук
2DB:93			RETR

 00 BE BA 14
2E0:6C 93 

; Обработка действия - щелчок
2E2:53 EF	L_2E2	ANL	A,#EF	; Сбросить в байте действий бит 4 - 
2E4:A0			MOV	@R0,A	; щелчок
2E5:14 C7		CALL	L_0C7	; Воспроизвести щелчок
2E7:93			RETR
; Передача в ЭВМ кодов 1, 0
2E8:00		L_2E8	NOP
2E9:BE 01		MOV	R6,#1H	; Передать в ЭВМ код 1
2EB:14 6C		CALL	L_06C
2ED:BC FF		MOV	R4,#FF	; Пауза
2EF:BD 01		MOV	R5,#1H
2F1:14 C2		CALL	L_0C2
2F3:BE 00		MOV	R6,#0	; Передать в ЭВМ код 0
2F5:14 6C		CALL	L_06C
2F7:93			RETR
2F8:00			NOP
2F9:00			NOP
2FA:00			NOP
2FB:00			NOP
; Инициализация
2FC:00		L_2FC	NOP		; Передача в ЭВМ кодов 1, 0, 0, 0
2FD:BE 01		MOV	R6,#1H	; Передать в ЭВМ код 1
2FF:14 6C		CALL	L_06C
301:BD 01		MOV	R5,#1H	; Пауза
303:BC FF		MOV	R4,#0FFH
305:14 C2		CALL	L_0C2
307:BE 00		MOV	R6,#0	; Передать в ЭВМ код 0
309:14 6C		CALL	L_06C
30B:BD 01		MOV	R5,#1H	; Пауза
30D:BC FF		MOV	R4,#0FFH
30F:14 C2		CALL	L_0C2
311:14 6C		CALL	L_06C	; Передать в ЭВМ код 0
313:BD 01		MOV	R5,#1H	; Пауза
315:BC FF		MOV	R4,#0FFH
317:14 C2		CALL	L_0C2
319:14 6C		CALL	L_06C	; Передать в ЭВМ код 0
31B:9A 0F		ANL	P2,#0FH	; Погасить индикаторы
31D:94 EB		CALL	L_4EB	; Сброс бита индикатора ЛАТ
31F:B8 38		MOV	R0,#38	; Разрешен автоповтор, звуковой
321:34 2D		CALL	L_12D	; сигнал, щелчок
323:93			RETR
; Подпрограмма выбора адреса данных в таблице кодов клавиш и установки
; триггера D11 через порты P4...P7 (R2 - бегущая единица, R3 - номер
; канала мультиплексора, в R7 получается адрес кода клавиши)
324:FA		L_324	MOV	A,R2	; Бегущая единица
325:12 2F		JB0	L_32F	; Бит 0 - таблица с 80H
327:32 33		JB1	L_333	; Бит 1 - таблица с 90H
329:52 37		JB2	L_337	; Бит 2 - таблица с A0H
32B:BF B0		MOV	R7,#0B0H; Таблица с B0H (бит 3)
32D:64 39 		JMP	L_339
32F:BF 80	L_32F	MOV	R7,#80H	; Таблица с 80H (бит 0)
331:64 39		JMP	L_339
333:BF 90	L_333	MOV	R7,#90H	; Таблица с 90H (бит 1)
335:64 39		JMP	L_339
337:BF A0	L_337	MOV	R7,#0A0H; Таблица с A0H (бит 2)
339:FB		L_339	MOV	A,R3	; Добавить к адресу кода номер канала
33A:6F			ADD	A,R7	; мультиплексора
33B:AF			MOV	R7,A
33C:B9 23		MOV	R1,#23H	; Прочесть адрес порта (00-P4, 01-P6,
33E:F1			MOV	A,@R1	; 10-P5, 11-P7)
33F:12 53		JB0	L_353	; Переход по адресу порта
341:32 49		JB1	L_349
343:FA			MOV	A,R2	; Порт 4 - установка бегущей единицы
344:3C			MOVD	P4,A
345:23 00		MOV	A,#0	; Порт 4 - сброс бегущей единицы
347:3C 			MOVD	P4,A
348:93			RETR
349:FF		L_349	MOV	A,R7
34A:03 08		ADD	A,#08H	; Добавить к адресу кода 8H
34C:AF			MOV	R7,A
34D:FA			MOV	A,R2	; Порт 5 - установка бегущей единицы
34E:3D			MOVD	P5,A
34F:23 00		MOV	A,#0	; Порт 5 - сброс бегущей единицы
351:3D			MOVD	P5,A
352:93			RETR
353:32 5F	L_353	JB1	L_35F
355:FF			MOV	A,R7
356:03 40		ADD	A,#40H	; Добавить к адресу кода 40H
358:AF			MOV	R7,A
359:FA			MOV	A,R2	; Порт 6 - установка бегущей единицы
35A:3E			MOVD	P6,A
35B:23 00		MOV	A,#0	; Порт 6 - сброс бегущей единицы
35D:3E			MOVD	P6,A
35E:93			RETR
35F:FF		L_35F	MOV	A,R7
360:03 48		ADD	A,#48H	; Добавить к адресу кода 48H
362:AF			MOV	R7,A
363:FA			MOV	A,R2	; Порт 7 - установка бегущей единицы
364:3F			MOVD	P7,A
365:23 00		MOV	A,#0	; Порт 7 - сброс бегущей единицы
367:3F			MOVD	P7,A
368:93			RETR

                                 00 00 00 00 00 00 00
370:00 00 00 00 00 00 00 00 │ 00 00 00 00 00 00 00 00

; Таблица кодов клавиш
380:A2 81 80 A3 98 9E 9B 9A │ A4 83 82 9F 95 9C 94 A0
390:A1 FF 7D 9D 92 99 97 96 │ BC FF 74 C4 FF BD 00 FF
3A0:8F 8C 7D 8E FF FF A9 A8 │ F5 73 72 C9 F1 FA F7 FD
3B0:8A 8B 7C 8D FF AA A7 FF │ EF 71 FF F9 CA F6 FB F2
3C0:E5 EA 68 F0 F3 EC ED E7 │ FC 56 57 BF AE BE B0 AF
3D0:E0 67 66 E6 E8 EB E3 E2 │ C0 59 58 C1 B1 C6 B2 C2
3E0:DC DB 65 E1 D4 DD D9 DE │ C5 FF 5A CC FF C7 C3 C8
3F0:D7 D6 64 D8 FF D2 FF D3 │ D0 CB FE D1 FF CD FF CE

; Обработка прерывания по входу INT (данные от ЭВМ)
400:D5		L_400	SEL	RB1	; Выбрать банк регистров 1
401:15			DIS	I	; Запретить прерывания
402:35			DIS	TCNTI	; Запретить прерывания от таймера
403:B8 39		MOV	R0,#39H	; Сохранить A
405:A0			MOV	@R0,A
406:BD 01		MOV	R5,#1H	; Небольшая пауза
408:BC 08		MOV	R4,#8H
40A:14 C2		CALL	L_0C2
40C:86 10		JNI	L_410	; Есть старт-бит на входе
40E:C4 7D		JMP	L_67D	; Старт-бита нет - выход
410:34 15	L_410	CALL	L_115	; Прочесть код, переданный от ЭВМ
412:FF			MOV	A,R7	; Код от 80H до 0FFH ?
413:F2 41		JB7	L_441	; Да
415:FF			MOV	A,R7
416:D3 23		XRL	A,#23H	; Код равен 23H (разрешить звук) ?
418:96 20		JNZ	L_420	; Нет
41A:BA 08		MOV	R2,#8H	; Обработка 2-го байта (звук)
41C:BB 00		MOV	R3,#0
41E:C4 87		JMP	L_687	; Запуск таймера и выход из прерывания
420:FF		L_420	MOV	A,R7
421:D3 11		XRL	A,#11H	; Код равен 11H (выкл.индикаторов) ?
423:96 2B		JNZ	L_42B	; Нет
425:BA 02		MOV	R2,#2H	; Обработка 2-го байта (выкл.инд.)
427:BB 00		MOV	R3,#0
429:C4 87		JMP	L_687	; Запуск таймера и выход из прерывания
42B:FF		L_42B	MOV	A,R7
42C:D3 13		XRL	A,#13H	; Код равен 13H (вкл.индикаторов) ?
42E:96 36		JNZ	L_436	; Нет
430:BA 01		MOV	R2,#1H	; Обработка 2-го байта (вкл.инд.)
432:BB 00		MOV	R3,#0
434:C4 87		JMP	L_687	; Запуск таймера и выход из прерывания
436:FF		L_436	MOV	A,R7
437:D3 1B		XRL	A,#1BH	; Код равен 1BH (щелчок) ?
439:96 E9		JNZ	L_4E9	; Нет
43B:BA 04		MOV	R2,#4H	; Обработка 2-го байта (щелчок)
43D:BB 00		MOV	R3,#0
43F:C4 87		JMP	L_687	; Запуск таймера и выход из прерывания
441:D2 AB	L_441	JB6	L_4AB	; В коде уст.6-й бит(диапазон C0H-FFH)
443:D3 A1		XRL	A,#0A1H	; Код равен A1H (запрет.звук) ?
445:96 4D		JNZ	L_44D	; Нет
447:B8 10		MOV	R0,#10H	; Сбросить бит 4 в байте параметров
449:14 F6		CALL	L_0F6	; (запретить звук)
44B:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
44D:FF		L_44D	MOV	A,R7
44E:D3 99		XRL	A,#99	; Код равен 99H (запрет щелчка) ?
450:96 58		JNZ	L_458	; Нет
452:B8 08		MOV	R0,#8H	; Сбросить бит 3 в байте параметров
454:14 F6		CALL	L_0F6	; (запретить щелчок)
456:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
458:FF		L_458	MOV	A,R7
459:D3 A7		XRL	A,#0A7H	; Код равен A7H (выдача звука) ?
45B:96 65		JNZ	L_465	; Нет
45D:B8 25		MOV	R0,#25H	; Установить бит 1 в байте действий
45F:F0			MOV	A,@R0	; (вырабатывается звуковой сигнал)
460:43 02		ORL	A,#2H
462:A0			MOV	@R0,A
463:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
465:FA		L_465	MOV	A,R2	; Обрабатывается второй байт ?
466:96 8F		JNZ	L_48F	; Да
468:FF			MOV	A,R7
469:D3 89		XRL	A,#89H	; Код равен 89H (вывод данн.запрещ.) ?
46B:96 7C		JNZ	L_47C	; Нет
46D:BE B7		MOV	R6,#0B7H; Послать в ЭВМ код 0B7H
46F:14 6C		CALL	L_06C
471:B8 25		MOV	R0,#25H	; Установить в байте действий бит 3
473:F0			MOV	A,@R0	; (вывод данных запрещен)
474:43 08		ORL	A,#8H
476:A0			MOV	@R0,A
477:8A 10		ORL	P2,#10	; Вкл.индикатор СТОП-КАДР
479:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
47B:00			NOP
47C:FF		L_47C	MOV	A,R7
47D:D3 8B		XRL	A,#8BH	; Код равен 8BH (вывод данн.разреш.) ?
47F:96 8F		JNZ	L_48F	; Нет
481:B8 25		MOV	R0,#25H	; Сбросить в байте действий бит 3
483:F0			MOV	A,@R0	; (разрешить вывод данных)
484:53 F7		ANL	A,#0F7H
486:A0			MOV	@R0,A
487:9A EF		ANL	P2,#0EFH; Выключить индикатор СТОП-КАДР
489:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
48B:00			NOP
48C:00			NOP
48D:00			NOP
48E:00			NOP
48F:FF		L_48F	MOV	A,R7
490:D3 9F		XRL	A,#9FH	; Код равен 9FH (выдача щелчка) ?
492:96 9C		JNZ	L_49C	; Нет
494:B8 25		MOV	R0,#25H	; Установить в байте действий бит 4
496:F0			MOV	A,@R0	; (вырабатывается щелчок)
497:43 10		ORL	A,#10H
499:A0			MOV	@R0,A
49A:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
49C:FF		L_49C	MOV	A,R7
49D:D3 AB		XRL	A,#0ABH	; Код равен ABH (выдача 1, 0) ?
49F:96 E9		JNZ	L_4E9	; Нет
4A1:BC 1F		MOV	R4,#1FH	; Пауза
4A3:BD 01		MOV	R5,#1H
4A5:14 C2		CALL	L_0C2
4A7:54 E8		CALL	L_2E8	; Передача в ЭВМ кодов 1, 0
4A9:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
4AB:72 C4	L_4AB	JB3	L_4C4	; В коде установлены биты 7,6,3
4AD:92 D2		JB4	L_4D2	; В коде установл.биты 7,6,4 сброш. 3
4AF:D3 E1		XRL	A,#0E1H	; Код равен E1H (запрет автоповтора) ?
4B1:96 B9		JNZ	L_4B9	; Нет
4B3:B8 20	L_4B3	MOV	R0,#20	; Сбросить бит 5 в байте параметров
4B5:14 F6		CALL	L_0F6	; (запретить автоповтор)
4B7:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
4B9:FF		L_4B9	MOV	A,R7
4BA:D3 E3		XRL	A,#0E3H	; Код равен E3H (разреш.автоповтора) ?
4BC:96 E9		JNZ	L_4E9	; Нет
4BE:B8 20		MOV	A,#20	; Установить бит 5 в байте параметров
4C0:34 2D		CALL	L_12D	; (разрешить автоповтор)
4C2:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
4C4:D3 FD	L_4C4	XRL	A,#0FDH	; Код равен FDH (инициализация) ?
4C6:96 D2		JNZ	L_4D2	; Нет
4C8:BC 1F		MOV	R4,#1FH	; Пауза
4CA:BD 01		MOV	R5,#1
4CC:14 C2		CALL	L_0C2
4CE:54 FC		CALL	L_2FC	; Инициализация
4D0:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
4D2:D3 D3	L_4D2	XRL	A,#0D3H	; Код равен D3H (передача BAH) ?
4D4:96 E2		JNZ	L_4E2	; Нет
4D6:BC 1F		MOV	R4,#1FH	; Пауза
4D8:BD 01		MOV	R5,#1H
4DA:14 C2		CALL	L_0C2
4DC:BE BA		MOV	R6,#0BAH; Передать в ЭВМ код 0BAH
4DE:14 6C		CALL	L_06C
4E0:C4 7A		JMP	L_67A	; Остановить таймер и выйти из прерыв.
4E2:FF		L_4E2	MOV	A,R7
4E3:D3 D9		XRL	A,#0D9H	; Код равен D9H (запрет автоповтора) ?
4E5:96 E9		JNZ	L_4E9	; Нет
4E7:84 B3		JMP	L_4B3	; Да - на запрет автоповтора
4E9:A4 C0	L_4E9	JMP	L_5C0
; Сброс бита индикатора ЛАТ
4EB:B8 21	L_4EB	MOV	R0,#21H
4ED:F0			MOV	A,@R0	; Прочесть копию порта P1
4EE:53 DF		ANL	A,#0DFH	; Сбросить бит 5 (индикатор ЛАТ)
4F0:A0			MOV	@R0,A	; Сохранить копию порта
4F1:B8 25		MOV	R0,#25
4F3:B0 00		MOV	@R0,#0	; Байт действий равен нулю
4F5:93			RETR

                      00 BE │ 01 14 6C BD 01 BC FF 14
500:C2 BE 00 14 6C BD 01 BC │ FF 14 C2 14 6C BD 01 BC
510:FF 14 C2 14 6C 9A 0F 94 │ EB B8 38 34 2D 93 00 00
520:00 00 00 00 00 00 00 00 │ 00 00 00 00 00 00 00 00
530:00 

; Обработка включения индикаторов
531:FF		L_531	MOV	A,R7	; Второй байт команды
532:F2 36		JB7	L_536	; Установлен бит 7
534:A4 AF		JMP	L_5AF	; Не установлен - возврат
536:D2 AF	L_536	JB6	L_5AF	; Установлен бит 6 - возврат
538:B2 AF		JB5	L_5AF	; Установлен бит 5 - возврат
53A:92 6A		JB4	L_56A	; Установлен бит 4 (1001....)
53C:72 46		JB3	L_546	; Установлен бит 3 (10001...)
53E:52 4E		JB2	L_54E	; Установлен бит 2 (100001..)
540:32 54		JB1	L_554	; Установлен бит 1 (1000001.)
542:12 8E		JB0	L_58E	; Установлен бит 0 (10000001)
544:A4 AF		JMP	L_5AF	; Возврат (10000000)
546:52 58	L_546	JB2	L_558	; Установлен бит 2 (100011..)
548:32 5E		JB1	L_55E	; Установлен бит 1 (1000101.)
54A:12 7E		JB0	L_57E	; Установлен бит 0 (10001001)
54C:A4 9E		JMP	L_59E	; Обработка 10001000
54E:32 62	L_54E	JB1	L_562	; Установлен бит 1 (1000011.)
550:12 86		JB0	L_586	; Установлен бит 0 (10000101)
552:A4 A6		JMP	L_5A6	; Обработка 10000100
554:12 8A	L_554	JB0	L_58A	; Установлен бит 0 (10000011)
556:A4 AA		JMP	L_5AA	; Обработка 10000010
558:32 66	L_558	JB1	L_566	; Установлен бит 1 (1000111.)
55A:12 76		JB0	L_576	; Установлен бит 0 (10001101)
55C:A4 96		JMP	L_596	; Обработка 10001100
55E:12 7A	L_55E	JB0	L_57A	; Установлен бит 0 (10001011)
560:A4 9A		JMP	L_59A	; Обработка 10001010
562:12 82	L_562	JB0	L_582	; Установлен бит 0 (10000111)
564:A4 A2		JMP	L_5A2	; Обработка 10000110
566:12 72	L_566	JB0	L_572	; Установлен бит 0 (10001111)
568:A4 92		JMP	L_592	; Обработка 10001110
56A:B8 21	L_56A	MOV	R0,#21H	; Обработка 1001.... (выкл. ЛАТ)
56C:F0			MOV	A,@R0	; Прочесть копию порта P1
56D:53 DF		ANL	A,#0DFH	; Сбросить 5-й бит
56F:A0			MOV	@R0,A	; Сохранить копию
570:A4 AC		JMP	L_5AC	; Возврат
572:8A F0	L_572	ORL	P2,#0F0H; Стоп-кадр,фиксация,композ.,ожидание
574:A4 AC		JMP	L_5AC
576:8A D0	L_576	ORL	P2,#0D0H; Стоп-кадр,фиксация,ожидание
578:A4 AC		JMP	L_5AC
57A:8A B0	L_57A	ORL	P2,#0B0H; Стоп-кадр,композиция,ожидание
57C:A4 AC		JMP	L_5AC
57E:8A 90	L_57E	ORL	P2,#90H	; Стоп-кадр,ожидание
580:A4 AC		JMP	L_5AC
582:8A 70	L_582	ORL	P2,#70H	; Фиксация,композиция,ожидание
584:A4 AC		JMP	L_5AC
586:8A 50	L_586	ORL	P2,#50H	; Фиксация,ожидание
588:A4 AC		JMP	L_5AC
58A:8A 30	L_58A	ORL	P2,#30H	; Композиция,ожидание
58C:A4 AC		JMP	L_5AC
58E:8A 10	L_58E	ORL	P2,#10H	; Ожидание
590:A4 AC		JMP	L_5AC
592:8A E0	L_592	ORL	P2,#0E0H; Стоп-кадр,фиксация,композиция
594:A4 AC		JMP	L_5AC
596:8A C0	L_596	ORL	P2,#0C0H; Стоп-кадр,фиксация
598:A4 AC		JMP	L_5AC
59A:8A A0	L_59A	ORL	P2,#0A0H; Стоп-кадр,композиция
59C:A4 AC		JMP	L_5AC
59E:8A 80	L_59E	ORL	P2,#80H	; Стоп-кадр
5A0:A4 AC		JMP	L_5AC
5A2:8A 60	L_5A2	ORL	P2,#60H	; Фиксация,композиция
5A4:A4 AC		JMP	L_5AC
5A6:8A 40	L_5A6	ORL	P2,#40H	; Фиксация
5A8:A4 AC		JMP	L_5AC
5AA:8A 20	L_5AA	ORL	P2,#20H	; Композиция
5AC:BA 00	L_5AC	MOV	R2,#0	; Второй байт не обрабатывать
5AE:65 			STOP	TCNT	; Остановить таймер
5AF:B8 39	L_5AF	MOV	R0,#39	; Восстановить A
5B1:F0			MOV	A,@R0
5B2:C5			SEL	RB0	; Выбрать банк регистров 0
5B3:05			EN	I	; Разрешить прерывание
5B4:25			EN	TCNTI	; Разрешить прерывание по таймеру
5B5:93			RETR

                      00 00 │ 00 00 00 00 00 00 00 00

5C0:FA		L_5C0	MOV	A,R2
5C1:C6 CB		JZ	L_5CB	; Не обрабатывать второй байт
5C3:12 31		JB0	L_531	; Включение индикаторов
5C5:32 FF		JB1	L_5FF	; Выключение индикаторов
5C7:52 E2		JB2	L_5E2	; Разрешение щелчка
5C9:72 CD		JB3	L_5CD	; Разрешение звука
5CB:C4 7D	L_5CB	JMP	L_67D	; Выход из прерывания
5CD:FF		L_5CD	MOV	A,R7	; Второй байт команды
5CE:72 E0		JB3	L_5E0	; Установлен бит 3 - возврат
5D0:92 E0		JB4	L_5E0	; Установлен бит 4 - возврат
5D2:B2 E0		JB5	L_5E0	; Установлен бит 5 - возврат
5D4:D2 E0		JB6	L_5E0	; Установлен бит 6 - возврат
5D6:F2 DA		JB7	L_5DA	; Установлен бит 7 - обработка
5D8:C4 7D		JMP	L_67D	; Выход из прерывания
5DA:B8 10	L_5DA	MOV	R0,#10H	; Установка 4-го бита в байте
5DC:34 2D		CALL	L_12D	; параметров (разрешение звука)
5DE:BA 00		MOV	R2,#0	; Нет обработки второго байта
5E0:C4 7A	L_5E0	JMP	L_67A	; Остановить таймер и выйти из прерыв.
5E2:FF		L_5E2	MOV	A,R7	; Второй байт команды
5E3:72 F5		JB3	L_5F5	; Установлен бит 3 - возврат
5E5:92 F5		JB4	L_5F5	; Установлен бит 4 - возврат
5E7:B2 F5		JB5	L_5F5	; Установлен бит 5 - возврат
5E9:D2 F5		JB6	L_5F5	; Установлен бит 6 - возврат
5EB:F2 EF		JB7	L_5EF	; Установлен бит 7 - обработка
5ED:C4 7D		JMP	L_67D	; Выход из прерывания
5EF:B8 08	L_5EF	MOV	R0,#8H	; Установка 3-го бита в байте
5F1:34 2D		CALL	L_12D	; параметров (разрешение щелчка)
5F3:BA 00		MOV	R2,#0	; Нет обработки второго байта
5F5:C4 7A	L_5F5	JMP	L_67A	; Остановить таймер и выйти из прерыв.

                         00 │ 00 00 00 00 00 00 00

; Обработка выключения индикаторов
5FF:FF		L_5FF	MOV	A,R7	; Второй байт команды
600:F2 04		JB7	L_604	; Установлен бит 7
602:C4 7D		JMP	L_67D	; Не установлен - возврат
604:D2 7D	L_604	JB6	L_67D	; Установлен бит 6 - возврат
606:B2 7D		JB5	L_67D	; Установлен бит 5 - возврат
608:92 38		JB4	L_638	; Установлен бит 4 (1001....)
60A:72 14		JB3	L_614	; Установлен бит 3 (10001...)
60C:52 1C		JB2	L_61C	; Установлен бит 2 (100001..)
60E:32 22		JB1	L_622	; Установлен бит 1 (1000001.)
610:12 5C		JB0	L_65C	; Установлен бит 0 (10000001)
612:C4 7D		JMP	L_67D	; Возврат (10000000)
614:52 26	L_614	JB2	L_626	; Установлен бит 2 (100011..)
616:32 2C 		JB1	L_62C	; Установлен бит 1 (1000101.)
618:12 4C		JB0	L_64C	; Установлен бит 0 (10001001)
61A:C4 6C		JMP	L_66C	; Обработка 10001000
61C:32 30	L_61C	JB1	L_630	; Установлен бит 1 (1000011.)
61E:12 54		JB0	L_654	; Установлен бит 0 (10000101)
620:C4 74		JMP	L_674	; Обработка 10000100
622:12 58	L_622	JB0	L_658	; Установлен бит 0 (10000011)
624:C4 78		JMP	L_678	; Обработка 10000010
626:32 34	L_626	JB1	L_634	; Установлен бит 1 (1000111.)
628:12 44		JB0	L_644	; Установлен бит 0 (10001101)
62A:C4 64		JMP	L_664	; Обработка 10001100
62C:12 48	L_62C	JB0	L_648	; Установлен бит 0 (10001011)
62E:C4 68		JMP	L_668	; Обработка 10001010
630:12 50	L_630	JB0	L_650	; Установлен бит 0 (10000111)
632:C4 70		JMP	L_670	; Обработка 10000110
634:12 40	L_634	JB0	L_640	; Установлен бит 0 (10001111)
636:C4 60		JMP	L_660	; Обработка 10001110
638:B8 21	L_638	MOV	R0,#21H	; Обработка 1001.... (вкл. ЛАТ)
63A:F0			MOV	A,@R0	; Прочесть копию порта P1
63B:43 20		ORL	A,#20H	; Установить 5-й бит
63D:A0			MOV	@R0,A	; Сохранить копию
63E:C4 7A		JMP	L_67A	; Возврат
640:9A 0F	L_640	ANL	P2,#0FH	; Стоп-кадр,фиксация,композ.,ожидание
642:C4 7A		JMP	L_67A
644:9A 2F	L_644	ANL	P2,#2FH	; Стоп-кадр,фиксация,ожидание
646:C4 7A		JMP	L_67A
648:9A 4F	L_648	ANL	P2,#4FH	; Стоп-кадр,композиция,ожидание
64A:C4 7A		JMP	L_67A
64C:9A 6F	L_64C	ANL	P2,#6FH	; Стоп-кадр,ожидание
64E:C4 7A		JMP	L_67A
650:9A 8F	L_650	ANL	P2,#8FH	; Фиксация,композиция,ожидание
652:C4 7A		JMP	L_67A
654:9A AF	L_654	ANL	P2,#AFH	; Фиксация,ожидание
656:C4 7A		JMP	L_67A
658:9A CF	L_658	ANL	P2,#CFH	; Композиция,ожидание
65A:C4 7A		JMP	L_67A
65C:9A EF	L_65C	ANL	P2,#EFH	; Ожидание
65E:C4 7A		JMP	L_67A
660:9A 1F	L_660	ANL	P2,#1FH	; Стоп-кадр,фиксация,композиция
662:C4 7A		JMP	L_67A
664:9A 3F	L_664	ANL	P2,#3FH	; Стоп-кадр,фиксация
666:C4 7A		JMP	L_67A
668:9A 5F	L_668	ANL	P2,#5FH	; Стоп-кадр,композиция
66A:C4 7A		JMP	L_67A
66C:9A 7F	L_66C	ANL	P2,#7FH	; Стоп-кадр
66E:C4 7A		JMP	L_67A
670:9A 90	L_670	ANL	P2,#90H	; Фиксация,композиция
672:C4 7A		JMP	L_67A
674:9A BF	L_674	ANL	P2,#BFH	; Фиксация
676:C4 7A		JMP	L_67A
678:9A DF	L_678	ANL	P2,#DFH	; Композиция
67A:BA 00	L_67A	MOV	R2,#0	; Нет обработки второго байта
67C:65 			STOP	TCNT	; Останов таймера
67D:B8 39	L_67D	MOV	R0,#39	; Восстановить A
67F:F0			MOV	A,@R0
680:C5			SEL	RB0	; Выбрать банк регистров 0
681:25			EN	TCNTI	; Разрешить прерывания от таймера
682:05			EN	I	; Разрешить прерывания по INT
683:93			RETR

                00 00 00 

687:86 87	L_687	JNI	L_687	; Ждем высокий уровень (стоп-бит) ?
689:BB 04		MOV	R3,#4H	; Кол-во циклов ожидания таймера
68B:55			STRT	T	; Запуск таймера
68C:C4 7D		JMP	L_67D	; На возврат из прерывания
